{"ast":null,"code":"'use strict';\n\nvar path = require('path');\nvar fs = require('fs');\nvar inflight = require('inflight');\nvar accessError = require('./access-error.js');\nvar andIgnoreErrors = require('./and-ignore-errors.js');\nvar isFsAccessAvailable = require('./is-fs-access-available.js');\nif (isFsAccessAvailable) {\n  module.exports = fsAccessImplementation;\n} else {\n  module.exports = fsOpenImplementation;\n}\n\n// exposed only for testing purposes\nmodule.exports.fsAccessImplementation = fsAccessImplementation;\nmodule.exports.fsOpenImplementation = fsOpenImplementation;\nfunction fsAccessImplementation(dir, done) {\n  done = inflight('writable:' + dir, done);\n  if (!done) return;\n  fs.access(dir, fs.W_OK, done);\n}\nfunction fsOpenImplementation(dir, done) {\n  done = inflight('writable:' + dir, done);\n  if (!done) return;\n  var tmp = path.join(dir, '.npm.check.permissions');\n  fs.open(tmp, 'w', function (er, fd) {\n    if (er) return done(accessError(dir, er));\n    fs.close(fd, function () {\n      fs.unlink(tmp, andIgnoreErrors(done));\n    });\n  });\n}","map":{"version":3,"names":["path","require","fs","inflight","accessError","andIgnoreErrors","isFsAccessAvailable","module","exports","fsAccessImplementation","fsOpenImplementation","dir","done","access","W_OK","tmp","join","open","er","fd","close","unlink"],"sources":["/Users/hkateliev/node_modules/npm/lib/install/writable.js"],"sourcesContent":["'use strict'\nvar path = require('path')\nvar fs = require('fs')\nvar inflight = require('inflight')\nvar accessError = require('./access-error.js')\nvar andIgnoreErrors = require('./and-ignore-errors.js')\nvar isFsAccessAvailable = require('./is-fs-access-available.js')\n\nif (isFsAccessAvailable) {\n  module.exports = fsAccessImplementation\n} else {\n  module.exports = fsOpenImplementation\n}\n\n// exposed only for testing purposes\nmodule.exports.fsAccessImplementation = fsAccessImplementation\nmodule.exports.fsOpenImplementation = fsOpenImplementation\n\nfunction fsAccessImplementation (dir, done) {\n  done = inflight('writable:' + dir, done)\n  if (!done) return\n  fs.access(dir, fs.W_OK, done)\n}\n\nfunction fsOpenImplementation (dir, done) {\n  done = inflight('writable:' + dir, done)\n  if (!done) return\n  var tmp = path.join(dir, '.npm.check.permissions')\n  fs.open(tmp, 'w', function (er, fd) {\n    if (er) return done(accessError(dir, er))\n    fs.close(fd, function () {\n      fs.unlink(tmp, andIgnoreErrors(done))\n    })\n  })\n}\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAI,CAAC;AACtB,IAAIE,QAAQ,GAAGF,OAAO,CAAC,UAAU,CAAC;AAClC,IAAIG,WAAW,GAAGH,OAAO,CAAC,mBAAmB,CAAC;AAC9C,IAAII,eAAe,GAAGJ,OAAO,CAAC,wBAAwB,CAAC;AACvD,IAAIK,mBAAmB,GAAGL,OAAO,CAAC,6BAA6B,CAAC;AAEhE,IAAIK,mBAAmB,EAAE;EACvBC,MAAM,CAACC,OAAO,GAAGC,sBAAsB;AACzC,CAAC,MAAM;EACLF,MAAM,CAACC,OAAO,GAAGE,oBAAoB;AACvC;;AAEA;AACAH,MAAM,CAACC,OAAO,CAACC,sBAAsB,GAAGA,sBAAsB;AAC9DF,MAAM,CAACC,OAAO,CAACE,oBAAoB,GAAGA,oBAAoB;AAE1D,SAASD,sBAAsBA,CAAEE,GAAG,EAAEC,IAAI,EAAE;EAC1CA,IAAI,GAAGT,QAAQ,CAAC,WAAW,GAAGQ,GAAG,EAAEC,IAAI,CAAC;EACxC,IAAI,CAACA,IAAI,EAAE;EACXV,EAAE,CAACW,MAAM,CAACF,GAAG,EAAET,EAAE,CAACY,IAAI,EAAEF,IAAI,CAAC;AAC/B;AAEA,SAASF,oBAAoBA,CAAEC,GAAG,EAAEC,IAAI,EAAE;EACxCA,IAAI,GAAGT,QAAQ,CAAC,WAAW,GAAGQ,GAAG,EAAEC,IAAI,CAAC;EACxC,IAAI,CAACA,IAAI,EAAE;EACX,IAAIG,GAAG,GAAGf,IAAI,CAACgB,IAAI,CAACL,GAAG,EAAE,wBAAwB,CAAC;EAClDT,EAAE,CAACe,IAAI,CAACF,GAAG,EAAE,GAAG,EAAE,UAAUG,EAAE,EAAEC,EAAE,EAAE;IAClC,IAAID,EAAE,EAAE,OAAON,IAAI,CAACR,WAAW,CAACO,GAAG,EAAEO,EAAE,CAAC,CAAC;IACzChB,EAAE,CAACkB,KAAK,CAACD,EAAE,EAAE,YAAY;MACvBjB,EAAE,CAACmB,MAAM,CAACN,GAAG,EAAEV,eAAe,CAACO,IAAI,CAAC,CAAC;IACvC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}