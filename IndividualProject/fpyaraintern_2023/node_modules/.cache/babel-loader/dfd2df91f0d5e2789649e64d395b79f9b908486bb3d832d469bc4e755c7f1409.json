{"ast":null,"code":"'use strict';\n\nconst BB = require('bluebird');\nconst contentPath = require('./path');\nconst figgyPudding = require('figgy-pudding');\nconst fs = require('graceful-fs');\nconst PassThrough = require('stream').PassThrough;\nconst pipe = BB.promisify(require('mississippi').pipe);\nconst ssri = require('ssri');\nconst Y = require('../util/y.js');\nconst lstatAsync = BB.promisify(fs.lstat);\nconst readFileAsync = BB.promisify(fs.readFile);\nconst ReadOpts = figgyPudding({\n  size: {}\n});\nmodule.exports = read;\nfunction read(cache, integrity, opts) {\n  opts = ReadOpts(opts);\n  return withContentSri(cache, integrity, (cpath, sri) => {\n    return readFileAsync(cpath, null).then(data => {\n      if (typeof opts.size === 'number' && opts.size !== data.length) {\n        throw sizeError(opts.size, data.length);\n      } else if (ssri.checkData(data, sri)) {\n        return data;\n      } else {\n        throw integrityError(sri, cpath);\n      }\n    });\n  });\n}\nmodule.exports.sync = readSync;\nfunction readSync(cache, integrity, opts) {\n  opts = ReadOpts(opts);\n  return withContentSriSync(cache, integrity, (cpath, sri) => {\n    const data = fs.readFileSync(cpath);\n    if (typeof opts.size === 'number' && opts.size !== data.length) {\n      throw sizeError(opts.size, data.length);\n    } else if (ssri.checkData(data, sri)) {\n      return data;\n    } else {\n      throw integrityError(sri, cpath);\n    }\n  });\n}\nmodule.exports.stream = readStream;\nmodule.exports.readStream = readStream;\nfunction readStream(cache, integrity, opts) {\n  opts = ReadOpts(opts);\n  const stream = new PassThrough();\n  withContentSri(cache, integrity, (cpath, sri) => {\n    return lstatAsync(cpath).then(stat => ({\n      cpath,\n      sri,\n      stat\n    }));\n  }).then(_ref => {\n    let {\n      cpath,\n      sri,\n      stat\n    } = _ref;\n    return pipe(fs.createReadStream(cpath), ssri.integrityStream({\n      integrity: sri,\n      size: opts.size\n    }), stream);\n  }).catch(err => {\n    stream.emit('error', err);\n  });\n  return stream;\n}\nlet copyFileAsync;\nif (fs.copyFile) {\n  module.exports.copy = copy;\n  module.exports.copy.sync = copySync;\n  copyFileAsync = BB.promisify(fs.copyFile);\n}\nfunction copy(cache, integrity, dest, opts) {\n  opts = ReadOpts(opts);\n  return withContentSri(cache, integrity, (cpath, sri) => {\n    return copyFileAsync(cpath, dest);\n  });\n}\nfunction copySync(cache, integrity, dest, opts) {\n  opts = ReadOpts(opts);\n  return withContentSriSync(cache, integrity, (cpath, sri) => {\n    return fs.copyFileSync(cpath, dest);\n  });\n}\nmodule.exports.hasContent = hasContent;\nfunction hasContent(cache, integrity) {\n  if (!integrity) {\n    return BB.resolve(false);\n  }\n  return withContentSri(cache, integrity, (cpath, sri) => {\n    return lstatAsync(cpath).then(stat => ({\n      size: stat.size,\n      sri,\n      stat\n    }));\n  }).catch(err => {\n    if (err.code === 'ENOENT') {\n      return false;\n    }\n    if (err.code === 'EPERM') {\n      if (process.platform !== 'win32') {\n        throw err;\n      } else {\n        return false;\n      }\n    }\n  });\n}\nmodule.exports.hasContent.sync = hasContentSync;\nfunction hasContentSync(cache, integrity) {\n  if (!integrity) {\n    return false;\n  }\n  return withContentSriSync(cache, integrity, (cpath, sri) => {\n    try {\n      const stat = fs.lstatSync(cpath);\n      return {\n        size: stat.size,\n        sri,\n        stat\n      };\n    } catch (err) {\n      if (err.code === 'ENOENT') {\n        return false;\n      }\n      if (err.code === 'EPERM') {\n        if (process.platform !== 'win32') {\n          throw err;\n        } else {\n          return false;\n        }\n      }\n    }\n  });\n}\nfunction withContentSri(cache, integrity, fn) {\n  return BB.try(() => {\n    const sri = ssri.parse(integrity);\n    // If `integrity` has multiple entries, pick the first digest\n    // with available local data.\n    const algo = sri.pickAlgorithm();\n    const digests = sri[algo];\n    if (digests.length <= 1) {\n      const cpath = contentPath(cache, digests[0]);\n      return fn(cpath, digests[0]);\n    } else {\n      return BB.any(sri[sri.pickAlgorithm()].map(meta => {\n        return withContentSri(cache, meta, fn);\n      }, {\n        concurrency: 1\n      })).catch(err => {\n        if ([].some.call(err, e => e.code === 'ENOENT')) {\n          throw Object.assign(new Error('No matching content found for ' + sri.toString()), {\n            code: 'ENOENT'\n          });\n        } else {\n          throw err[0];\n        }\n      });\n    }\n  });\n}\nfunction withContentSriSync(cache, integrity, fn) {\n  const sri = ssri.parse(integrity);\n  // If `integrity` has multiple entries, pick the first digest\n  // with available local data.\n  const algo = sri.pickAlgorithm();\n  const digests = sri[algo];\n  if (digests.length <= 1) {\n    const cpath = contentPath(cache, digests[0]);\n    return fn(cpath, digests[0]);\n  } else {\n    let lastErr = null;\n    for (const meta of sri[sri.pickAlgorithm()]) {\n      try {\n        return withContentSriSync(cache, meta, fn);\n      } catch (err) {\n        lastErr = err;\n      }\n    }\n    if (lastErr) {\n      throw lastErr;\n    }\n  }\n}\nfunction sizeError(expected, found) {\n  var err = new Error(Y`Bad data size: expected inserted data to be ${expected} bytes, but got ${found} instead`);\n  err.expected = expected;\n  err.found = found;\n  err.code = 'EBADSIZE';\n  return err;\n}\nfunction integrityError(sri, path) {\n  var err = new Error(Y`Integrity verification failed for ${sri} (${path})`);\n  err.code = 'EINTEGRITY';\n  err.sri = sri;\n  err.path = path;\n  return err;\n}","map":{"version":3,"names":["BB","require","contentPath","figgyPudding","fs","PassThrough","pipe","promisify","ssri","Y","lstatAsync","lstat","readFileAsync","readFile","ReadOpts","size","module","exports","read","cache","integrity","opts","withContentSri","cpath","sri","then","data","length","sizeError","checkData","integrityError","sync","readSync","withContentSriSync","readFileSync","stream","readStream","stat","_ref","createReadStream","integrityStream","catch","err","emit","copyFileAsync","copyFile","copy","copySync","dest","copyFileSync","hasContent","resolve","code","process","platform","hasContentSync","lstatSync","fn","try","parse","algo","pickAlgorithm","digests","any","map","meta","concurrency","some","call","e","Object","assign","Error","toString","lastErr","expected","found","path"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/cacache/lib/content/read.js"],"sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst contentPath = require('./path')\nconst figgyPudding = require('figgy-pudding')\nconst fs = require('graceful-fs')\nconst PassThrough = require('stream').PassThrough\nconst pipe = BB.promisify(require('mississippi').pipe)\nconst ssri = require('ssri')\nconst Y = require('../util/y.js')\n\nconst lstatAsync = BB.promisify(fs.lstat)\nconst readFileAsync = BB.promisify(fs.readFile)\n\nconst ReadOpts = figgyPudding({\n  size: {}\n})\n\nmodule.exports = read\nfunction read (cache, integrity, opts) {\n  opts = ReadOpts(opts)\n  return withContentSri(cache, integrity, (cpath, sri) => {\n    return readFileAsync(cpath, null).then(data => {\n      if (typeof opts.size === 'number' && opts.size !== data.length) {\n        throw sizeError(opts.size, data.length)\n      } else if (ssri.checkData(data, sri)) {\n        return data\n      } else {\n        throw integrityError(sri, cpath)\n      }\n    })\n  })\n}\n\nmodule.exports.sync = readSync\nfunction readSync (cache, integrity, opts) {\n  opts = ReadOpts(opts)\n  return withContentSriSync(cache, integrity, (cpath, sri) => {\n    const data = fs.readFileSync(cpath)\n    if (typeof opts.size === 'number' && opts.size !== data.length) {\n      throw sizeError(opts.size, data.length)\n    } else if (ssri.checkData(data, sri)) {\n      return data\n    } else {\n      throw integrityError(sri, cpath)\n    }\n  })\n}\n\nmodule.exports.stream = readStream\nmodule.exports.readStream = readStream\nfunction readStream (cache, integrity, opts) {\n  opts = ReadOpts(opts)\n  const stream = new PassThrough()\n  withContentSri(cache, integrity, (cpath, sri) => {\n    return lstatAsync(cpath).then(stat => ({ cpath, sri, stat }))\n  }).then(({ cpath, sri, stat }) => {\n    return pipe(\n      fs.createReadStream(cpath),\n      ssri.integrityStream({\n        integrity: sri,\n        size: opts.size\n      }),\n      stream\n    )\n  }).catch(err => {\n    stream.emit('error', err)\n  })\n  return stream\n}\n\nlet copyFileAsync\nif (fs.copyFile) {\n  module.exports.copy = copy\n  module.exports.copy.sync = copySync\n  copyFileAsync = BB.promisify(fs.copyFile)\n}\n\nfunction copy (cache, integrity, dest, opts) {\n  opts = ReadOpts(opts)\n  return withContentSri(cache, integrity, (cpath, sri) => {\n    return copyFileAsync(cpath, dest)\n  })\n}\n\nfunction copySync (cache, integrity, dest, opts) {\n  opts = ReadOpts(opts)\n  return withContentSriSync(cache, integrity, (cpath, sri) => {\n    return fs.copyFileSync(cpath, dest)\n  })\n}\n\nmodule.exports.hasContent = hasContent\nfunction hasContent (cache, integrity) {\n  if (!integrity) { return BB.resolve(false) }\n  return withContentSri(cache, integrity, (cpath, sri) => {\n    return lstatAsync(cpath).then(stat => ({ size: stat.size, sri, stat }))\n  }).catch(err => {\n    if (err.code === 'ENOENT') { return false }\n    if (err.code === 'EPERM') {\n      if (process.platform !== 'win32') {\n        throw err\n      } else {\n        return false\n      }\n    }\n  })\n}\n\nmodule.exports.hasContent.sync = hasContentSync\nfunction hasContentSync (cache, integrity) {\n  if (!integrity) { return false }\n  return withContentSriSync(cache, integrity, (cpath, sri) => {\n    try {\n      const stat = fs.lstatSync(cpath)\n      return { size: stat.size, sri, stat }\n    } catch (err) {\n      if (err.code === 'ENOENT') { return false }\n      if (err.code === 'EPERM') {\n        if (process.platform !== 'win32') {\n          throw err\n        } else {\n          return false\n        }\n      }\n    }\n  })\n}\n\nfunction withContentSri (cache, integrity, fn) {\n  return BB.try(() => {\n    const sri = ssri.parse(integrity)\n    // If `integrity` has multiple entries, pick the first digest\n    // with available local data.\n    const algo = sri.pickAlgorithm()\n    const digests = sri[algo]\n    if (digests.length <= 1) {\n      const cpath = contentPath(cache, digests[0])\n      return fn(cpath, digests[0])\n    } else {\n      return BB.any(sri[sri.pickAlgorithm()].map(meta => {\n        return withContentSri(cache, meta, fn)\n      }, { concurrency: 1 }))\n        .catch(err => {\n          if ([].some.call(err, e => e.code === 'ENOENT')) {\n            throw Object.assign(\n              new Error('No matching content found for ' + sri.toString()),\n              { code: 'ENOENT' }\n            )\n          } else {\n            throw err[0]\n          }\n        })\n    }\n  })\n}\n\nfunction withContentSriSync (cache, integrity, fn) {\n  const sri = ssri.parse(integrity)\n  // If `integrity` has multiple entries, pick the first digest\n  // with available local data.\n  const algo = sri.pickAlgorithm()\n  const digests = sri[algo]\n  if (digests.length <= 1) {\n    const cpath = contentPath(cache, digests[0])\n    return fn(cpath, digests[0])\n  } else {\n    let lastErr = null\n    for (const meta of sri[sri.pickAlgorithm()]) {\n      try {\n        return withContentSriSync(cache, meta, fn)\n      } catch (err) {\n        lastErr = err\n      }\n    }\n    if (lastErr) { throw lastErr }\n  }\n}\n\nfunction sizeError (expected, found) {\n  var err = new Error(Y`Bad data size: expected inserted data to be ${expected} bytes, but got ${found} instead`)\n  err.expected = expected\n  err.found = found\n  err.code = 'EBADSIZE'\n  return err\n}\n\nfunction integrityError (sri, path) {\n  var err = new Error(Y`Integrity verification failed for ${sri} (${path})`)\n  err.code = 'EINTEGRITY'\n  err.sri = sri\n  err.path = path\n  return err\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}