{"ast":null,"code":"'use strict';\n\nconst BB = require('bluebird');\nconst crypto = require('crypto');\nconst figgyPudding = require('figgy-pudding');\nconst log = require('npmlog');\nconst npm = require('../npm.js');\nconst pack = require('../pack.js');\nconst path = require('path');\nconst npmSession = npm.session = crypto.randomBytes(8).toString('hex');\nlog.verbose('npm-session', npmSession);\nconst SCOPE_REGISTRY_REGEX = /@.*:registry$/gi;\nconst NpmConfig = figgyPudding({}, {\n  other(key) {\n    return key.match(SCOPE_REGISTRY_REGEX);\n  }\n});\nlet baseConfig;\nmodule.exports = mkConfig;\nfunction mkConfig() {\n  if (!baseConfig) {\n    baseConfig = NpmConfig(npm.config, {\n      // Add some non-npm-config opts by hand.\n      cache: path.join(npm.config.get('cache'), '_cacache'),\n      // NOTE: npm has some magic logic around color distinct from the config\n      // value, so we have to override it here\n      color: !!npm.color,\n      dirPacker: pack.packGitDep,\n      hashAlgorithm: 'sha1',\n      includeDeprecated: false,\n      log,\n      'npm-session': npmSession,\n      'project-scope': npm.projectScope,\n      refer: npm.referer,\n      dmode: npm.modes.exec,\n      fmode: npm.modes.file,\n      umask: npm.modes.umask,\n      npmVersion: npm.version,\n      tmp: npm.tmp,\n      Promise: BB\n    });\n    const ownerStats = calculateOwner();\n    if (ownerStats.uid != null || ownerStats.gid != null) {\n      baseConfig = baseConfig.concat(ownerStats);\n    }\n  }\n  let conf = baseConfig.concat(...arguments);\n  // Adapt some other configs if missing\n  if (npm.config.get('prefer-online') === undefined) {\n    conf = conf.concat({\n      'prefer-online': npm.config.get('cache-max') <= 0\n    });\n  }\n  if (npm.config.get('prefer-online') === undefined) {\n    conf = conf.concat({\n      'prefer-online': npm.config.get('cache-min') >= 9999\n    });\n  }\n  return conf;\n}\nlet effectiveOwner;\nfunction calculateOwner() {\n  if (!effectiveOwner) {\n    effectiveOwner = {\n      uid: 0,\n      gid: 0\n    };\n\n    // Pretty much only on windows\n    if (!process.getuid) {\n      return effectiveOwner;\n    }\n    effectiveOwner.uid = +process.getuid();\n    effectiveOwner.gid = +process.getgid();\n    if (effectiveOwner.uid === 0) {\n      if (process.env.SUDO_UID) effectiveOwner.uid = +process.env.SUDO_UID;\n      if (process.env.SUDO_GID) effectiveOwner.gid = +process.env.SUDO_GID;\n    }\n  }\n  return effectiveOwner;\n}","map":{"version":3,"names":["BB","require","crypto","figgyPudding","log","npm","pack","path","npmSession","session","randomBytes","toString","verbose","SCOPE_REGISTRY_REGEX","NpmConfig","other","key","match","baseConfig","module","exports","mkConfig","config","cache","join","get","color","dirPacker","packGitDep","hashAlgorithm","includeDeprecated","projectScope","refer","referer","dmode","modes","exec","fmode","file","umask","npmVersion","version","tmp","Promise","ownerStats","calculateOwner","uid","gid","concat","conf","arguments","undefined","effectiveOwner","process","getuid","getgid","env","SUDO_UID","SUDO_GID"],"sources":["/Users/hkateliev/node_modules/npm/lib/config/figgy-config.js"],"sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst crypto = require('crypto')\nconst figgyPudding = require('figgy-pudding')\nconst log = require('npmlog')\nconst npm = require('../npm.js')\nconst pack = require('../pack.js')\nconst path = require('path')\n\nconst npmSession = npm.session = crypto.randomBytes(8).toString('hex')\nlog.verbose('npm-session', npmSession)\n\nconst SCOPE_REGISTRY_REGEX = /@.*:registry$/gi\nconst NpmConfig = figgyPudding({}, {\n  other (key) {\n    return key.match(SCOPE_REGISTRY_REGEX)\n  }\n})\n\nlet baseConfig\n\nmodule.exports = mkConfig\nfunction mkConfig (...providers) {\n  if (!baseConfig) {\n    baseConfig = NpmConfig(npm.config, {\n      // Add some non-npm-config opts by hand.\n      cache: path.join(npm.config.get('cache'), '_cacache'),\n      // NOTE: npm has some magic logic around color distinct from the config\n      // value, so we have to override it here\n      color: !!npm.color,\n      dirPacker: pack.packGitDep,\n      hashAlgorithm: 'sha1',\n      includeDeprecated: false,\n      log,\n      'npm-session': npmSession,\n      'project-scope': npm.projectScope,\n      refer: npm.referer,\n      dmode: npm.modes.exec,\n      fmode: npm.modes.file,\n      umask: npm.modes.umask,\n      npmVersion: npm.version,\n      tmp: npm.tmp,\n      Promise: BB\n    })\n    const ownerStats = calculateOwner()\n    if (ownerStats.uid != null || ownerStats.gid != null) {\n      baseConfig = baseConfig.concat(ownerStats)\n    }\n  }\n  let conf = baseConfig.concat(...providers)\n  // Adapt some other configs if missing\n  if (npm.config.get('prefer-online') === undefined) {\n    conf = conf.concat({\n      'prefer-online': npm.config.get('cache-max') <= 0\n    })\n  }\n  if (npm.config.get('prefer-online') === undefined) {\n    conf = conf.concat({\n      'prefer-online': npm.config.get('cache-min') >= 9999\n    })\n  }\n  return conf\n}\n\nlet effectiveOwner\nfunction calculateOwner () {\n  if (!effectiveOwner) {\n    effectiveOwner = { uid: 0, gid: 0 }\n\n    // Pretty much only on windows\n    if (!process.getuid) {\n      return effectiveOwner\n    }\n\n    effectiveOwner.uid = +process.getuid()\n    effectiveOwner.gid = +process.getgid()\n\n    if (effectiveOwner.uid === 0) {\n      if (process.env.SUDO_UID) effectiveOwner.uid = +process.env.SUDO_UID\n      if (process.env.SUDO_GID) effectiveOwner.gid = +process.env.SUDO_GID\n    }\n  }\n\n  return effectiveOwner\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}