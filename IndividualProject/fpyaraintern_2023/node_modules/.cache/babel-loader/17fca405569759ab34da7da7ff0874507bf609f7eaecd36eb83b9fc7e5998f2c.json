{"ast":null,"code":"'use strict';\n\nconst LRU = require('lru-cache');\nconst url = require('url');\nlet AGENT_CACHE = new LRU({\n  max: 50\n});\nlet HttpsAgent;\nlet HttpAgent;\nmodule.exports = getAgent;\nfunction getAgent(uri, opts) {\n  const parsedUri = url.parse(typeof uri === 'string' ? uri : uri.url);\n  const isHttps = parsedUri.protocol === 'https:';\n  const pxuri = getProxyUri(uri, opts);\n  const key = [`https:${isHttps}`, pxuri ? `proxy:${pxuri.protocol}//${pxuri.host}:${pxuri.port}` : '>no-proxy<', `local-address:${opts.localAddress || '>no-local-address<'}`, `strict-ssl:${isHttps ? !!opts.strictSSL : '>no-strict-ssl<'}`, `ca:${isHttps && opts.ca || '>no-ca<'}`, `cert:${isHttps && opts.cert || '>no-cert<'}`, `key:${isHttps && opts.key || '>no-key<'}`].join(':');\n  if (opts.agent != null) {\n    // `agent: false` has special behavior!\n    return opts.agent;\n  }\n  if (AGENT_CACHE.peek(key)) {\n    return AGENT_CACHE.get(key);\n  }\n  if (pxuri) {\n    const proxy = getProxy(pxuri, opts, isHttps);\n    AGENT_CACHE.set(key, proxy);\n    return proxy;\n  }\n  if (isHttps && !HttpsAgent) {\n    HttpsAgent = require('agentkeepalive').HttpsAgent;\n  } else if (!isHttps && !HttpAgent) {\n    HttpAgent = require('agentkeepalive');\n  }\n\n  // If opts.timeout is zero, set the agentTimeout to zero as well. A timeout\n  // of zero disables the timeout behavior (OS limits still apply). Else, if\n  // opts.timeout is a non-zero value, set it to timeout + 1, to ensure that\n  // the node-fetch-npm timeout will always fire first, giving us more\n  // consistent errors.\n  const agentTimeout = opts.timeout === 0 ? 0 : opts.timeout + 1;\n  const agent = isHttps ? new HttpsAgent({\n    maxSockets: opts.maxSockets || 15,\n    ca: opts.ca,\n    cert: opts.cert,\n    key: opts.key,\n    localAddress: opts.localAddress,\n    rejectUnauthorized: opts.strictSSL,\n    timeout: agentTimeout\n  }) : new HttpAgent({\n    maxSockets: opts.maxSockets || 15,\n    localAddress: opts.localAddress,\n    timeout: agentTimeout\n  });\n  AGENT_CACHE.set(key, agent);\n  return agent;\n}\nfunction checkNoProxy(uri, opts) {\n  const host = url.parse(uri).hostname.split('.').reverse();\n  let noproxy = opts.noProxy || getProcessEnv('no_proxy');\n  if (typeof noproxy === 'string') {\n    noproxy = noproxy.split(/\\s*,\\s*/g);\n  }\n  return noproxy && noproxy.some(no => {\n    const noParts = no.split('.').filter(x => x).reverse();\n    if (!noParts.length) {\n      return false;\n    }\n    for (let i = 0; i < noParts.length; i++) {\n      if (host[i] !== noParts[i]) {\n        return false;\n      }\n    }\n    return true;\n  });\n}\nmodule.exports.getProcessEnv = getProcessEnv;\nfunction getProcessEnv(env) {\n  if (!env) {\n    return;\n  }\n  let value;\n  if (Array.isArray(env)) {\n    for (let e of env) {\n      value = process.env[e] || process.env[e.toUpperCase()] || process.env[e.toLowerCase()];\n      if (typeof value !== 'undefined') {\n        break;\n      }\n    }\n  }\n  if (typeof env === 'string') {\n    value = process.env[env] || process.env[env.toUpperCase()] || process.env[env.toLowerCase()];\n  }\n  return value;\n}\nfunction getProxyUri(uri, opts) {\n  const protocol = url.parse(uri).protocol;\n  const proxy = opts.proxy || protocol === 'https:' && getProcessEnv('https_proxy') || protocol === 'http:' && getProcessEnv(['https_proxy', 'http_proxy', 'proxy']);\n  if (!proxy) {\n    return null;\n  }\n  const parsedProxy = typeof proxy === 'string' ? url.parse(proxy) : proxy;\n  return !checkNoProxy(uri, opts) && parsedProxy;\n}\nlet HttpProxyAgent;\nlet HttpsProxyAgent;\nlet SocksProxyAgent;\nfunction getProxy(proxyUrl, opts, isHttps) {\n  let popts = {\n    host: proxyUrl.hostname,\n    port: proxyUrl.port,\n    protocol: proxyUrl.protocol,\n    path: proxyUrl.path,\n    auth: proxyUrl.auth,\n    ca: opts.ca,\n    cert: opts.cert,\n    key: opts.key,\n    timeout: opts.timeout === 0 ? 0 : opts.timeout + 1,\n    localAddress: opts.localAddress,\n    maxSockets: opts.maxSockets || 15,\n    rejectUnauthorized: opts.strictSSL\n  };\n  if (proxyUrl.protocol === 'http:' || proxyUrl.protocol === 'https:') {\n    if (!isHttps) {\n      if (!HttpProxyAgent) {\n        HttpProxyAgent = require('http-proxy-agent');\n      }\n      return new HttpProxyAgent(popts);\n    } else {\n      if (!HttpsProxyAgent) {\n        HttpsProxyAgent = require('https-proxy-agent');\n      }\n      return new HttpsProxyAgent(popts);\n    }\n  }\n  if (proxyUrl.protocol.startsWith('socks')) {\n    if (!SocksProxyAgent) {\n      SocksProxyAgent = require('socks-proxy-agent');\n    }\n    return new SocksProxyAgent(popts);\n  }\n}","map":{"version":3,"names":["LRU","require","url","AGENT_CACHE","max","HttpsAgent","HttpAgent","module","exports","getAgent","uri","opts","parsedUri","parse","isHttps","protocol","pxuri","getProxyUri","key","host","port","localAddress","strictSSL","ca","cert","join","agent","peek","get","proxy","getProxy","set","agentTimeout","timeout","maxSockets","rejectUnauthorized","checkNoProxy","hostname","split","reverse","noproxy","noProxy","getProcessEnv","some","no","noParts","filter","x","length","i","env","value","Array","isArray","e","process","toUpperCase","toLowerCase","parsedProxy","HttpProxyAgent","HttpsProxyAgent","SocksProxyAgent","proxyUrl","popts","path","auth","startsWith"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/make-fetch-happen/agent.js"],"sourcesContent":["'use strict'\nconst LRU = require('lru-cache')\nconst url = require('url')\n\nlet AGENT_CACHE = new LRU({ max: 50 })\nlet HttpsAgent\nlet HttpAgent\n\nmodule.exports = getAgent\n\nfunction getAgent (uri, opts) {\n  const parsedUri = url.parse(typeof uri === 'string' ? uri : uri.url)\n  const isHttps = parsedUri.protocol === 'https:'\n  const pxuri = getProxyUri(uri, opts)\n\n  const key = [\n    `https:${isHttps}`,\n    pxuri\n      ? `proxy:${pxuri.protocol}//${pxuri.host}:${pxuri.port}`\n      : '>no-proxy<',\n    `local-address:${opts.localAddress || '>no-local-address<'}`,\n    `strict-ssl:${isHttps ? !!opts.strictSSL : '>no-strict-ssl<'}`,\n    `ca:${(isHttps && opts.ca) || '>no-ca<'}`,\n    `cert:${(isHttps && opts.cert) || '>no-cert<'}`,\n    `key:${(isHttps && opts.key) || '>no-key<'}`\n  ].join(':')\n\n  if (opts.agent != null) { // `agent: false` has special behavior!\n    return opts.agent\n  }\n\n  if (AGENT_CACHE.peek(key)) {\n    return AGENT_CACHE.get(key)\n  }\n\n  if (pxuri) {\n    const proxy = getProxy(pxuri, opts, isHttps)\n    AGENT_CACHE.set(key, proxy)\n    return proxy\n  }\n\n  if (isHttps && !HttpsAgent) {\n    HttpsAgent = require('agentkeepalive').HttpsAgent\n  } else if (!isHttps && !HttpAgent) {\n    HttpAgent = require('agentkeepalive')\n  }\n\n  // If opts.timeout is zero, set the agentTimeout to zero as well. A timeout\n  // of zero disables the timeout behavior (OS limits still apply). Else, if\n  // opts.timeout is a non-zero value, set it to timeout + 1, to ensure that\n  // the node-fetch-npm timeout will always fire first, giving us more\n  // consistent errors.\n  const agentTimeout = opts.timeout === 0 ? 0 : opts.timeout + 1\n\n  const agent = isHttps ? new HttpsAgent({\n    maxSockets: opts.maxSockets || 15,\n    ca: opts.ca,\n    cert: opts.cert,\n    key: opts.key,\n    localAddress: opts.localAddress,\n    rejectUnauthorized: opts.strictSSL,\n    timeout: agentTimeout\n  }) : new HttpAgent({\n    maxSockets: opts.maxSockets || 15,\n    localAddress: opts.localAddress,\n    timeout: agentTimeout\n  })\n  AGENT_CACHE.set(key, agent)\n  return agent\n}\n\nfunction checkNoProxy (uri, opts) {\n  const host = url.parse(uri).hostname.split('.').reverse()\n  let noproxy = (opts.noProxy || getProcessEnv('no_proxy'))\n  if (typeof noproxy === 'string') {\n    noproxy = noproxy.split(/\\s*,\\s*/g)\n  }\n  return noproxy && noproxy.some(no => {\n    const noParts = no.split('.').filter(x => x).reverse()\n    if (!noParts.length) { return false }\n    for (let i = 0; i < noParts.length; i++) {\n      if (host[i] !== noParts[i]) {\n        return false\n      }\n    }\n    return true\n  })\n}\n\nmodule.exports.getProcessEnv = getProcessEnv\n\nfunction getProcessEnv (env) {\n  if (!env) { return }\n\n  let value\n\n  if (Array.isArray(env)) {\n    for (let e of env) {\n      value = process.env[e] ||\n        process.env[e.toUpperCase()] ||\n        process.env[e.toLowerCase()]\n      if (typeof value !== 'undefined') { break }\n    }\n  }\n\n  if (typeof env === 'string') {\n    value = process.env[env] ||\n      process.env[env.toUpperCase()] ||\n      process.env[env.toLowerCase()]\n  }\n\n  return value\n}\n\nfunction getProxyUri (uri, opts) {\n  const protocol = url.parse(uri).protocol\n\n  const proxy = opts.proxy || (\n    protocol === 'https:' && getProcessEnv('https_proxy')\n  ) || (\n      protocol === 'http:' && getProcessEnv(['https_proxy', 'http_proxy', 'proxy'])\n    )\n  if (!proxy) { return null }\n\n  const parsedProxy = (typeof proxy === 'string') ? url.parse(proxy) : proxy\n\n  return !checkNoProxy(uri, opts) && parsedProxy\n}\n\nlet HttpProxyAgent\nlet HttpsProxyAgent\nlet SocksProxyAgent\nfunction getProxy (proxyUrl, opts, isHttps) {\n  let popts = {\n    host: proxyUrl.hostname,\n    port: proxyUrl.port,\n    protocol: proxyUrl.protocol,\n    path: proxyUrl.path,\n    auth: proxyUrl.auth,\n    ca: opts.ca,\n    cert: opts.cert,\n    key: opts.key,\n    timeout: opts.timeout === 0 ? 0 : opts.timeout + 1,\n    localAddress: opts.localAddress,\n    maxSockets: opts.maxSockets || 15,\n    rejectUnauthorized: opts.strictSSL\n  }\n\n  if (proxyUrl.protocol === 'http:' || proxyUrl.protocol === 'https:') {\n    if (!isHttps) {\n      if (!HttpProxyAgent) {\n        HttpProxyAgent = require('http-proxy-agent')\n      }\n\n      return new HttpProxyAgent(popts)\n    } else {\n      if (!HttpsProxyAgent) {\n        HttpsProxyAgent = require('https-proxy-agent')\n      }\n\n      return new HttpsProxyAgent(popts)\n    }\n  }\n  if (proxyUrl.protocol.startsWith('socks')) {\n    if (!SocksProxyAgent) {\n      SocksProxyAgent = require('socks-proxy-agent')\n    }\n\n    return new SocksProxyAgent(popts)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}