{"ast":null,"code":"'use strict';\n\nconst config = require('./config.js');\nconst errors = require('./errors.js');\nconst LRU = require('lru-cache');\nmodule.exports = checkResponse;\nfunction checkResponse(method, res, registry, startTime, opts) {\n  opts = config(opts);\n  if (res.headers.has('npm-notice') && !res.headers.has('x-local-cache')) {\n    opts.log.notice('', res.headers.get('npm-notice'));\n  }\n  checkWarnings(res, registry, opts);\n  if (res.status >= 400) {\n    logRequest(method, res, startTime, opts);\n    return checkErrors(method, res, startTime, opts);\n  } else {\n    res.body.on('end', () => logRequest(method, res, startTime, opts));\n    if (opts.ignoreBody) {\n      res.body.resume();\n      res.body = null;\n    }\n    return res;\n  }\n}\nfunction logRequest(method, res, startTime, opts) {\n  const elapsedTime = Date.now() - startTime;\n  const attempt = res.headers.get('x-fetch-attempts');\n  const attemptStr = attempt && attempt > 1 ? ` attempt #${attempt}` : '';\n  const cacheStr = res.headers.get('x-local-cache') ? ' (from cache)' : '';\n  let urlStr;\n  try {\n    const URL = require('url').URL;\n    const url = new URL(res.url);\n    if (url.password) {\n      url.password = '***';\n    }\n    urlStr = url.toString();\n  } catch (er) {\n    urlStr = res.url;\n  }\n  opts.log.http('fetch', `${method.toUpperCase()} ${res.status} ${urlStr} ${elapsedTime}ms${attemptStr}${cacheStr}`);\n}\nconst WARNING_REGEXP = /^\\s*(\\d{3})\\s+(\\S+)\\s+\"(.*)\"\\s+\"([^\"]+)\"/;\nconst BAD_HOSTS = new LRU({\n  max: 50\n});\nfunction checkWarnings(res, registry, opts) {\n  if (res.headers.has('warning') && !BAD_HOSTS.has(registry)) {\n    const warnings = {};\n    res.headers.raw()['warning'].forEach(w => {\n      const match = w.match(WARNING_REGEXP);\n      if (match) {\n        warnings[match[1]] = {\n          code: match[1],\n          host: match[2],\n          message: match[3],\n          date: new Date(match[4])\n        };\n      }\n    });\n    BAD_HOSTS.set(registry, true);\n    if (warnings['199']) {\n      if (warnings['199'].message.match(/ENOTFOUND/)) {\n        opts.log.warn('registry', `Using stale data from ${registry} because the host is inaccessible -- are you offline?`);\n      } else {\n        opts.log.warn('registry', `Unexpected warning for ${registry}: ${warnings['199'].message}`);\n      }\n    }\n    if (warnings['111']) {\n      // 111 Revalidation failed -- we're using stale data\n      opts.log.warn('registry', `Using stale data from ${registry} due to a request error during revalidation.`);\n    }\n  }\n}\nfunction checkErrors(method, res, startTime, opts) {\n  return res.buffer().catch(() => null).then(body => {\n    let parsed = body;\n    try {\n      parsed = JSON.parse(body.toString('utf8'));\n    } catch (e) {}\n    if (res.status === 401 && res.headers.get('www-authenticate')) {\n      const auth = res.headers.get('www-authenticate').split(/,\\s*/).map(s => s.toLowerCase());\n      if (auth.indexOf('ipaddress') !== -1) {\n        throw new errors.HttpErrorAuthIPAddress(method, res, parsed, opts.spec);\n      } else if (auth.indexOf('otp') !== -1) {\n        throw new errors.HttpErrorAuthOTP(method, res, parsed, opts.spec);\n      } else {\n        throw new errors.HttpErrorAuthUnknown(method, res, parsed, opts.spec);\n      }\n    } else if (res.status === 401 && body != null && /one-time pass/.test(body.toString('utf8'))) {\n      // Heuristic for malformed OTP responses that don't include the www-authenticate header.\n      throw new errors.HttpErrorAuthOTP(method, res, parsed, opts.spec);\n    } else {\n      throw new errors.HttpErrorGeneral(method, res, parsed, opts.spec);\n    }\n  });\n}","map":{"version":3,"names":["config","require","errors","LRU","module","exports","checkResponse","method","res","registry","startTime","opts","headers","has","log","notice","get","checkWarnings","status","logRequest","checkErrors","body","on","ignoreBody","resume","elapsedTime","Date","now","attempt","attemptStr","cacheStr","urlStr","URL","url","password","toString","er","http","toUpperCase","WARNING_REGEXP","BAD_HOSTS","max","warnings","raw","forEach","w","match","code","host","message","date","set","warn","buffer","catch","then","parsed","JSON","parse","e","auth","split","map","s","toLowerCase","indexOf","HttpErrorAuthIPAddress","spec","HttpErrorAuthOTP","HttpErrorAuthUnknown","test","HttpErrorGeneral"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/npm-registry-fetch/check-response.js"],"sourcesContent":["'use strict'\n\nconst config = require('./config.js')\nconst errors = require('./errors.js')\nconst LRU = require('lru-cache')\n\nmodule.exports = checkResponse\nfunction checkResponse (method, res, registry, startTime, opts) {\n  opts = config(opts)\n  if (res.headers.has('npm-notice') && !res.headers.has('x-local-cache')) {\n    opts.log.notice('', res.headers.get('npm-notice'))\n  }\n  checkWarnings(res, registry, opts)\n  if (res.status >= 400) {\n    logRequest(method, res, startTime, opts)\n    return checkErrors(method, res, startTime, opts)\n  } else {\n    res.body.on('end', () => logRequest(method, res, startTime, opts))\n    if (opts.ignoreBody) {\n      res.body.resume()\n      res.body = null\n    }\n    return res\n  }\n}\n\nfunction logRequest (method, res, startTime, opts) {\n  const elapsedTime = Date.now() - startTime\n  const attempt = res.headers.get('x-fetch-attempts')\n  const attemptStr = attempt && attempt > 1 ? ` attempt #${attempt}` : ''\n  const cacheStr = res.headers.get('x-local-cache') ? ' (from cache)' : ''\n\n  let urlStr\n  try {\n    const URL = require('url').URL\n    const url = new URL(res.url)\n    if (url.password) {\n      url.password = '***'\n    }\n    urlStr = url.toString()\n  } catch (er) {\n    urlStr = res.url\n  }\n\n  opts.log.http(\n    'fetch',\n    `${method.toUpperCase()} ${res.status} ${urlStr} ${elapsedTime}ms${attemptStr}${cacheStr}`\n  )\n}\n\nconst WARNING_REGEXP = /^\\s*(\\d{3})\\s+(\\S+)\\s+\"(.*)\"\\s+\"([^\"]+)\"/\nconst BAD_HOSTS = new LRU({ max: 50 })\n\nfunction checkWarnings (res, registry, opts) {\n  if (res.headers.has('warning') && !BAD_HOSTS.has(registry)) {\n    const warnings = {}\n    res.headers.raw()['warning'].forEach(w => {\n      const match = w.match(WARNING_REGEXP)\n      if (match) {\n        warnings[match[1]] = {\n          code: match[1],\n          host: match[2],\n          message: match[3],\n          date: new Date(match[4])\n        }\n      }\n    })\n    BAD_HOSTS.set(registry, true)\n    if (warnings['199']) {\n      if (warnings['199'].message.match(/ENOTFOUND/)) {\n        opts.log.warn('registry', `Using stale data from ${registry} because the host is inaccessible -- are you offline?`)\n      } else {\n        opts.log.warn('registry', `Unexpected warning for ${registry}: ${warnings['199'].message}`)\n      }\n    }\n    if (warnings['111']) {\n      // 111 Revalidation failed -- we're using stale data\n      opts.log.warn(\n        'registry',\n        `Using stale data from ${registry} due to a request error during revalidation.`\n      )\n    }\n  }\n}\n\nfunction checkErrors (method, res, startTime, opts) {\n  return res.buffer()\n    .catch(() => null)\n    .then(body => {\n      let parsed = body\n      try {\n        parsed = JSON.parse(body.toString('utf8'))\n      } catch (e) {}\n      if (res.status === 401 && res.headers.get('www-authenticate')) {\n        const auth = res.headers.get('www-authenticate')\n          .split(/,\\s*/)\n          .map(s => s.toLowerCase())\n        if (auth.indexOf('ipaddress') !== -1) {\n          throw new errors.HttpErrorAuthIPAddress(\n            method, res, parsed, opts.spec\n          )\n        } else if (auth.indexOf('otp') !== -1) {\n          throw new errors.HttpErrorAuthOTP(\n            method, res, parsed, opts.spec\n          )\n        } else {\n          throw new errors.HttpErrorAuthUnknown(\n            method, res, parsed, opts.spec\n          )\n        }\n      } else if (res.status === 401 && body != null && /one-time pass/.test(body.toString('utf8'))) {\n        // Heuristic for malformed OTP responses that don't include the www-authenticate header.\n        throw new errors.HttpErrorAuthOTP(\n          method, res, parsed, opts.spec\n        )\n      } else {\n        throw new errors.HttpErrorGeneral(\n          method, res, parsed, opts.spec\n        )\n      }\n    })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}