{"ast":null,"code":"\"use strict\";\n\nvar path = require(\"path\");\nmodule.exports = function (thePath, potentialParent) {\n  // For inside-directory checking, we want to allow trailing slashes, so normalize.\n  thePath = stripTrailingSep(thePath);\n  potentialParent = stripTrailingSep(potentialParent);\n\n  // Node treats only Windows as case-insensitive in its path module; we follow those conventions.\n  if (process.platform === \"win32\") {\n    thePath = thePath.toLowerCase();\n    potentialParent = potentialParent.toLowerCase();\n  }\n  return thePath.lastIndexOf(potentialParent, 0) === 0 && (thePath[potentialParent.length] === path.sep || thePath[potentialParent.length] === undefined);\n};\nfunction stripTrailingSep(thePath) {\n  if (thePath[thePath.length - 1] === path.sep) {\n    return thePath.slice(0, -1);\n  }\n  return thePath;\n}","map":{"version":3,"names":["path","require","module","exports","thePath","potentialParent","stripTrailingSep","process","platform","toLowerCase","lastIndexOf","length","sep","undefined","slice"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/path-is-inside/lib/path-is-inside.js"],"sourcesContent":["\"use strict\";\n\nvar path = require(\"path\");\n\nmodule.exports = function (thePath, potentialParent) {\n    // For inside-directory checking, we want to allow trailing slashes, so normalize.\n    thePath = stripTrailingSep(thePath);\n    potentialParent = stripTrailingSep(potentialParent);\n\n    // Node treats only Windows as case-insensitive in its path module; we follow those conventions.\n    if (process.platform === \"win32\") {\n        thePath = thePath.toLowerCase();\n        potentialParent = potentialParent.toLowerCase();\n    }\n\n    return thePath.lastIndexOf(potentialParent, 0) === 0 &&\n\t\t(\n\t\t\tthePath[potentialParent.length] === path.sep ||\n\t\t\tthePath[potentialParent.length] === undefined\n\t\t);\n};\n\nfunction stripTrailingSep(thePath) {\n    if (thePath[thePath.length - 1] === path.sep) {\n        return thePath.slice(0, -1);\n    }\n    return thePath;\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE1BC,MAAM,CAACC,OAAO,GAAG,UAAUC,OAAO,EAAEC,eAAe,EAAE;EACjD;EACAD,OAAO,GAAGE,gBAAgB,CAACF,OAAO,CAAC;EACnCC,eAAe,GAAGC,gBAAgB,CAACD,eAAe,CAAC;;EAEnD;EACA,IAAIE,OAAO,CAACC,QAAQ,KAAK,OAAO,EAAE;IAC9BJ,OAAO,GAAGA,OAAO,CAACK,WAAW,EAAE;IAC/BJ,eAAe,GAAGA,eAAe,CAACI,WAAW,EAAE;EACnD;EAEA,OAAOL,OAAO,CAACM,WAAW,CAACL,eAAe,EAAE,CAAC,CAAC,KAAK,CAAC,KAErDD,OAAO,CAACC,eAAe,CAACM,MAAM,CAAC,KAAKX,IAAI,CAACY,GAAG,IAC5CR,OAAO,CAACC,eAAe,CAACM,MAAM,CAAC,KAAKE,SAAS,CAC7C;AACH,CAAC;AAED,SAASP,gBAAgBA,CAACF,OAAO,EAAE;EAC/B,IAAIA,OAAO,CAACA,OAAO,CAACO,MAAM,GAAG,CAAC,CAAC,KAAKX,IAAI,CAACY,GAAG,EAAE;IAC1C,OAAOR,OAAO,CAACU,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/B;EACA,OAAOV,OAAO;AAClB"},"metadata":{},"sourceType":"script","externalDependencies":[]}