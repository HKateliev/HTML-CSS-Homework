{"ast":null,"code":"'use strict';\n\nconst Utils = require('../lib/utils');\nmodule.exports = report;\nfunction report(data, options) {\n  let msg = summary(data, options);\n  if (!Object.keys(data.advisories).length) {\n    return {\n      report: msg,\n      exitCode: 0\n    };\n  } else {\n    msg += '\\n  run `npm audit fix` to fix them, or `npm audit` for details';\n    return {\n      report: msg,\n      exitCode: 1\n    };\n  }\n}\nmodule.exports.summary = summary;\nfunction summary(data, options) {\n  const defaults = {\n    severityThreshold: 'info'\n  };\n  const config = Object.assign({}, defaults, options);\n  function clr(str, clr) {\n    return Utils.color(str, clr, config.withColor);\n  }\n  function green(str) {\n    return clr(str, 'brightGreen');\n  }\n  function red(str) {\n    return clr(str, 'brightRed');\n  }\n  let output = '';\n  const log = function (value) {\n    output = output + value + '\\n';\n  };\n  output += 'found ';\n  if (Object.keys(data.advisories).length === 0) {\n    log(`${green('0')} vulnerabilities`);\n    return output;\n  } else {\n    const total = Utils.totalVulnCount(data.metadata.vulnerabilities);\n    const sev = Utils.severities(data.metadata.vulnerabilities);\n    if (sev.length > 1) {\n      const severities = sev.map(value => {\n        return `${value[1]} ${Utils.severityLabel(value[0], config.withColor).toLowerCase()}`;\n      }).join(', ');\n      log(`${red(total)} vulnerabilities (${severities})`);\n    } else {\n      const vulnCount = sev[0][1];\n      const vulnLabel = Utils.severityLabel(sev[0][0], config.withColor).toLowerCase();\n      log(`${vulnCount} ${vulnLabel} severity vulnerabilit${vulnCount === 1 ? 'y' : 'ies'}`);\n    }\n  }\n  return output.trim();\n}","map":{"version":3,"names":["Utils","require","module","exports","report","data","options","msg","summary","Object","keys","advisories","length","exitCode","defaults","severityThreshold","config","assign","clr","str","color","withColor","green","red","output","log","value","total","totalVulnCount","metadata","vulnerabilities","sev","severities","map","severityLabel","toLowerCase","join","vulnCount","vulnLabel","trim"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/npm-audit-report/reporters/install.js"],"sourcesContent":["'use strict'\n\nconst Utils = require('../lib/utils')\n\nmodule.exports = report\nfunction report (data, options) {\n  let msg = summary(data, options)\n  if (!Object.keys(data.advisories).length) {\n    return {\n      report: msg,\n      exitCode: 0\n    }\n  } else {\n    msg += '\\n  run `npm audit fix` to fix them, or `npm audit` for details'\n    return {\n      report: msg,\n      exitCode: 1\n    }\n  }\n}\n\nmodule.exports.summary = summary\nfunction summary (data, options) {\n  const defaults = {\n    severityThreshold: 'info'\n  }\n\n  const config = Object.assign({}, defaults, options)\n\n  function clr (str, clr) { return Utils.color(str, clr, config.withColor) }\n  function green (str) { return clr(str, 'brightGreen') }\n  function red (str) { return clr(str, 'brightRed') }\n\n  let output = ''\n\n  const log = function (value) {\n    output = output + value + '\\n'\n  }\n\n  output += 'found '\n\n  if (Object.keys(data.advisories).length === 0) {\n    log(`${green('0')} vulnerabilities`)\n    return output\n  } else {\n    const total = Utils.totalVulnCount(data.metadata.vulnerabilities)\n    const sev = Utils.severities(data.metadata.vulnerabilities)\n\n    if (sev.length > 1) {\n      const severities = sev.map((value) => {\n        return `${value[1]} ${Utils.severityLabel(value[0], config.withColor).toLowerCase()}`\n      }).join(', ')\n      log(`${red(total)} vulnerabilities (${severities})`)\n    } else {\n      const vulnCount = sev[0][1]\n      const vulnLabel = Utils.severityLabel(sev[0][0], config.withColor).toLowerCase()\n      log(`${vulnCount} ${vulnLabel} severity vulnerabilit${vulnCount === 1 ? 'y' : 'ies'}`)\n    }\n  }\n  return output.trim()\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,KAAK,GAAGC,OAAO,CAAC,cAAc,CAAC;AAErCC,MAAM,CAACC,OAAO,GAAGC,MAAM;AACvB,SAASA,MAAMA,CAAEC,IAAI,EAAEC,OAAO,EAAE;EAC9B,IAAIC,GAAG,GAAGC,OAAO,CAACH,IAAI,EAAEC,OAAO,CAAC;EAChC,IAAI,CAACG,MAAM,CAACC,IAAI,CAACL,IAAI,CAACM,UAAU,CAAC,CAACC,MAAM,EAAE;IACxC,OAAO;MACLR,MAAM,EAAEG,GAAG;MACXM,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC,MAAM;IACLN,GAAG,IAAI,iEAAiE;IACxE,OAAO;MACLH,MAAM,EAAEG,GAAG;MACXM,QAAQ,EAAE;IACZ,CAAC;EACH;AACF;AAEAX,MAAM,CAACC,OAAO,CAACK,OAAO,GAAGA,OAAO;AAChC,SAASA,OAAOA,CAAEH,IAAI,EAAEC,OAAO,EAAE;EAC/B,MAAMQ,QAAQ,GAAG;IACfC,iBAAiB,EAAE;EACrB,CAAC;EAED,MAAMC,MAAM,GAAGP,MAAM,CAACQ,MAAM,CAAC,CAAC,CAAC,EAAEH,QAAQ,EAAER,OAAO,CAAC;EAEnD,SAASY,GAAGA,CAAEC,GAAG,EAAED,GAAG,EAAE;IAAE,OAAOlB,KAAK,CAACoB,KAAK,CAACD,GAAG,EAAED,GAAG,EAAEF,MAAM,CAACK,SAAS,CAAC;EAAC;EACzE,SAASC,KAAKA,CAAEH,GAAG,EAAE;IAAE,OAAOD,GAAG,CAACC,GAAG,EAAE,aAAa,CAAC;EAAC;EACtD,SAASI,GAAGA,CAAEJ,GAAG,EAAE;IAAE,OAAOD,GAAG,CAACC,GAAG,EAAE,WAAW,CAAC;EAAC;EAElD,IAAIK,MAAM,GAAG,EAAE;EAEf,MAAMC,GAAG,GAAG,SAAAA,CAAUC,KAAK,EAAE;IAC3BF,MAAM,GAAGA,MAAM,GAAGE,KAAK,GAAG,IAAI;EAChC,CAAC;EAEDF,MAAM,IAAI,QAAQ;EAElB,IAAIf,MAAM,CAACC,IAAI,CAACL,IAAI,CAACM,UAAU,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;IAC7Ca,GAAG,CAAE,GAAEH,KAAK,CAAC,GAAG,CAAE,kBAAiB,CAAC;IACpC,OAAOE,MAAM;EACf,CAAC,MAAM;IACL,MAAMG,KAAK,GAAG3B,KAAK,CAAC4B,cAAc,CAACvB,IAAI,CAACwB,QAAQ,CAACC,eAAe,CAAC;IACjE,MAAMC,GAAG,GAAG/B,KAAK,CAACgC,UAAU,CAAC3B,IAAI,CAACwB,QAAQ,CAACC,eAAe,CAAC;IAE3D,IAAIC,GAAG,CAACnB,MAAM,GAAG,CAAC,EAAE;MAClB,MAAMoB,UAAU,GAAGD,GAAG,CAACE,GAAG,CAAEP,KAAK,IAAK;QACpC,OAAQ,GAAEA,KAAK,CAAC,CAAC,CAAE,IAAG1B,KAAK,CAACkC,aAAa,CAACR,KAAK,CAAC,CAAC,CAAC,EAAEV,MAAM,CAACK,SAAS,CAAC,CAACc,WAAW,EAAG,EAAC;MACvF,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;MACbX,GAAG,CAAE,GAAEF,GAAG,CAACI,KAAK,CAAE,qBAAoBK,UAAW,GAAE,CAAC;IACtD,CAAC,MAAM;MACL,MAAMK,SAAS,GAAGN,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3B,MAAMO,SAAS,GAAGtC,KAAK,CAACkC,aAAa,CAACH,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEf,MAAM,CAACK,SAAS,CAAC,CAACc,WAAW,EAAE;MAChFV,GAAG,CAAE,GAAEY,SAAU,IAAGC,SAAU,yBAAwBD,SAAS,KAAK,CAAC,GAAG,GAAG,GAAG,KAAM,EAAC,CAAC;IACxF;EACF;EACA,OAAOb,MAAM,CAACe,IAAI,EAAE;AACtB"},"metadata":{},"sourceType":"script","externalDependencies":[]}