{"ast":null,"code":"// Delegates to `succ` on sucecss or to `fail` on error\n// ex: Thing.load(123, iferr(cb, thing => ...))\nconst iferr = (fail, succ) => function (err) {\n  for (var _len = arguments.length, a = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    a[_key - 1] = arguments[_key];\n  }\n  return err ? fail(err) : succ(...a);\n};\n\n// Like iferr, but also catches errors thrown from `succ` and passes to `fail`\nconst tiferr = (fail, succ) => iferr(fail, function () {\n  try {\n    succ(...arguments);\n  } catch (err) {\n    fail(err);\n  }\n});\n\n// Delegate to the success function on success, throws the error otherwise\n// ex: Thing.load(123, throwerr(thing => ...))\nconst throwerr = iferr.bind(null, err => {\n  throw err;\n});\n\n// Prints errors when one is passed, or does nothing otherwise\n// ex: Thing.load(123, printerr)\nconst printerr = iferr(err => console.error(err), () => {});\nmodule.exports = exports = iferr;\nexports.iferr = iferr;\nexports.tiferr = tiferr;\nexports.throwerr = throwerr;\nexports.printerr = printerr;","map":{"version":3,"names":["iferr","fail","succ","err","_len","arguments","length","a","Array","_key","tiferr","throwerr","bind","printerr","console","error","module","exports"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/iferr/iferr.js"],"sourcesContent":["// Delegates to `succ` on sucecss or to `fail` on error\n// ex: Thing.load(123, iferr(cb, thing => ...))\nconst iferr = (fail, succ) => (err, ...a) => err ? fail(err) : succ(...a)\n\n// Like iferr, but also catches errors thrown from `succ` and passes to `fail`\nconst tiferr = (fail, succ) => iferr(fail, (...a) => {\n  try { succ(...a) }\n  catch (err) { fail(err) }\n})\n\n// Delegate to the success function on success, throws the error otherwise\n// ex: Thing.load(123, throwerr(thing => ...))\nconst throwerr = iferr.bind(null, err => { throw err })\n\n// Prints errors when one is passed, or does nothing otherwise\n// ex: Thing.load(123, printerr)\nconst printerr = iferr(err => console.error(err), () => {})\n\nmodule.exports = exports = iferr\nexports.iferr = iferr\nexports.tiferr = tiferr\nexports.throwerr = throwerr\nexports.printerr = printerr\n"],"mappings":"AAAA;AACA;AACA,MAAMA,KAAK,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK,UAACC,GAAG;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAKC,CAAC,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAADF,CAAC,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EAAA,OAAKN,GAAG,GAAGF,IAAI,CAACE,GAAG,CAAC,GAAGD,IAAI,CAAC,GAAGK,CAAC,CAAC;AAAA;;AAEzE;AACA,MAAMG,MAAM,GAAGA,CAACT,IAAI,EAAEC,IAAI,KAAKF,KAAK,CAACC,IAAI,EAAE,YAAU;EACnD,IAAI;IAAEC,IAAI,CAAC,GAAAG,SAAI,CAAC;EAAC,CAAC,CAClB,OAAOF,GAAG,EAAE;IAAEF,IAAI,CAACE,GAAG,CAAC;EAAC;AAC1B,CAAC,CAAC;;AAEF;AACA;AACA,MAAMQ,QAAQ,GAAGX,KAAK,CAACY,IAAI,CAAC,IAAI,EAAET,GAAG,IAAI;EAAE,MAAMA,GAAG;AAAC,CAAC,CAAC;;AAEvD;AACA;AACA,MAAMU,QAAQ,GAAGb,KAAK,CAACG,GAAG,IAAIW,OAAO,CAACC,KAAK,CAACZ,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;AAE3Da,MAAM,CAACC,OAAO,GAAGA,OAAO,GAAGjB,KAAK;AAChCiB,OAAO,CAACjB,KAAK,GAAGA,KAAK;AACrBiB,OAAO,CAACP,MAAM,GAAGA,MAAM;AACvBO,OAAO,CAACN,QAAQ,GAAGA,QAAQ;AAC3BM,OAAO,CAACJ,QAAQ,GAAGA,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}