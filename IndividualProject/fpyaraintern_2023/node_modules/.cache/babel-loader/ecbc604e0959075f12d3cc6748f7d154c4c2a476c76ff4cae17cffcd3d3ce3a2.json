{"ast":null,"code":"'use strict';\n\n// try to find the most reasonable prefix to use\nmodule.exports = findPrefix;\nconst fs = require('fs');\nconst path = require('path');\nfunction findPrefix(dir) {\n  return new Promise((resolve, reject) => {\n    dir = path.resolve(dir);\n\n    // this is a weird special case where an infinite recurse of\n    // node_modules folders resolves to the level that contains the\n    // very first node_modules folder\n    let walkedUp = false;\n    while (path.basename(dir) === 'node_modules') {\n      dir = path.dirname(dir);\n      walkedUp = true;\n    }\n    if (walkedUp) {\n      resolve(dir);\n    } else {\n      resolve(findPrefix_(dir));\n    }\n  });\n}\nfunction findPrefix_(dir, original) {\n  if (!original) original = dir;\n  const parent = path.dirname(dir);\n  // this is a platform independent way of checking if we're in the root\n  // directory\n  if (parent === dir) return Promise.resolve(original);\n  return new Promise((resolve, reject) => {\n    fs.readdir(dir, (err, files) => {\n      if (err) {\n        // an error right away is a bad sign.\n        // unless the prefix was simply a non\n        // existent directory.\n        if (err && dir === original && err.code !== 'ENOENT') {\n          reject(err);\n        } else {\n          resolve(original);\n        }\n      } else if (files.indexOf('node_modules') !== -1 || files.indexOf('package.json') !== -1) {\n        resolve(dir);\n      } else {\n        resolve(findPrefix_(parent, original));\n      }\n    });\n  });\n}","map":{"version":3,"names":["module","exports","findPrefix","fs","require","path","dir","Promise","resolve","reject","walkedUp","basename","dirname","findPrefix_","original","parent","readdir","err","files","code","indexOf"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/find-npm-prefix/find-prefix.js"],"sourcesContent":["'use strict'\n// try to find the most reasonable prefix to use\n\nmodule.exports = findPrefix\n\nconst fs = require('fs')\nconst path = require('path')\n\nfunction findPrefix (dir) {\n  return new Promise((resolve, reject) => {\n    dir = path.resolve(dir)\n\n    // this is a weird special case where an infinite recurse of\n    // node_modules folders resolves to the level that contains the\n    // very first node_modules folder\n    let walkedUp = false\n    while (path.basename(dir) === 'node_modules') {\n      dir = path.dirname(dir)\n      walkedUp = true\n    }\n    if (walkedUp) {\n      resolve(dir)\n    } else {\n      resolve(findPrefix_(dir))\n    }\n  })\n}\n\nfunction findPrefix_ (dir, original) {\n  if (!original) original = dir\n\n  const parent = path.dirname(dir)\n  // this is a platform independent way of checking if we're in the root\n  // directory\n  if (parent === dir) return Promise.resolve(original)\n\n  return new Promise((resolve, reject) => {\n    fs.readdir(dir, (err, files) => {\n      if (err) {\n        // an error right away is a bad sign.\n        // unless the prefix was simply a non\n        // existent directory.\n        if (err && dir === original && err.code !== 'ENOENT') {\n          reject(err)\n        } else {\n          resolve(original)\n        }\n      } else if (files.indexOf('node_modules') !== -1 ||\n                 files.indexOf('package.json') !== -1) {\n        resolve(dir)\n      } else {\n        resolve(findPrefix_(parent, original))\n      }\n    })\n  })\n}\n"],"mappings":"AAAA,YAAY;;AACZ;AAEAA,MAAM,CAACC,OAAO,GAAGC,UAAU;AAE3B,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAE5B,SAASF,UAAUA,CAAEI,GAAG,EAAE;EACxB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCH,GAAG,GAAGD,IAAI,CAACG,OAAO,CAACF,GAAG,CAAC;;IAEvB;IACA;IACA;IACA,IAAII,QAAQ,GAAG,KAAK;IACpB,OAAOL,IAAI,CAACM,QAAQ,CAACL,GAAG,CAAC,KAAK,cAAc,EAAE;MAC5CA,GAAG,GAAGD,IAAI,CAACO,OAAO,CAACN,GAAG,CAAC;MACvBI,QAAQ,GAAG,IAAI;IACjB;IACA,IAAIA,QAAQ,EAAE;MACZF,OAAO,CAACF,GAAG,CAAC;IACd,CAAC,MAAM;MACLE,OAAO,CAACK,WAAW,CAACP,GAAG,CAAC,CAAC;IAC3B;EACF,CAAC,CAAC;AACJ;AAEA,SAASO,WAAWA,CAAEP,GAAG,EAAEQ,QAAQ,EAAE;EACnC,IAAI,CAACA,QAAQ,EAAEA,QAAQ,GAAGR,GAAG;EAE7B,MAAMS,MAAM,GAAGV,IAAI,CAACO,OAAO,CAACN,GAAG,CAAC;EAChC;EACA;EACA,IAAIS,MAAM,KAAKT,GAAG,EAAE,OAAOC,OAAO,CAACC,OAAO,CAACM,QAAQ,CAAC;EAEpD,OAAO,IAAIP,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCN,EAAE,CAACa,OAAO,CAACV,GAAG,EAAE,CAACW,GAAG,EAAEC,KAAK,KAAK;MAC9B,IAAID,GAAG,EAAE;QACP;QACA;QACA;QACA,IAAIA,GAAG,IAAIX,GAAG,KAAKQ,QAAQ,IAAIG,GAAG,CAACE,IAAI,KAAK,QAAQ,EAAE;UACpDV,MAAM,CAACQ,GAAG,CAAC;QACb,CAAC,MAAM;UACLT,OAAO,CAACM,QAAQ,CAAC;QACnB;MACF,CAAC,MAAM,IAAII,KAAK,CAACE,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,IACpCF,KAAK,CAACE,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,EAAE;QAC/CZ,OAAO,CAACF,GAAG,CAAC;MACd,CAAC,MAAM;QACLE,OAAO,CAACK,WAAW,CAACE,MAAM,EAAED,QAAQ,CAAC,CAAC;MACxC;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}