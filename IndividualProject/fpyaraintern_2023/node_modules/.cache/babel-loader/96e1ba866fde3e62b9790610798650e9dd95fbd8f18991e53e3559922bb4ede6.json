{"ast":null,"code":"// pass in a manifest with a 'bin' field here, and it'll turn it\n// into a properly santized bin object\nconst {\n  join,\n  basename\n} = require('path');\nconst normalize = pkg => !pkg.bin ? removeBin(pkg) : typeof pkg.bin === 'string' ? normalizeString(pkg) : Array.isArray(pkg.bin) ? normalizeArray(pkg) : typeof pkg.bin === 'object' ? normalizeObject(pkg) : removeBin(pkg);\nconst normalizeString = pkg => {\n  if (!pkg.name) return removeBin(pkg);\n  pkg.bin = {\n    [pkg.name]: pkg.bin\n  };\n  return normalizeObject(pkg);\n};\nconst normalizeArray = pkg => {\n  pkg.bin = pkg.bin.reduce((acc, k) => {\n    acc[basename(k)] = k;\n    return acc;\n  }, {});\n  return normalizeObject(pkg);\n};\nconst removeBin = pkg => {\n  delete pkg.bin;\n  return pkg;\n};\nconst normalizeObject = pkg => {\n  const orig = pkg.bin;\n  const clean = {};\n  let hasBins = false;\n  Object.keys(orig).forEach(binKey => {\n    const base = join('/', basename(binKey.replace(/\\\\|:/g, '/'))).substr(1);\n    if (typeof orig[binKey] !== 'string' || !base) return;\n    const binTarget = join('/', orig[binKey]).replace(/\\\\/g, '/').substr(1);\n    if (!binTarget) return;\n    clean[base] = binTarget;\n    hasBins = true;\n  });\n  if (hasBins) pkg.bin = clean;else delete pkg.bin;\n  return pkg;\n};\nmodule.exports = normalize;","map":{"version":3,"names":["join","basename","require","normalize","pkg","bin","removeBin","normalizeString","Array","isArray","normalizeArray","normalizeObject","name","reduce","acc","k","orig","clean","hasBins","Object","keys","forEach","binKey","base","replace","substr","binTarget","module","exports"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/npm-normalize-package-bin/index.js"],"sourcesContent":["// pass in a manifest with a 'bin' field here, and it'll turn it\n// into a properly santized bin object\nconst {join, basename} = require('path')\n\nconst normalize = pkg =>\n  !pkg.bin ? removeBin(pkg)\n  : typeof pkg.bin === 'string' ? normalizeString(pkg)\n  : Array.isArray(pkg.bin) ? normalizeArray(pkg)\n  : typeof pkg.bin === 'object' ? normalizeObject(pkg)\n  : removeBin(pkg)\n\nconst normalizeString = pkg => {\n  if (!pkg.name)\n    return removeBin(pkg)\n  pkg.bin = { [pkg.name]: pkg.bin }\n  return normalizeObject(pkg)\n}\n\nconst normalizeArray = pkg => {\n  pkg.bin = pkg.bin.reduce((acc, k) => {\n    acc[basename(k)] = k\n    return acc\n  }, {})\n  return normalizeObject(pkg)\n}\n\nconst removeBin = pkg => {\n  delete pkg.bin\n  return pkg\n}\n\nconst normalizeObject = pkg => {\n  const orig = pkg.bin\n  const clean = {}\n  let hasBins = false\n  Object.keys(orig).forEach(binKey => {\n    const base = join('/', basename(binKey.replace(/\\\\|:/g, '/'))).substr(1)\n\n    if (typeof orig[binKey] !== 'string' || !base)\n      return\n\n    const binTarget = join('/', orig[binKey])\n      .replace(/\\\\/g, '/').substr(1)\n\n    if (!binTarget)\n      return\n\n    clean[base] = binTarget\n    hasBins = true\n  })\n\n  if (hasBins)\n    pkg.bin = clean\n  else\n    delete pkg.bin\n\n  return pkg\n}\n\nmodule.exports = normalize\n"],"mappings":"AAAA;AACA;AACA,MAAM;EAACA,IAAI;EAAEC;AAAQ,CAAC,GAAGC,OAAO,CAAC,MAAM,CAAC;AAExC,MAAMC,SAAS,GAAGC,GAAG,IACnB,CAACA,GAAG,CAACC,GAAG,GAAGC,SAAS,CAACF,GAAG,CAAC,GACvB,OAAOA,GAAG,CAACC,GAAG,KAAK,QAAQ,GAAGE,eAAe,CAACH,GAAG,CAAC,GAClDI,KAAK,CAACC,OAAO,CAACL,GAAG,CAACC,GAAG,CAAC,GAAGK,cAAc,CAACN,GAAG,CAAC,GAC5C,OAAOA,GAAG,CAACC,GAAG,KAAK,QAAQ,GAAGM,eAAe,CAACP,GAAG,CAAC,GAClDE,SAAS,CAACF,GAAG,CAAC;AAElB,MAAMG,eAAe,GAAGH,GAAG,IAAI;EAC7B,IAAI,CAACA,GAAG,CAACQ,IAAI,EACX,OAAON,SAAS,CAACF,GAAG,CAAC;EACvBA,GAAG,CAACC,GAAG,GAAG;IAAE,CAACD,GAAG,CAACQ,IAAI,GAAGR,GAAG,CAACC;EAAI,CAAC;EACjC,OAAOM,eAAe,CAACP,GAAG,CAAC;AAC7B,CAAC;AAED,MAAMM,cAAc,GAAGN,GAAG,IAAI;EAC5BA,GAAG,CAACC,GAAG,GAAGD,GAAG,CAACC,GAAG,CAACQ,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAK;IACnCD,GAAG,CAACb,QAAQ,CAACc,CAAC,CAAC,CAAC,GAAGA,CAAC;IACpB,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACN,OAAOH,eAAe,CAACP,GAAG,CAAC;AAC7B,CAAC;AAED,MAAME,SAAS,GAAGF,GAAG,IAAI;EACvB,OAAOA,GAAG,CAACC,GAAG;EACd,OAAOD,GAAG;AACZ,CAAC;AAED,MAAMO,eAAe,GAAGP,GAAG,IAAI;EAC7B,MAAMY,IAAI,GAAGZ,GAAG,CAACC,GAAG;EACpB,MAAMY,KAAK,GAAG,CAAC,CAAC;EAChB,IAAIC,OAAO,GAAG,KAAK;EACnBC,MAAM,CAACC,IAAI,CAACJ,IAAI,CAAC,CAACK,OAAO,CAACC,MAAM,IAAI;IAClC,MAAMC,IAAI,GAAGvB,IAAI,CAAC,GAAG,EAAEC,QAAQ,CAACqB,MAAM,CAACE,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC;IAExE,IAAI,OAAOT,IAAI,CAACM,MAAM,CAAC,KAAK,QAAQ,IAAI,CAACC,IAAI,EAC3C;IAEF,MAAMG,SAAS,GAAG1B,IAAI,CAAC,GAAG,EAAEgB,IAAI,CAACM,MAAM,CAAC,CAAC,CACtCE,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC;IAEhC,IAAI,CAACC,SAAS,EACZ;IAEFT,KAAK,CAACM,IAAI,CAAC,GAAGG,SAAS;IACvBR,OAAO,GAAG,IAAI;EAChB,CAAC,CAAC;EAEF,IAAIA,OAAO,EACTd,GAAG,CAACC,GAAG,GAAGY,KAAK,MAEf,OAAOb,GAAG,CAACC,GAAG;EAEhB,OAAOD,GAAG;AACZ,CAAC;AAEDuB,MAAM,CAACC,OAAO,GAAGzB,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}