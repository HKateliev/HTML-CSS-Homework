{"ast":null,"code":"'use strict';\n\nconst BB = require('bluebird');\nconst fetch = require('npm-registry-fetch');\nconst manifest = require('./manifest');\nconst optCheck = require('../../util/opt-check');\nconst PassThrough = require('stream').PassThrough;\nconst ssri = require('ssri');\nconst url = require('url');\nmodule.exports = tarball;\nfunction tarball(spec, opts) {\n  opts = optCheck(opts);\n  const registry = fetch.pickRegistry(spec, opts);\n  const stream = new PassThrough();\n  let mani;\n  if (opts.resolved &&\n  // spec.type === 'version' &&\n  opts.resolved.indexOf(registry) === 0) {\n    // fakeChild is a shortcut to avoid looking up a manifest!\n    mani = BB.resolve({\n      name: spec.name,\n      version: spec.fetchSpec,\n      _integrity: opts.integrity,\n      _resolved: opts.resolved,\n      _fakeChild: true\n    });\n  } else {\n    // We can't trust opts.resolved if it's going to a separate host.\n    mani = manifest(spec, opts);\n  }\n  mani.then(mani => {\n    !mani._fakeChild && stream.emit('manifest', mani);\n    const fetchStream = fromManifest(mani, spec, opts).on('integrity', i => stream.emit('integrity', i));\n    fetchStream.on('error', err => stream.emit('error', err));\n    fetchStream.pipe(stream);\n    return null;\n  }).catch(err => stream.emit('error', err));\n  return stream;\n}\nmodule.exports.fromManifest = fromManifest;\nfunction fromManifest(manifest, spec, opts) {\n  opts = optCheck(opts);\n  if (spec.scope) {\n    opts = opts.concat({\n      scope: spec.scope\n    });\n  }\n  const stream = new PassThrough();\n  const registry = fetch.pickRegistry(spec, opts);\n  const uri = getTarballUrl(spec, registry, manifest, opts);\n  fetch(uri, opts.concat({\n    headers: {\n      'pacote-req-type': 'tarball',\n      'pacote-pkg-id': `registry:${manifest.name}@${uri}`\n    },\n    integrity: manifest._integrity,\n    algorithms: [manifest._integrity ? ssri.parse(manifest._integrity).pickAlgorithm() : 'sha1'],\n    spec\n  }, opts)).then(res => {\n    const hash = res.headers.get('x-local-cache-hash');\n    if (hash) {\n      stream.emit('integrity', decodeURIComponent(hash));\n    }\n    res.body.on('error', err => stream.emit('error', err));\n    res.body.pipe(stream);\n    return null;\n  }).catch(err => stream.emit('error', err));\n  return stream;\n}\nfunction getTarballUrl(spec, registry, mani, opts) {\n  const reg = url.parse(registry);\n  const tarball = url.parse(mani._resolved);\n  // https://github.com/npm/npm/pull/9471\n  //\n  // TL;DR: Some alternative registries host tarballs on http and packuments\n  // on https, and vice-versa. There's also a case where people who can't use\n  // SSL to access the npm registry, for example, might use\n  // `--registry=http://registry.npmjs.org/`. In this case, we need to\n  // rewrite `tarball` to match the protocol.\n  //\n  if (reg.hostname === tarball.hostname && reg.protocol !== tarball.protocol) {\n    tarball.protocol = reg.protocol;\n    // Ports might be same host different protocol!\n    if (reg.port !== tarball.port) {\n      delete tarball.host;\n      tarball.port = reg.port;\n    }\n    delete tarball.href;\n  }\n  return url.format(tarball);\n}","map":{"version":3,"names":["BB","require","fetch","manifest","optCheck","PassThrough","ssri","url","module","exports","tarball","spec","opts","registry","pickRegistry","stream","mani","resolved","indexOf","resolve","name","version","fetchSpec","_integrity","integrity","_resolved","_fakeChild","then","emit","fetchStream","fromManifest","on","i","err","pipe","catch","scope","concat","uri","getTarballUrl","headers","algorithms","parse","pickAlgorithm","res","hash","get","decodeURIComponent","body","reg","hostname","protocol","port","host","href","format"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/pacote/lib/fetchers/registry/tarball.js"],"sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst fetch = require('npm-registry-fetch')\nconst manifest = require('./manifest')\nconst optCheck = require('../../util/opt-check')\nconst PassThrough = require('stream').PassThrough\nconst ssri = require('ssri')\nconst url = require('url')\n\nmodule.exports = tarball\nfunction tarball (spec, opts) {\n  opts = optCheck(opts)\n  const registry = fetch.pickRegistry(spec, opts)\n  const stream = new PassThrough()\n  let mani\n  if (\n    opts.resolved &&\n    // spec.type === 'version' &&\n    opts.resolved.indexOf(registry) === 0\n  ) {\n    // fakeChild is a shortcut to avoid looking up a manifest!\n    mani = BB.resolve({\n      name: spec.name,\n      version: spec.fetchSpec,\n      _integrity: opts.integrity,\n      _resolved: opts.resolved,\n      _fakeChild: true\n    })\n  } else {\n    // We can't trust opts.resolved if it's going to a separate host.\n    mani = manifest(spec, opts)\n  }\n\n  mani.then(mani => {\n    !mani._fakeChild && stream.emit('manifest', mani)\n    const fetchStream = fromManifest(mani, spec, opts).on(\n      'integrity', i => stream.emit('integrity', i)\n    )\n    fetchStream.on('error', err => stream.emit('error', err))\n    fetchStream.pipe(stream)\n    return null\n  }).catch(err => stream.emit('error', err))\n  return stream\n}\n\nmodule.exports.fromManifest = fromManifest\nfunction fromManifest (manifest, spec, opts) {\n  opts = optCheck(opts)\n  if (spec.scope) { opts = opts.concat({ scope: spec.scope }) }\n  const stream = new PassThrough()\n  const registry = fetch.pickRegistry(spec, opts)\n  const uri = getTarballUrl(spec, registry, manifest, opts)\n  fetch(uri, opts.concat({\n    headers: {\n      'pacote-req-type': 'tarball',\n      'pacote-pkg-id': `registry:${manifest.name}@${uri}`\n    },\n    integrity: manifest._integrity,\n    algorithms: [\n      manifest._integrity\n        ? ssri.parse(manifest._integrity).pickAlgorithm()\n        : 'sha1'\n    ],\n    spec\n  }, opts))\n    .then(res => {\n      const hash = res.headers.get('x-local-cache-hash')\n      if (hash) {\n        stream.emit('integrity', decodeURIComponent(hash))\n      }\n      res.body.on('error', err => stream.emit('error', err))\n      res.body.pipe(stream)\n      return null\n    })\n    .catch(err => stream.emit('error', err))\n  return stream\n}\n\nfunction getTarballUrl (spec, registry, mani, opts) {\n  const reg = url.parse(registry)\n  const tarball = url.parse(mani._resolved)\n  // https://github.com/npm/npm/pull/9471\n  //\n  // TL;DR: Some alternative registries host tarballs on http and packuments\n  // on https, and vice-versa. There's also a case where people who can't use\n  // SSL to access the npm registry, for example, might use\n  // `--registry=http://registry.npmjs.org/`. In this case, we need to\n  // rewrite `tarball` to match the protocol.\n  //\n  if (reg.hostname === tarball.hostname && reg.protocol !== tarball.protocol) {\n    tarball.protocol = reg.protocol\n    // Ports might be same host different protocol!\n    if (reg.port !== tarball.port) {\n      delete tarball.host\n      tarball.port = reg.port\n    }\n    delete tarball.href\n  }\n  return url.format(tarball)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}