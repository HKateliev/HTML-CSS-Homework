{"ast":null,"code":"'use strict';\n\nconst BB = require('bluebird');\nconst andAddParentToErrors = require('./and-add-parent-to-errors.js');\nconst failedDependency = require('./deps.js').failedDependency;\nconst isInstallable = BB.promisify(require('./validate-args.js').isInstallable);\nconst moduleName = require('../utils/module-name.js');\nconst npm = require('../npm.js');\nconst reportOptionalFailure = require('./report-optional-failure.js');\nconst validate = require('aproba');\nconst actions = {};\nactions.fetch = require('./action/fetch.js');\nactions.extract = require('./action/extract.js');\nactions.build = require('./action/build.js');\nactions.preinstall = require('./action/preinstall.js');\nactions.install = require('./action/install.js');\nactions.postinstall = require('./action/postinstall.js');\nactions.prepare = require('./action/prepare.js');\nactions.finalize = require('./action/finalize.js');\nactions.remove = require('./action/remove.js');\nactions.unbuild = require('./action/unbuild.js');\nactions.move = require('./action/move.js');\nactions['global-install'] = require('./action/global-install.js');\nactions['global-link'] = require('./action/global-link.js');\nactions['refresh-package-json'] = require('./action/refresh-package-json.js');\n\n// FIXME: We wrap actions like three ways to sunday here.\n// Rewrite this to only work one way.\n\nObject.keys(actions).forEach(function (actionName) {\n  var action = actions[actionName];\n  actions[actionName] = (staging, pkg, log) => {\n    validate('SOO', [staging, pkg, log]);\n    // refuse to run actions for failed packages\n    if (pkg.failed) return BB.resolve();\n    if (action.rollback) {\n      if (!pkg.rollback) pkg.rollback = [];\n      pkg.rollback.unshift(action.rollback);\n    }\n    if (action.commit) {\n      if (!pkg.commit) pkg.commit = [];\n      pkg.commit.push(action.commit);\n    }\n    let actionP;\n    if (pkg.knownInstallable) {\n      actionP = runAction(action, staging, pkg, log);\n    } else {\n      actionP = isInstallable(null, pkg.package).then(() => {\n        pkg.knownInstallable = true;\n        return runAction(action, staging, pkg, log);\n      });\n    }\n    return actionP.then(() => {\n      log.finish();\n    }, err => {\n      return BB.fromNode(cb => {\n        andAddParentToErrors(pkg.parent, cb)(err);\n      }).catch(err => {\n        return handleOptionalDepErrors(pkg, err);\n      });\n    });\n  };\n  actions[actionName].init = action.init || (() => BB.resolve());\n  actions[actionName].teardown = action.teardown || (() => BB.resolve());\n});\nexports.actions = actions;\nfunction runAction(action, staging, pkg, log) {\n  return BB.fromNode(cb => {\n    const result = action(staging, pkg, log, cb);\n    if (result && result.then) {\n      result.then(() => cb(), cb);\n    }\n  });\n}\nfunction markAsFailed(pkg) {\n  if (pkg.failed) return;\n  pkg.failed = true;\n  pkg.requires.forEach(req => {\n    var requiredBy = req.requiredBy.filter(reqReqBy => !reqReqBy.failed);\n    if (requiredBy.length === 0 && !req.userRequired) {\n      markAsFailed(req);\n    }\n  });\n}\nfunction handleOptionalDepErrors(pkg, err) {\n  markAsFailed(pkg);\n  var anyFatal = failedDependency(pkg);\n  if (anyFatal) {\n    throw err;\n  } else {\n    reportOptionalFailure(pkg, null, err);\n  }\n}\nexports.doOne = doOne;\nfunction doOne(cmd, staging, pkg, log, next) {\n  validate('SSOOF', arguments);\n  const prepped = prepareAction([cmd, pkg], staging, log);\n  return withInit(actions[cmd], () => {\n    return execAction(prepped);\n  }).nodeify(next);\n}\nexports.doParallel = doParallel;\nfunction doParallel(type, staging, actionsToRun, log, next) {\n  validate('SSAOF', arguments);\n  const acts = actionsToRun.reduce((acc, todo) => {\n    if (todo[0] === type) {\n      acc.push(prepareAction(todo, staging, log));\n    }\n    return acc;\n  }, []);\n  log.silly('doParallel', type + ' ' + acts.length);\n  time(log);\n  if (!acts.length) {\n    return next();\n  }\n  return withInit(actions[type], () => {\n    return BB.map(acts, execAction, {\n      concurrency: npm.limit.action\n    });\n  }).nodeify(err => {\n    log.finish();\n    timeEnd(log);\n    next(err);\n  });\n}\nexports.doSerial = doSerial;\nfunction doSerial(type, staging, actionsToRun, log, next) {\n  validate('SSAOF', arguments);\n  log.silly('doSerial', '%s %d', type, actionsToRun.length);\n  runSerial(type, staging, actionsToRun, log, next);\n}\nexports.doReverseSerial = doReverseSerial;\nfunction doReverseSerial(type, staging, actionsToRun, log, next) {\n  validate('SSAOF', arguments);\n  log.silly('doReverseSerial', '%s %d', type, actionsToRun.length);\n  runSerial(type, staging, [].concat(actionsToRun).reverse(), log, next);\n}\nfunction runSerial(type, staging, actionsToRun, log, next) {\n  const acts = actionsToRun.reduce((acc, todo) => {\n    if (todo[0] === type) {\n      acc.push(prepareAction(todo, staging, log));\n    }\n    return acc;\n  }, []);\n  time(log);\n  if (!acts.length) {\n    return next();\n  }\n  return withInit(actions[type], () => {\n    return BB.each(acts, execAction);\n  }).nodeify(err => {\n    log.finish();\n    timeEnd(log);\n    next(err);\n  });\n}\nfunction time(log) {\n  process.emit('time', 'action:' + log.name);\n}\nfunction timeEnd(log) {\n  process.emit('timeEnd', 'action:' + log.name);\n}\nfunction withInit(action, body) {\n  return BB.using(action.init().disposer(() => action.teardown()), body);\n}\nfunction prepareAction(action, staging, log) {\n  validate('ASO', arguments);\n  validate('SO', action);\n  var cmd = action[0];\n  var pkg = action[1];\n  if (!actions[cmd]) throw new Error('Unknown decomposed command \"' + cmd + '\" (is it new?)');\n  return [actions[cmd], staging, pkg, log.newGroup(cmd + ':' + moduleName(pkg))];\n}\nfunction execAction(todo) {\n  return todo[0].apply(null, todo.slice(1));\n}","map":{"version":3,"names":["BB","require","andAddParentToErrors","failedDependency","isInstallable","promisify","moduleName","npm","reportOptionalFailure","validate","actions","fetch","extract","build","preinstall","install","postinstall","prepare","finalize","remove","unbuild","move","Object","keys","forEach","actionName","action","staging","pkg","log","failed","resolve","rollback","unshift","commit","push","actionP","knownInstallable","runAction","package","then","finish","err","fromNode","cb","parent","catch","handleOptionalDepErrors","init","teardown","exports","result","markAsFailed","requires","req","requiredBy","filter","reqReqBy","length","userRequired","anyFatal","doOne","cmd","next","arguments","prepped","prepareAction","withInit","execAction","nodeify","doParallel","type","actionsToRun","acts","reduce","acc","todo","silly","time","map","concurrency","limit","timeEnd","doSerial","runSerial","doReverseSerial","concat","reverse","each","process","emit","name","body","using","disposer","Error","newGroup","apply","slice"],"sources":["/Users/hkateliev/node_modules/npm/lib/install/actions.js"],"sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst andAddParentToErrors = require('./and-add-parent-to-errors.js')\nconst failedDependency = require('./deps.js').failedDependency\nconst isInstallable = BB.promisify(require('./validate-args.js').isInstallable)\nconst moduleName = require('../utils/module-name.js')\nconst npm = require('../npm.js')\nconst reportOptionalFailure = require('./report-optional-failure.js')\nconst validate = require('aproba')\n\nconst actions = {}\n\nactions.fetch = require('./action/fetch.js')\nactions.extract = require('./action/extract.js')\nactions.build = require('./action/build.js')\nactions.preinstall = require('./action/preinstall.js')\nactions.install = require('./action/install.js')\nactions.postinstall = require('./action/postinstall.js')\nactions.prepare = require('./action/prepare.js')\nactions.finalize = require('./action/finalize.js')\nactions.remove = require('./action/remove.js')\nactions.unbuild = require('./action/unbuild.js')\nactions.move = require('./action/move.js')\nactions['global-install'] = require('./action/global-install.js')\nactions['global-link'] = require('./action/global-link.js')\nactions['refresh-package-json'] = require('./action/refresh-package-json.js')\n\n// FIXME: We wrap actions like three ways to sunday here.\n// Rewrite this to only work one way.\n\nObject.keys(actions).forEach(function (actionName) {\n  var action = actions[actionName]\n  actions[actionName] = (staging, pkg, log) => {\n    validate('SOO', [staging, pkg, log])\n    // refuse to run actions for failed packages\n    if (pkg.failed) return BB.resolve()\n    if (action.rollback) {\n      if (!pkg.rollback) pkg.rollback = []\n      pkg.rollback.unshift(action.rollback)\n    }\n    if (action.commit) {\n      if (!pkg.commit) pkg.commit = []\n      pkg.commit.push(action.commit)\n    }\n\n    let actionP\n    if (pkg.knownInstallable) {\n      actionP = runAction(action, staging, pkg, log)\n    } else {\n      actionP = isInstallable(null, pkg.package).then(() => {\n        pkg.knownInstallable = true\n        return runAction(action, staging, pkg, log)\n      })\n    }\n\n    return actionP.then(() => {\n      log.finish()\n    }, (err) => {\n      return BB.fromNode((cb) => {\n        andAddParentToErrors(pkg.parent, cb)(err)\n      }).catch((err) => {\n        return handleOptionalDepErrors(pkg, err)\n      })\n    })\n  }\n  actions[actionName].init = action.init || (() => BB.resolve())\n  actions[actionName].teardown = action.teardown || (() => BB.resolve())\n})\nexports.actions = actions\n\nfunction runAction (action, staging, pkg, log) {\n  return BB.fromNode((cb) => {\n    const result = action(staging, pkg, log, cb)\n    if (result && result.then) {\n      result.then(() => cb(), cb)\n    }\n  })\n}\n\nfunction markAsFailed (pkg) {\n  if (pkg.failed) return\n  pkg.failed = true\n  pkg.requires.forEach((req) => {\n    var requiredBy = req.requiredBy.filter((reqReqBy) => !reqReqBy.failed)\n    if (requiredBy.length === 0 && !req.userRequired) {\n      markAsFailed(req)\n    }\n  })\n}\n\nfunction handleOptionalDepErrors (pkg, err) {\n  markAsFailed(pkg)\n  var anyFatal = failedDependency(pkg)\n  if (anyFatal) {\n    throw err\n  } else {\n    reportOptionalFailure(pkg, null, err)\n  }\n}\n\nexports.doOne = doOne\nfunction doOne (cmd, staging, pkg, log, next) {\n  validate('SSOOF', arguments)\n  const prepped = prepareAction([cmd, pkg], staging, log)\n  return withInit(actions[cmd], () => {\n    return execAction(prepped)\n  }).nodeify(next)\n}\n\nexports.doParallel = doParallel\nfunction doParallel (type, staging, actionsToRun, log, next) {\n  validate('SSAOF', arguments)\n  const acts = actionsToRun.reduce((acc, todo) => {\n    if (todo[0] === type) {\n      acc.push(prepareAction(todo, staging, log))\n    }\n    return acc\n  }, [])\n  log.silly('doParallel', type + ' ' + acts.length)\n  time(log)\n  if (!acts.length) { return next() }\n  return withInit(actions[type], () => {\n    return BB.map(acts, execAction, {\n      concurrency: npm.limit.action\n    })\n  }).nodeify((err) => {\n    log.finish()\n    timeEnd(log)\n    next(err)\n  })\n}\n\nexports.doSerial = doSerial\nfunction doSerial (type, staging, actionsToRun, log, next) {\n  validate('SSAOF', arguments)\n  log.silly('doSerial', '%s %d', type, actionsToRun.length)\n  runSerial(type, staging, actionsToRun, log, next)\n}\n\nexports.doReverseSerial = doReverseSerial\nfunction doReverseSerial (type, staging, actionsToRun, log, next) {\n  validate('SSAOF', arguments)\n  log.silly('doReverseSerial', '%s %d', type, actionsToRun.length)\n  runSerial(type, staging, [].concat(actionsToRun).reverse(), log, next)\n}\n\nfunction runSerial (type, staging, actionsToRun, log, next) {\n  const acts = actionsToRun.reduce((acc, todo) => {\n    if (todo[0] === type) {\n      acc.push(prepareAction(todo, staging, log))\n    }\n    return acc\n  }, [])\n  time(log)\n  if (!acts.length) { return next() }\n  return withInit(actions[type], () => {\n    return BB.each(acts, execAction)\n  }).nodeify((err) => {\n    log.finish()\n    timeEnd(log)\n    next(err)\n  })\n}\n\nfunction time (log) {\n  process.emit('time', 'action:' + log.name)\n}\nfunction timeEnd (log) {\n  process.emit('timeEnd', 'action:' + log.name)\n}\n\nfunction withInit (action, body) {\n  return BB.using(\n    action.init().disposer(() => action.teardown()),\n    body\n  )\n}\n\nfunction prepareAction (action, staging, log) {\n  validate('ASO', arguments)\n  validate('SO', action)\n  var cmd = action[0]\n  var pkg = action[1]\n  if (!actions[cmd]) throw new Error('Unknown decomposed command \"' + cmd + '\" (is it new?)')\n  return [actions[cmd], staging, pkg, log.newGroup(cmd + ':' + moduleName(pkg))]\n}\n\nfunction execAction (todo) {\n  return todo[0].apply(null, todo.slice(1))\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}