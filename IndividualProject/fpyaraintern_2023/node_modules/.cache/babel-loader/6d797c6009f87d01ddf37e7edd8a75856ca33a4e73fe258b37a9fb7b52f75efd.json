{"ast":null,"code":"'use strict';\n\n// Do a two-pass walk, first to get the list of packages that need to be\n// bundled, then again to get the actual files and folders.\n// Keep a cache of node_modules content and package.json data, so that the\n// second walk doesn't have to re-do all the same work.\nconst bundleWalk = require('npm-bundled');\nconst BundleWalker = bundleWalk.BundleWalker;\nconst BundleWalkerSync = bundleWalk.BundleWalkerSync;\nconst ignoreWalk = require('ignore-walk');\nconst IgnoreWalker = ignoreWalk.Walker;\nconst IgnoreWalkerSync = ignoreWalk.WalkerSync;\nconst rootBuiltinRules = Symbol('root-builtin-rules');\nconst packageNecessaryRules = Symbol('package-necessary-rules');\nconst path = require('path');\nconst normalizePackageBin = require('npm-normalize-package-bin');\nconst defaultRules = ['.npmignore', '.gitignore', '**/.git', '**/.svn', '**/.hg', '**/CVS', '**/.git/**', '**/.svn/**', '**/.hg/**', '**/CVS/**', '/.lock-wscript', '/.wafpickle-*', '/build/config.gypi', 'npm-debug.log', '**/.npmrc', '.*.swp', '.DS_Store', '**/.DS_Store/**', '._*', '**/._*/**', '*.orig', '/package-lock.json', '/yarn.lock', 'archived-packages/**', 'core', '!core/', '!**/core/', '*.core', '*.vgcore', 'vgcore.*', 'core.+([0-9])'];\n\n// There may be others, but :?|<> are handled by node-tar\nconst nameIsBadForWindows = file => /\\*/.test(file);\n\n// a decorator that applies our custom rules to an ignore walker\nconst npmWalker = Class => class Walker extends Class {\n  constructor(opt) {\n    opt = opt || {};\n\n    // the order in which rules are applied.\n    opt.ignoreFiles = [rootBuiltinRules, 'package.json', '.npmignore', '.gitignore', packageNecessaryRules];\n    opt.includeEmpty = false;\n    opt.path = opt.path || process.cwd();\n    const dirName = path.basename(opt.path);\n    const parentName = path.basename(path.dirname(opt.path));\n    opt.follow = dirName === 'node_modules' || parentName === 'node_modules' && /^@/.test(dirName);\n    super(opt);\n\n    // ignore a bunch of things by default at the root level.\n    // also ignore anything in node_modules, except bundled dependencies\n    if (!this.parent) {\n      this.bundled = opt.bundled || [];\n      this.bundledScopes = Array.from(new Set(this.bundled.filter(f => /^@/.test(f)).map(f => f.split('/')[0])));\n      const rules = defaultRules.join('\\n') + '\\n';\n      this.packageJsonCache = opt.packageJsonCache || new Map();\n      super.onReadIgnoreFile(rootBuiltinRules, rules, _ => _);\n    } else {\n      this.bundled = [];\n      this.bundledScopes = [];\n      this.packageJsonCache = this.parent.packageJsonCache;\n    }\n  }\n  onReaddir(entries) {\n    if (!this.parent) {\n      entries = entries.filter(e => e !== '.git' && !(e === 'node_modules' && this.bundled.length === 0));\n    }\n    return super.onReaddir(entries);\n  }\n  filterEntry(entry, partial) {\n    // get the partial path from the root of the walk\n    const p = this.path.substr(this.root.length + 1);\n    const pkgre = /^node_modules\\/(@[^\\/]+\\/?[^\\/]+|[^\\/]+)(\\/.*)?$/;\n    const isRoot = !this.parent;\n    const pkg = isRoot && pkgre.test(entry) ? entry.replace(pkgre, '$1') : null;\n    const rootNM = isRoot && entry === 'node_modules';\n    const rootPJ = isRoot && entry === 'package.json';\n    return (\n      // if we're in a bundled package, check with the parent.\n      /^node_modules($|\\/)/i.test(p) ? this.parent.filterEntry(this.basename + '/' + entry, partial)\n\n      // if package is bundled, all files included\n      // also include @scope dirs for bundled scoped deps\n      // they'll be ignored if no files end up in them.\n      // However, this only matters if we're in the root.\n      // node_modules folders elsewhere, like lib/node_modules,\n      // should be included normally unless ignored.\n      : pkg ? -1 !== this.bundled.indexOf(pkg) || -1 !== this.bundledScopes.indexOf(pkg)\n\n      // only walk top node_modules if we want to bundle something\n      : rootNM ? !!this.bundled.length\n\n      // always include package.json at the root.\n      : rootPJ ? true\n\n      // otherwise, follow ignore-walk's logic\n      : super.filterEntry(entry, partial)\n    );\n  }\n  filterEntries() {\n    if (this.ignoreRules['package.json']) this.ignoreRules['.gitignore'] = this.ignoreRules['.npmignore'] = null;else if (this.ignoreRules['.npmignore']) this.ignoreRules['.gitignore'] = null;\n    this.filterEntries = super.filterEntries;\n    super.filterEntries();\n  }\n  addIgnoreFile(file, then) {\n    const ig = path.resolve(this.path, file);\n    if (this.packageJsonCache.has(ig)) this.onPackageJson(ig, this.packageJsonCache.get(ig), then);else super.addIgnoreFile(file, then);\n  }\n  onPackageJson(ig, pkg, then) {\n    this.packageJsonCache.set(ig, pkg);\n\n    // if there's a bin, browser or main, make sure we don't ignore it\n    // also, don't ignore the package.json itself!\n    //\n    // Weird side-effect of this: a readme (etc) file will be included\n    // if it exists anywhere within a folder with a package.json file.\n    // The original intent was only to include these files in the root,\n    // but now users in the wild are dependent on that behavior for\n    // localized documentation and other use cases.  Adding a `/` to\n    // these rules, while tempting and arguably more \"correct\", is a\n    // breaking change.\n    const rules = [pkg.browser ? '!' + pkg.browser : '', pkg.main ? '!' + pkg.main : '', '!package.json', '!npm-shrinkwrap.json', '!@(readme|copying|license|licence|notice|changes|changelog|history){,.*[^~$]}'];\n    if (pkg.bin) {\n      // always an object, because normalized already\n      for (const key in pkg.bin) rules.push('!' + pkg.bin[key]);\n    }\n    const data = rules.filter(f => f).join('\\n') + '\\n';\n    super.onReadIgnoreFile(packageNecessaryRules, data, _ => _);\n    if (Array.isArray(pkg.files)) super.onReadIgnoreFile('package.json', '*\\n' + pkg.files.map(f => '!' + f + '\\n!' + f.replace(/\\/+$/, '') + '/**').join('\\n') + '\\n', then);else then();\n  }\n\n  // override parent stat function to completely skip any filenames\n  // that will break windows entirely.\n  // XXX(isaacs) Next major version should make this an error instead.\n  stat(entry, file, dir, then) {\n    if (nameIsBadForWindows(entry)) then();else super.stat(entry, file, dir, then);\n  }\n\n  // override parent onstat function to nix all symlinks\n  onstat(st, entry, file, dir, then) {\n    if (st.isSymbolicLink()) then();else super.onstat(st, entry, file, dir, then);\n  }\n  onReadIgnoreFile(file, data, then) {\n    if (file === 'package.json') try {\n      const ig = path.resolve(this.path, file);\n      this.onPackageJson(ig, normalizePackageBin(JSON.parse(data)), then);\n    } catch (er) {\n      // ignore package.json files that are not json\n      then();\n    } else super.onReadIgnoreFile(file, data, then);\n  }\n  sort(a, b) {\n    return sort(a, b);\n  }\n};\nclass Walker extends npmWalker(IgnoreWalker) {\n  walker(entry, then) {\n    new Walker(this.walkerOpt(entry)).on('done', then).start();\n  }\n}\nclass WalkerSync extends npmWalker(IgnoreWalkerSync) {\n  walker(entry, then) {\n    new WalkerSync(this.walkerOpt(entry)).start();\n    then();\n  }\n}\nconst walk = (options, callback) => {\n  options = options || {};\n  const p = new Promise((resolve, reject) => {\n    const bw = new BundleWalker(options);\n    bw.on('done', bundled => {\n      options.bundled = bundled;\n      options.packageJsonCache = bw.packageJsonCache;\n      new Walker(options).on('done', resolve).on('error', reject).start();\n    });\n    bw.start();\n  });\n  return callback ? p.then(res => callback(null, res), callback) : p;\n};\nconst walkSync = options => {\n  options = options || {};\n  const bw = new BundleWalkerSync(options).start();\n  options.bundled = bw.result;\n  options.packageJsonCache = bw.packageJsonCache;\n  const walker = new WalkerSync(options);\n  walker.start();\n  return walker.result;\n};\n\n// optimize for compressibility\n// extname, then basename, then locale alphabetically\n// https://twitter.com/isntitvacant/status/1131094910923231232\nconst sort = (a, b) => {\n  const exta = path.extname(a).toLowerCase();\n  const extb = path.extname(b).toLowerCase();\n  const basea = path.basename(a).toLowerCase();\n  const baseb = path.basename(b).toLowerCase();\n  return exta.localeCompare(extb) || basea.localeCompare(baseb) || a.localeCompare(b);\n};\nmodule.exports = walk;\nwalk.sync = walkSync;\nwalk.Walker = Walker;\nwalk.WalkerSync = WalkerSync;","map":{"version":3,"names":["bundleWalk","require","BundleWalker","BundleWalkerSync","ignoreWalk","IgnoreWalker","Walker","IgnoreWalkerSync","WalkerSync","rootBuiltinRules","Symbol","packageNecessaryRules","path","normalizePackageBin","defaultRules","nameIsBadForWindows","file","test","npmWalker","Class","constructor","opt","ignoreFiles","includeEmpty","process","cwd","dirName","basename","parentName","dirname","follow","parent","bundled","bundledScopes","Array","from","Set","filter","f","map","split","rules","join","packageJsonCache","Map","onReadIgnoreFile","_","onReaddir","entries","e","length","filterEntry","entry","partial","p","substr","root","pkgre","isRoot","pkg","replace","rootNM","rootPJ","indexOf","filterEntries","ignoreRules","addIgnoreFile","then","ig","resolve","has","onPackageJson","get","set","browser","main","bin","key","push","data","isArray","files","stat","dir","onstat","st","isSymbolicLink","JSON","parse","er","sort","a","b","walker","walkerOpt","on","start","walk","options","callback","Promise","reject","bw","res","walkSync","result","exta","extname","toLowerCase","extb","basea","baseb","localeCompare","module","exports","sync"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/npm-packlist/index.js"],"sourcesContent":["'use strict'\n\n// Do a two-pass walk, first to get the list of packages that need to be\n// bundled, then again to get the actual files and folders.\n// Keep a cache of node_modules content and package.json data, so that the\n// second walk doesn't have to re-do all the same work.\n\nconst bundleWalk = require('npm-bundled')\nconst BundleWalker = bundleWalk.BundleWalker\nconst BundleWalkerSync = bundleWalk.BundleWalkerSync\n\nconst ignoreWalk = require('ignore-walk')\nconst IgnoreWalker = ignoreWalk.Walker\nconst IgnoreWalkerSync = ignoreWalk.WalkerSync\n\nconst rootBuiltinRules = Symbol('root-builtin-rules')\nconst packageNecessaryRules = Symbol('package-necessary-rules')\nconst path = require('path')\n\nconst normalizePackageBin = require('npm-normalize-package-bin')\n\nconst defaultRules = [\n  '.npmignore',\n  '.gitignore',\n  '**/.git',\n  '**/.svn',\n  '**/.hg',\n  '**/CVS',\n  '**/.git/**',\n  '**/.svn/**',\n  '**/.hg/**',\n  '**/CVS/**',\n  '/.lock-wscript',\n  '/.wafpickle-*',\n  '/build/config.gypi',\n  'npm-debug.log',\n  '**/.npmrc',\n  '.*.swp',\n  '.DS_Store',\n  '**/.DS_Store/**',\n  '._*',\n  '**/._*/**',\n  '*.orig',\n  '/package-lock.json',\n  '/yarn.lock',\n  'archived-packages/**',\n  'core',\n  '!core/',\n  '!**/core/',\n  '*.core',\n  '*.vgcore',\n  'vgcore.*',\n  'core.+([0-9])',\n]\n\n// There may be others, but :?|<> are handled by node-tar\nconst nameIsBadForWindows = file => /\\*/.test(file)\n\n// a decorator that applies our custom rules to an ignore walker\nconst npmWalker = Class => class Walker extends Class {\n  constructor (opt) {\n    opt = opt || {}\n\n    // the order in which rules are applied.\n    opt.ignoreFiles = [\n      rootBuiltinRules,\n      'package.json',\n      '.npmignore',\n      '.gitignore',\n      packageNecessaryRules\n    ]\n\n    opt.includeEmpty = false\n    opt.path = opt.path || process.cwd()\n    const dirName = path.basename(opt.path)\n    const parentName = path.basename(path.dirname(opt.path))\n    opt.follow =\n      dirName === 'node_modules' ||\n      (parentName === 'node_modules' && /^@/.test(dirName))\n    super(opt)\n\n    // ignore a bunch of things by default at the root level.\n    // also ignore anything in node_modules, except bundled dependencies\n    if (!this.parent) {\n      this.bundled = opt.bundled || []\n      this.bundledScopes = Array.from(new Set(\n        this.bundled.filter(f => /^@/.test(f))\n        .map(f => f.split('/')[0])))\n      const rules = defaultRules.join('\\n') + '\\n'\n      this.packageJsonCache = opt.packageJsonCache || new Map()\n      super.onReadIgnoreFile(rootBuiltinRules, rules, _=>_)\n    } else {\n      this.bundled = []\n      this.bundledScopes = []\n      this.packageJsonCache = this.parent.packageJsonCache\n    }\n  }\n\n  onReaddir (entries) {\n    if (!this.parent) {\n      entries = entries.filter(e =>\n        e !== '.git' &&\n        !(e === 'node_modules' && this.bundled.length === 0)\n      )\n    }\n    return super.onReaddir(entries)\n  }\n\n  filterEntry (entry, partial) {\n    // get the partial path from the root of the walk\n    const p = this.path.substr(this.root.length + 1)\n    const pkgre = /^node_modules\\/(@[^\\/]+\\/?[^\\/]+|[^\\/]+)(\\/.*)?$/\n    const isRoot = !this.parent\n    const pkg = isRoot && pkgre.test(entry) ?\n      entry.replace(pkgre, '$1') : null\n    const rootNM = isRoot && entry === 'node_modules'\n    const rootPJ = isRoot && entry === 'package.json'\n\n    return (\n      // if we're in a bundled package, check with the parent.\n      /^node_modules($|\\/)/i.test(p) ? this.parent.filterEntry(\n          this.basename + '/' + entry, partial)\n\n      // if package is bundled, all files included\n      // also include @scope dirs for bundled scoped deps\n      // they'll be ignored if no files end up in them.\n      // However, this only matters if we're in the root.\n      // node_modules folders elsewhere, like lib/node_modules,\n      // should be included normally unless ignored.\n      : pkg ? -1 !== this.bundled.indexOf(pkg) ||\n        -1 !== this.bundledScopes.indexOf(pkg)\n\n      // only walk top node_modules if we want to bundle something\n      : rootNM ? !!this.bundled.length\n\n      // always include package.json at the root.\n      : rootPJ ? true\n\n      // otherwise, follow ignore-walk's logic\n      : super.filterEntry(entry, partial)\n    )\n  }\n\n  filterEntries () {\n    if (this.ignoreRules['package.json'])\n      this.ignoreRules['.gitignore'] = this.ignoreRules['.npmignore'] = null\n    else if (this.ignoreRules['.npmignore'])\n      this.ignoreRules['.gitignore'] = null\n    this.filterEntries = super.filterEntries\n    super.filterEntries()\n  }\n\n  addIgnoreFile (file, then) {\n    const ig = path.resolve(this.path, file)\n    if (this.packageJsonCache.has(ig))\n      this.onPackageJson(ig, this.packageJsonCache.get(ig), then)\n    else\n      super.addIgnoreFile(file, then)\n  }\n\n  onPackageJson (ig, pkg, then) {\n    this.packageJsonCache.set(ig, pkg)\n\n    // if there's a bin, browser or main, make sure we don't ignore it\n    // also, don't ignore the package.json itself!\n    //\n    // Weird side-effect of this: a readme (etc) file will be included\n    // if it exists anywhere within a folder with a package.json file.\n    // The original intent was only to include these files in the root,\n    // but now users in the wild are dependent on that behavior for\n    // localized documentation and other use cases.  Adding a `/` to\n    // these rules, while tempting and arguably more \"correct\", is a\n    // breaking change.\n    const rules = [\n      pkg.browser ? '!' + pkg.browser : '',\n      pkg.main ? '!' + pkg.main : '',\n      '!package.json',\n      '!npm-shrinkwrap.json',\n      '!@(readme|copying|license|licence|notice|changes|changelog|history){,.*[^~$]}'\n    ]\n    if (pkg.bin) {\n      // always an object, because normalized already\n      for (const key in pkg.bin)\n        rules.push('!' + pkg.bin[key])\n    }\n\n    const data = rules.filter(f => f).join('\\n') + '\\n'\n    super.onReadIgnoreFile(packageNecessaryRules, data, _=>_)\n\n    if (Array.isArray(pkg.files))\n      super.onReadIgnoreFile('package.json', '*\\n' + pkg.files.map(\n        f => '!' + f + '\\n!' + f.replace(/\\/+$/, '') + '/**'\n      ).join('\\n') + '\\n', then)\n    else\n      then()\n  }\n\n  // override parent stat function to completely skip any filenames\n  // that will break windows entirely.\n  // XXX(isaacs) Next major version should make this an error instead.\n  stat (entry, file, dir, then) {\n    if (nameIsBadForWindows(entry))\n      then()\n    else\n      super.stat(entry, file, dir, then)\n  }\n\n  // override parent onstat function to nix all symlinks\n  onstat (st, entry, file, dir, then) {\n    if (st.isSymbolicLink())\n      then()\n    else\n      super.onstat(st, entry, file, dir, then)\n  }\n\n  onReadIgnoreFile (file, data, then) {\n    if (file === 'package.json')\n      try {\n        const ig = path.resolve(this.path, file)\n        this.onPackageJson(ig, normalizePackageBin(JSON.parse(data)), then)\n      } catch (er) {\n        // ignore package.json files that are not json\n        then()\n      }\n    else\n      super.onReadIgnoreFile(file, data, then)\n  }\n\n  sort (a, b) {\n    return sort(a, b)\n  }\n}\n\nclass Walker extends npmWalker(IgnoreWalker) {\n  walker (entry, then) {\n    new Walker(this.walkerOpt(entry)).on('done', then).start()\n  }\n}\n\nclass WalkerSync extends npmWalker(IgnoreWalkerSync) {\n  walker (entry, then) {\n    new WalkerSync(this.walkerOpt(entry)).start()\n    then()\n  }\n}\n\nconst walk = (options, callback) => {\n  options = options || {}\n  const p = new Promise((resolve, reject) => {\n    const bw = new BundleWalker(options)\n    bw.on('done', bundled => {\n      options.bundled = bundled\n      options.packageJsonCache = bw.packageJsonCache\n      new Walker(options).on('done', resolve).on('error', reject).start()\n    })\n    bw.start()\n  })\n  return callback ? p.then(res => callback(null, res), callback) : p\n}\n\nconst walkSync = options => {\n  options = options || {}\n  const bw = new BundleWalkerSync(options).start()\n  options.bundled = bw.result\n  options.packageJsonCache = bw.packageJsonCache\n  const walker = new WalkerSync(options)\n  walker.start()\n  return walker.result\n}\n\n// optimize for compressibility\n// extname, then basename, then locale alphabetically\n// https://twitter.com/isntitvacant/status/1131094910923231232\nconst sort = (a, b) => {\n  const exta = path.extname(a).toLowerCase()\n  const extb = path.extname(b).toLowerCase()\n  const basea = path.basename(a).toLowerCase()\n  const baseb = path.basename(b).toLowerCase()\n\n  return exta.localeCompare(extb) ||\n    basea.localeCompare(baseb) ||\n    a.localeCompare(b)\n}\n\n\nmodule.exports = walk\nwalk.sync = walkSync\nwalk.Walker = Walker\nwalk.WalkerSync = WalkerSync\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,aAAa,CAAC;AACzC,MAAMC,YAAY,GAAGF,UAAU,CAACE,YAAY;AAC5C,MAAMC,gBAAgB,GAAGH,UAAU,CAACG,gBAAgB;AAEpD,MAAMC,UAAU,GAAGH,OAAO,CAAC,aAAa,CAAC;AACzC,MAAMI,YAAY,GAAGD,UAAU,CAACE,MAAM;AACtC,MAAMC,gBAAgB,GAAGH,UAAU,CAACI,UAAU;AAE9C,MAAMC,gBAAgB,GAAGC,MAAM,CAAC,oBAAoB,CAAC;AACrD,MAAMC,qBAAqB,GAAGD,MAAM,CAAC,yBAAyB,CAAC;AAC/D,MAAME,IAAI,GAAGX,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAMY,mBAAmB,GAAGZ,OAAO,CAAC,2BAA2B,CAAC;AAEhE,MAAMa,YAAY,GAAG,CACnB,YAAY,EACZ,YAAY,EACZ,SAAS,EACT,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,YAAY,EACZ,YAAY,EACZ,WAAW,EACX,WAAW,EACX,gBAAgB,EAChB,eAAe,EACf,oBAAoB,EACpB,eAAe,EACf,WAAW,EACX,QAAQ,EACR,WAAW,EACX,iBAAiB,EACjB,KAAK,EACL,WAAW,EACX,QAAQ,EACR,oBAAoB,EACpB,YAAY,EACZ,sBAAsB,EACtB,MAAM,EACN,QAAQ,EACR,WAAW,EACX,QAAQ,EACR,UAAU,EACV,UAAU,EACV,eAAe,CAChB;;AAED;AACA,MAAMC,mBAAmB,GAAGC,IAAI,IAAI,IAAI,CAACC,IAAI,CAACD,IAAI,CAAC;;AAEnD;AACA,MAAME,SAAS,GAAGC,KAAK,IAAI,MAAMb,MAAM,SAASa,KAAK,CAAC;EACpDC,WAAWA,CAAEC,GAAG,EAAE;IAChBA,GAAG,GAAGA,GAAG,IAAI,CAAC,CAAC;;IAEf;IACAA,GAAG,CAACC,WAAW,GAAG,CAChBb,gBAAgB,EAChB,cAAc,EACd,YAAY,EACZ,YAAY,EACZE,qBAAqB,CACtB;IAEDU,GAAG,CAACE,YAAY,GAAG,KAAK;IACxBF,GAAG,CAACT,IAAI,GAAGS,GAAG,CAACT,IAAI,IAAIY,OAAO,CAACC,GAAG,EAAE;IACpC,MAAMC,OAAO,GAAGd,IAAI,CAACe,QAAQ,CAACN,GAAG,CAACT,IAAI,CAAC;IACvC,MAAMgB,UAAU,GAAGhB,IAAI,CAACe,QAAQ,CAACf,IAAI,CAACiB,OAAO,CAACR,GAAG,CAACT,IAAI,CAAC,CAAC;IACxDS,GAAG,CAACS,MAAM,GACRJ,OAAO,KAAK,cAAc,IACzBE,UAAU,KAAK,cAAc,IAAI,IAAI,CAACX,IAAI,CAACS,OAAO,CAAE;IACvD,KAAK,CAACL,GAAG,CAAC;;IAEV;IACA;IACA,IAAI,CAAC,IAAI,CAACU,MAAM,EAAE;MAChB,IAAI,CAACC,OAAO,GAAGX,GAAG,CAACW,OAAO,IAAI,EAAE;MAChC,IAAI,CAACC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CACrC,IAAI,CAACJ,OAAO,CAACK,MAAM,CAACC,CAAC,IAAI,IAAI,CAACrB,IAAI,CAACqB,CAAC,CAAC,CAAC,CACrCC,GAAG,CAACD,CAAC,IAAIA,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9B,MAAMC,KAAK,GAAG3B,YAAY,CAAC4B,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI;MAC5C,IAAI,CAACC,gBAAgB,GAAGtB,GAAG,CAACsB,gBAAgB,IAAI,IAAIC,GAAG,EAAE;MACzD,KAAK,CAACC,gBAAgB,CAACpC,gBAAgB,EAAEgC,KAAK,EAAEK,CAAC,IAAEA,CAAC,CAAC;IACvD,CAAC,MAAM;MACL,IAAI,CAACd,OAAO,GAAG,EAAE;MACjB,IAAI,CAACC,aAAa,GAAG,EAAE;MACvB,IAAI,CAACU,gBAAgB,GAAG,IAAI,CAACZ,MAAM,CAACY,gBAAgB;IACtD;EACF;EAEAI,SAASA,CAAEC,OAAO,EAAE;IAClB,IAAI,CAAC,IAAI,CAACjB,MAAM,EAAE;MAChBiB,OAAO,GAAGA,OAAO,CAACX,MAAM,CAACY,CAAC,IACxBA,CAAC,KAAK,MAAM,IACZ,EAAEA,CAAC,KAAK,cAAc,IAAI,IAAI,CAACjB,OAAO,CAACkB,MAAM,KAAK,CAAC,CAAC,CACrD;IACH;IACA,OAAO,KAAK,CAACH,SAAS,CAACC,OAAO,CAAC;EACjC;EAEAG,WAAWA,CAAEC,KAAK,EAAEC,OAAO,EAAE;IAC3B;IACA,MAAMC,CAAC,GAAG,IAAI,CAAC1C,IAAI,CAAC2C,MAAM,CAAC,IAAI,CAACC,IAAI,CAACN,MAAM,GAAG,CAAC,CAAC;IAChD,MAAMO,KAAK,GAAG,kDAAkD;IAChE,MAAMC,MAAM,GAAG,CAAC,IAAI,CAAC3B,MAAM;IAC3B,MAAM4B,GAAG,GAAGD,MAAM,IAAID,KAAK,CAACxC,IAAI,CAACmC,KAAK,CAAC,GACrCA,KAAK,CAACQ,OAAO,CAACH,KAAK,EAAE,IAAI,CAAC,GAAG,IAAI;IACnC,MAAMI,MAAM,GAAGH,MAAM,IAAIN,KAAK,KAAK,cAAc;IACjD,MAAMU,MAAM,GAAGJ,MAAM,IAAIN,KAAK,KAAK,cAAc;IAEjD;MACE;MACA,sBAAsB,CAACnC,IAAI,CAACqC,CAAC,CAAC,GAAG,IAAI,CAACvB,MAAM,CAACoB,WAAW,CACpD,IAAI,CAACxB,QAAQ,GAAG,GAAG,GAAGyB,KAAK,EAAEC,OAAO;;MAExC;MACA;MACA;MACA;MACA;MACA;MAAA,EACEM,GAAG,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC3B,OAAO,CAAC+B,OAAO,CAACJ,GAAG,CAAC,IACtC,CAAC,CAAC,KAAK,IAAI,CAAC1B,aAAa,CAAC8B,OAAO,CAACJ,GAAG;;MAEvC;MAAA,EACEE,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC7B,OAAO,CAACkB;;MAE1B;MAAA,EACEY,MAAM,GAAG;;MAEX;MAAA,EACE,KAAK,CAACX,WAAW,CAACC,KAAK,EAAEC,OAAO;IAAC;EAEvC;EAEAW,aAAaA,CAAA,EAAI;IACf,IAAI,IAAI,CAACC,WAAW,CAAC,cAAc,CAAC,EAClC,IAAI,CAACA,WAAW,CAAC,YAAY,CAAC,GAAG,IAAI,CAACA,WAAW,CAAC,YAAY,CAAC,GAAG,IAAI,MACnE,IAAI,IAAI,CAACA,WAAW,CAAC,YAAY,CAAC,EACrC,IAAI,CAACA,WAAW,CAAC,YAAY,CAAC,GAAG,IAAI;IACvC,IAAI,CAACD,aAAa,GAAG,KAAK,CAACA,aAAa;IACxC,KAAK,CAACA,aAAa,EAAE;EACvB;EAEAE,aAAaA,CAAElD,IAAI,EAAEmD,IAAI,EAAE;IACzB,MAAMC,EAAE,GAAGxD,IAAI,CAACyD,OAAO,CAAC,IAAI,CAACzD,IAAI,EAAEI,IAAI,CAAC;IACxC,IAAI,IAAI,CAAC2B,gBAAgB,CAAC2B,GAAG,CAACF,EAAE,CAAC,EAC/B,IAAI,CAACG,aAAa,CAACH,EAAE,EAAE,IAAI,CAACzB,gBAAgB,CAAC6B,GAAG,CAACJ,EAAE,CAAC,EAAED,IAAI,CAAC,MAE3D,KAAK,CAACD,aAAa,CAAClD,IAAI,EAAEmD,IAAI,CAAC;EACnC;EAEAI,aAAaA,CAAEH,EAAE,EAAET,GAAG,EAAEQ,IAAI,EAAE;IAC5B,IAAI,CAACxB,gBAAgB,CAAC8B,GAAG,CAACL,EAAE,EAAET,GAAG,CAAC;;IAElC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMlB,KAAK,GAAG,CACZkB,GAAG,CAACe,OAAO,GAAG,GAAG,GAAGf,GAAG,CAACe,OAAO,GAAG,EAAE,EACpCf,GAAG,CAACgB,IAAI,GAAG,GAAG,GAAGhB,GAAG,CAACgB,IAAI,GAAG,EAAE,EAC9B,eAAe,EACf,sBAAsB,EACtB,+EAA+E,CAChF;IACD,IAAIhB,GAAG,CAACiB,GAAG,EAAE;MACX;MACA,KAAK,MAAMC,GAAG,IAAIlB,GAAG,CAACiB,GAAG,EACvBnC,KAAK,CAACqC,IAAI,CAAC,GAAG,GAAGnB,GAAG,CAACiB,GAAG,CAACC,GAAG,CAAC,CAAC;IAClC;IAEA,MAAME,IAAI,GAAGtC,KAAK,CAACJ,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAC,CAACI,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI;IACnD,KAAK,CAACG,gBAAgB,CAAClC,qBAAqB,EAAEoE,IAAI,EAAEjC,CAAC,IAAEA,CAAC,CAAC;IAEzD,IAAIZ,KAAK,CAAC8C,OAAO,CAACrB,GAAG,CAACsB,KAAK,CAAC,EAC1B,KAAK,CAACpC,gBAAgB,CAAC,cAAc,EAAE,KAAK,GAAGc,GAAG,CAACsB,KAAK,CAAC1C,GAAG,CAC1DD,CAAC,IAAI,GAAG,GAAGA,CAAC,GAAG,KAAK,GAAGA,CAAC,CAACsB,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,KAAK,CACrD,CAAClB,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,EAAEyB,IAAI,CAAC,MAE1BA,IAAI,EAAE;EACV;;EAEA;EACA;EACA;EACAe,IAAIA,CAAE9B,KAAK,EAAEpC,IAAI,EAAEmE,GAAG,EAAEhB,IAAI,EAAE;IAC5B,IAAIpD,mBAAmB,CAACqC,KAAK,CAAC,EAC5Be,IAAI,EAAE,MAEN,KAAK,CAACe,IAAI,CAAC9B,KAAK,EAAEpC,IAAI,EAAEmE,GAAG,EAAEhB,IAAI,CAAC;EACtC;;EAEA;EACAiB,MAAMA,CAAEC,EAAE,EAAEjC,KAAK,EAAEpC,IAAI,EAAEmE,GAAG,EAAEhB,IAAI,EAAE;IAClC,IAAIkB,EAAE,CAACC,cAAc,EAAE,EACrBnB,IAAI,EAAE,MAEN,KAAK,CAACiB,MAAM,CAACC,EAAE,EAAEjC,KAAK,EAAEpC,IAAI,EAAEmE,GAAG,EAAEhB,IAAI,CAAC;EAC5C;EAEAtB,gBAAgBA,CAAE7B,IAAI,EAAE+D,IAAI,EAAEZ,IAAI,EAAE;IAClC,IAAInD,IAAI,KAAK,cAAc,EACzB,IAAI;MACF,MAAMoD,EAAE,GAAGxD,IAAI,CAACyD,OAAO,CAAC,IAAI,CAACzD,IAAI,EAAEI,IAAI,CAAC;MACxC,IAAI,CAACuD,aAAa,CAACH,EAAE,EAAEvD,mBAAmB,CAAC0E,IAAI,CAACC,KAAK,CAACT,IAAI,CAAC,CAAC,EAAEZ,IAAI,CAAC;IACrE,CAAC,CAAC,OAAOsB,EAAE,EAAE;MACX;MACAtB,IAAI,EAAE;IACR,CAAC,MAED,KAAK,CAACtB,gBAAgB,CAAC7B,IAAI,EAAE+D,IAAI,EAAEZ,IAAI,CAAC;EAC5C;EAEAuB,IAAIA,CAAEC,CAAC,EAAEC,CAAC,EAAE;IACV,OAAOF,IAAI,CAACC,CAAC,EAAEC,CAAC,CAAC;EACnB;AACF,CAAC;AAED,MAAMtF,MAAM,SAASY,SAAS,CAACb,YAAY,CAAC,CAAC;EAC3CwF,MAAMA,CAAEzC,KAAK,EAAEe,IAAI,EAAE;IACnB,IAAI7D,MAAM,CAAC,IAAI,CAACwF,SAAS,CAAC1C,KAAK,CAAC,CAAC,CAAC2C,EAAE,CAAC,MAAM,EAAE5B,IAAI,CAAC,CAAC6B,KAAK,EAAE;EAC5D;AACF;AAEA,MAAMxF,UAAU,SAASU,SAAS,CAACX,gBAAgB,CAAC,CAAC;EACnDsF,MAAMA,CAAEzC,KAAK,EAAEe,IAAI,EAAE;IACnB,IAAI3D,UAAU,CAAC,IAAI,CAACsF,SAAS,CAAC1C,KAAK,CAAC,CAAC,CAAC4C,KAAK,EAAE;IAC7C7B,IAAI,EAAE;EACR;AACF;AAEA,MAAM8B,IAAI,GAAGA,CAACC,OAAO,EAAEC,QAAQ,KAAK;EAClCD,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvB,MAAM5C,CAAC,GAAG,IAAI8C,OAAO,CAAC,CAAC/B,OAAO,EAAEgC,MAAM,KAAK;IACzC,MAAMC,EAAE,GAAG,IAAIpG,YAAY,CAACgG,OAAO,CAAC;IACpCI,EAAE,CAACP,EAAE,CAAC,MAAM,EAAE/D,OAAO,IAAI;MACvBkE,OAAO,CAAClE,OAAO,GAAGA,OAAO;MACzBkE,OAAO,CAACvD,gBAAgB,GAAG2D,EAAE,CAAC3D,gBAAgB;MAC9C,IAAIrC,MAAM,CAAC4F,OAAO,CAAC,CAACH,EAAE,CAAC,MAAM,EAAE1B,OAAO,CAAC,CAAC0B,EAAE,CAAC,OAAO,EAAEM,MAAM,CAAC,CAACL,KAAK,EAAE;IACrE,CAAC,CAAC;IACFM,EAAE,CAACN,KAAK,EAAE;EACZ,CAAC,CAAC;EACF,OAAOG,QAAQ,GAAG7C,CAAC,CAACa,IAAI,CAACoC,GAAG,IAAIJ,QAAQ,CAAC,IAAI,EAAEI,GAAG,CAAC,EAAEJ,QAAQ,CAAC,GAAG7C,CAAC;AACpE,CAAC;AAED,MAAMkD,QAAQ,GAAGN,OAAO,IAAI;EAC1BA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvB,MAAMI,EAAE,GAAG,IAAInG,gBAAgB,CAAC+F,OAAO,CAAC,CAACF,KAAK,EAAE;EAChDE,OAAO,CAAClE,OAAO,GAAGsE,EAAE,CAACG,MAAM;EAC3BP,OAAO,CAACvD,gBAAgB,GAAG2D,EAAE,CAAC3D,gBAAgB;EAC9C,MAAMkD,MAAM,GAAG,IAAIrF,UAAU,CAAC0F,OAAO,CAAC;EACtCL,MAAM,CAACG,KAAK,EAAE;EACd,OAAOH,MAAM,CAACY,MAAM;AACtB,CAAC;;AAED;AACA;AACA;AACA,MAAMf,IAAI,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;EACrB,MAAMc,IAAI,GAAG9F,IAAI,CAAC+F,OAAO,CAAChB,CAAC,CAAC,CAACiB,WAAW,EAAE;EAC1C,MAAMC,IAAI,GAAGjG,IAAI,CAAC+F,OAAO,CAACf,CAAC,CAAC,CAACgB,WAAW,EAAE;EAC1C,MAAME,KAAK,GAAGlG,IAAI,CAACe,QAAQ,CAACgE,CAAC,CAAC,CAACiB,WAAW,EAAE;EAC5C,MAAMG,KAAK,GAAGnG,IAAI,CAACe,QAAQ,CAACiE,CAAC,CAAC,CAACgB,WAAW,EAAE;EAE5C,OAAOF,IAAI,CAACM,aAAa,CAACH,IAAI,CAAC,IAC7BC,KAAK,CAACE,aAAa,CAACD,KAAK,CAAC,IAC1BpB,CAAC,CAACqB,aAAa,CAACpB,CAAC,CAAC;AACtB,CAAC;AAGDqB,MAAM,CAACC,OAAO,GAAGjB,IAAI;AACrBA,IAAI,CAACkB,IAAI,GAAGX,QAAQ;AACpBP,IAAI,CAAC3F,MAAM,GAAGA,MAAM;AACpB2F,IAAI,CAACzF,UAAU,GAAGA,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}