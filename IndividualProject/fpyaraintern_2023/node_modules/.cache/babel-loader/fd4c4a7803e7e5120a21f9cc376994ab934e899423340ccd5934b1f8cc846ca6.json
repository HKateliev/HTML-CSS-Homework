{"ast":null,"code":"'use strict';\n\nconst BB = require('bluebird');\nconst extract = require('pacote/extract');\n// const npmlog = require('npmlog')\n\nmodule.exports = (args, cb) => {\n  const parsed = typeof args === 'string' ? JSON.parse(args) : args;\n  const spec = parsed[0];\n  const extractTo = parsed[1];\n  const opts = parsed[2];\n  // if (!opts.log) {\n  //   opts.log = npmlog\n  // }\n  // opts.log.level = opts.loglevel || opts.log.level\n  BB.resolve(extract(spec, extractTo, opts)).nodeify(cb);\n};","map":{"version":3,"names":["BB","require","extract","module","exports","args","cb","parsed","JSON","parse","spec","extractTo","opts","resolve","nodeify"],"sources":["/Users/hkateliev/node_modules/npm/lib/install/action/extract-worker.js"],"sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst extract = require('pacote/extract')\n// const npmlog = require('npmlog')\n\nmodule.exports = (args, cb) => {\n  const parsed = typeof args === 'string' ? JSON.parse(args) : args\n  const spec = parsed[0]\n  const extractTo = parsed[1]\n  const opts = parsed[2]\n  // if (!opts.log) {\n  //   opts.log = npmlog\n  // }\n  // opts.log.level = opts.loglevel || opts.log.level\n  BB.resolve(extract(spec, extractTo, opts)).nodeify(cb)\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,EAAE,GAAGC,OAAO,CAAC,UAAU,CAAC;AAE9B,MAAMC,OAAO,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AACzC;;AAEAE,MAAM,CAACC,OAAO,GAAG,CAACC,IAAI,EAAEC,EAAE,KAAK;EAC7B,MAAMC,MAAM,GAAG,OAAOF,IAAI,KAAK,QAAQ,GAAGG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,GAAGA,IAAI;EACjE,MAAMK,IAAI,GAAGH,MAAM,CAAC,CAAC,CAAC;EACtB,MAAMI,SAAS,GAAGJ,MAAM,CAAC,CAAC,CAAC;EAC3B,MAAMK,IAAI,GAAGL,MAAM,CAAC,CAAC,CAAC;EACtB;EACA;EACA;EACA;EACAP,EAAE,CAACa,OAAO,CAACX,OAAO,CAACQ,IAAI,EAAEC,SAAS,EAAEC,IAAI,CAAC,CAAC,CAACE,OAAO,CAACR,EAAE,CAAC;AACxD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}