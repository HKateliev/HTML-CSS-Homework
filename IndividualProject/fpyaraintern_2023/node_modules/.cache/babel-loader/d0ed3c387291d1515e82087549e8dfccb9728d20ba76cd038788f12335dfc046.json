{"ast":null,"code":"'use strict';\n\nconst deepSortObject = require('../utils/deep-sort-object.js');\nconst detectIndent = require('detect-indent');\nconst detectNewline = require('detect-newline');\nconst fs = require('graceful-fs');\nconst iferr = require('iferr');\nconst log = require('npmlog');\nconst moduleName = require('../utils/module-name.js');\nconst npm = require('../npm.js');\nconst packageId = require('../utils/package-id.js');\nconst parseJSON = require('../utils/parse-json.js');\nconst path = require('path');\nconst stringifyPackage = require('stringify-package');\nconst validate = require('aproba');\nconst without = require('lodash.without');\nconst writeFileAtomic = require('write-file-atomic');\n\n// if the -S|--save option is specified, then write installed packages\n// as dependencies to a package.json file.\n\nexports.saveRequested = function (tree, andReturn) {\n  validate('OF', arguments);\n  savePackageJson(tree, andWarnErrors(andSaveShrinkwrap(tree, andReturn)));\n};\nfunction andSaveShrinkwrap(tree, andReturn) {\n  validate('OF', arguments);\n  return function (er) {\n    validate('E', arguments);\n    saveShrinkwrap(tree, andWarnErrors(andReturn));\n  };\n}\nfunction andWarnErrors(cb) {\n  validate('F', arguments);\n  return function (er) {\n    if (er) log.warn('saveError', er.message);\n    arguments[0] = null;\n    cb.apply(null, arguments);\n  };\n}\nexports.saveShrinkwrap = saveShrinkwrap;\nfunction saveShrinkwrap(tree, next) {\n  validate('OF', arguments);\n  if (!npm.config.get('package-lock-only') && (!npm.config.get('shrinkwrap') || !npm.config.get('package-lock'))) {\n    return next();\n  }\n  require('../shrinkwrap.js').createShrinkwrap(tree, {\n    silent: false\n  }, next);\n}\nfunction savePackageJson(tree, next) {\n  validate('OF', arguments);\n  var saveBundle = npm.config.get('save-bundle');\n\n  // each item in the tree is a top-level thing that should be saved\n  // to the package.json file.\n  // The relevant tree shape is { <folder>: {what:<pkg>} }\n  var saveTarget = path.resolve(tree.path, 'package.json');\n  // don't use readJson, because we don't want to do all the other\n  // tricky npm-specific stuff that's in there.\n  fs.readFile(saveTarget, 'utf8', iferr(next, function (packagejson) {\n    const indent = detectIndent(packagejson).indent;\n    const newline = detectNewline(packagejson);\n    try {\n      tree.package = parseJSON(packagejson);\n    } catch (ex) {\n      return next(ex);\n    }\n\n    // If we're saving bundled deps, normalize the key before we start\n    if (saveBundle) {\n      var bundle = tree.package.bundleDependencies || tree.package.bundledDependencies;\n      delete tree.package.bundledDependencies;\n      if (!Array.isArray(bundle)) bundle = [];\n    }\n    var toSave = getThingsToSave(tree);\n    var toRemove = getThingsToRemove(tree);\n    var savingTo = {};\n    toSave.forEach(function (pkg) {\n      if (pkg.save) savingTo[pkg.save] = true;\n    });\n    toRemove.forEach(function (pkg) {\n      if (pkg.save) savingTo[pkg.save] = true;\n    });\n    Object.keys(savingTo).forEach(function (save) {\n      if (!tree.package[save]) tree.package[save] = {};\n    });\n    log.verbose('saving', toSave);\n    const types = ['dependencies', 'devDependencies', 'optionalDependencies'];\n    toSave.forEach(function (pkg) {\n      if (pkg.save) tree.package[pkg.save][pkg.name] = pkg.spec;\n      const movedFrom = [];\n      for (let saveType of types) {\n        if (pkg.save !== saveType && tree.package[saveType] && tree.package[saveType][pkg.name]) {\n          movedFrom.push(saveType);\n          delete tree.package[saveType][pkg.name];\n        }\n      }\n      if (movedFrom.length) {\n        log.notice('save', `${pkg.name} is being moved from ${movedFrom.join(' and ')} to ${pkg.save}`);\n      }\n      if (saveBundle) {\n        var ii = bundle.indexOf(pkg.name);\n        if (ii === -1) bundle.push(pkg.name);\n      }\n    });\n    toRemove.forEach(function (pkg) {\n      if (pkg.save) delete tree.package[pkg.save][pkg.name];\n      if (saveBundle) {\n        bundle = without(bundle, pkg.name);\n      }\n    });\n    Object.keys(savingTo).forEach(function (key) {\n      tree.package[key] = deepSortObject(tree.package[key]);\n    });\n    if (saveBundle) {\n      tree.package.bundleDependencies = deepSortObject(bundle);\n    }\n    var json = stringifyPackage(tree.package, indent, newline);\n    if (json === packagejson) {\n      log.verbose('shrinkwrap', 'skipping write for package.json because there were no changes.');\n      next();\n    } else {\n      writeFileAtomic(saveTarget, json, next);\n    }\n\n    // Restore derived id as it was removed when reloading from disk\n    tree.package._id = packageId(tree.package);\n  }));\n}\nexports.getSaveType = function (tree, arg) {\n  if (arguments.length) validate('OO', arguments);\n  var globalInstall = npm.config.get('global');\n  var noSaveFlags = !npm.config.get('save') && !npm.config.get('save-dev') && !npm.config.get('save-prod') && !npm.config.get('save-optional');\n  if (globalInstall || noSaveFlags) return null;\n  if (npm.config.get('save-optional')) {\n    return 'optionalDependencies';\n  } else if (npm.config.get('save-dev')) {\n    return 'devDependencies';\n  } else if (npm.config.get('save-prod')) {\n    return 'dependencies';\n  } else {\n    if (arg) {\n      var name = moduleName(arg);\n      if (tree.package.optionalDependencies[name]) {\n        return 'optionalDependencies';\n      } else if (tree.package.devDependencies[name]) {\n        return 'devDependencies';\n      }\n    }\n    return 'dependencies';\n  }\n};\nfunction getThingsToSave(tree) {\n  validate('O', arguments);\n  var toSave = tree.children.filter(function (child) {\n    return child.save;\n  }).map(function (child) {\n    return {\n      name: moduleName(child),\n      spec: child.saveSpec,\n      save: child.save\n    };\n  });\n  return toSave;\n}\nfunction getThingsToRemove(tree) {\n  validate('O', arguments);\n  if (!tree.removedChildren) return [];\n  var toRemove = tree.removedChildren.map(function (child) {\n    return {\n      name: moduleName(child),\n      save: child.save\n    };\n  });\n  return toRemove;\n}","map":{"version":3,"names":["deepSortObject","require","detectIndent","detectNewline","fs","iferr","log","moduleName","npm","packageId","parseJSON","path","stringifyPackage","validate","without","writeFileAtomic","exports","saveRequested","tree","andReturn","arguments","savePackageJson","andWarnErrors","andSaveShrinkwrap","er","saveShrinkwrap","cb","warn","message","apply","next","config","get","createShrinkwrap","silent","saveBundle","saveTarget","resolve","readFile","packagejson","indent","newline","package","ex","bundle","bundleDependencies","bundledDependencies","Array","isArray","toSave","getThingsToSave","toRemove","getThingsToRemove","savingTo","forEach","pkg","save","Object","keys","verbose","types","name","spec","movedFrom","saveType","push","length","notice","join","ii","indexOf","key","json","_id","getSaveType","arg","globalInstall","noSaveFlags","optionalDependencies","devDependencies","children","filter","child","map","saveSpec","removedChildren"],"sources":["/Users/hkateliev/node_modules/npm/lib/install/save.js"],"sourcesContent":["'use strict'\n\nconst deepSortObject = require('../utils/deep-sort-object.js')\nconst detectIndent = require('detect-indent')\nconst detectNewline = require('detect-newline')\nconst fs = require('graceful-fs')\nconst iferr = require('iferr')\nconst log = require('npmlog')\nconst moduleName = require('../utils/module-name.js')\nconst npm = require('../npm.js')\nconst packageId = require('../utils/package-id.js')\nconst parseJSON = require('../utils/parse-json.js')\nconst path = require('path')\nconst stringifyPackage = require('stringify-package')\nconst validate = require('aproba')\nconst without = require('lodash.without')\nconst writeFileAtomic = require('write-file-atomic')\n\n// if the -S|--save option is specified, then write installed packages\n// as dependencies to a package.json file.\n\nexports.saveRequested = function (tree, andReturn) {\n  validate('OF', arguments)\n  savePackageJson(tree, andWarnErrors(andSaveShrinkwrap(tree, andReturn)))\n}\n\nfunction andSaveShrinkwrap (tree, andReturn) {\n  validate('OF', arguments)\n  return function (er) {\n    validate('E', arguments)\n    saveShrinkwrap(tree, andWarnErrors(andReturn))\n  }\n}\n\nfunction andWarnErrors (cb) {\n  validate('F', arguments)\n  return function (er) {\n    if (er) log.warn('saveError', er.message)\n    arguments[0] = null\n    cb.apply(null, arguments)\n  }\n}\n\nexports.saveShrinkwrap = saveShrinkwrap\n\nfunction saveShrinkwrap (tree, next) {\n  validate('OF', arguments)\n  if (!npm.config.get('package-lock-only') && (!npm.config.get('shrinkwrap') || !npm.config.get('package-lock'))) {\n    return next()\n  }\n  require('../shrinkwrap.js').createShrinkwrap(tree, {silent: false}, next)\n}\n\nfunction savePackageJson (tree, next) {\n  validate('OF', arguments)\n  var saveBundle = npm.config.get('save-bundle')\n\n  // each item in the tree is a top-level thing that should be saved\n  // to the package.json file.\n  // The relevant tree shape is { <folder>: {what:<pkg>} }\n  var saveTarget = path.resolve(tree.path, 'package.json')\n  // don't use readJson, because we don't want to do all the other\n  // tricky npm-specific stuff that's in there.\n  fs.readFile(saveTarget, 'utf8', iferr(next, function (packagejson) {\n    const indent = detectIndent(packagejson).indent\n    const newline = detectNewline(packagejson)\n    try {\n      tree.package = parseJSON(packagejson)\n    } catch (ex) {\n      return next(ex)\n    }\n\n    // If we're saving bundled deps, normalize the key before we start\n    if (saveBundle) {\n      var bundle = tree.package.bundleDependencies || tree.package.bundledDependencies\n      delete tree.package.bundledDependencies\n      if (!Array.isArray(bundle)) bundle = []\n    }\n\n    var toSave = getThingsToSave(tree)\n    var toRemove = getThingsToRemove(tree)\n    var savingTo = {}\n    toSave.forEach(function (pkg) { if (pkg.save) savingTo[pkg.save] = true })\n    toRemove.forEach(function (pkg) { if (pkg.save) savingTo[pkg.save] = true })\n\n    Object.keys(savingTo).forEach(function (save) {\n      if (!tree.package[save]) tree.package[save] = {}\n    })\n\n    log.verbose('saving', toSave)\n    const types = ['dependencies', 'devDependencies', 'optionalDependencies']\n    toSave.forEach(function (pkg) {\n      if (pkg.save) tree.package[pkg.save][pkg.name] = pkg.spec\n      const movedFrom = []\n      for (let saveType of types) {\n        if (\n          pkg.save !== saveType &&\n          tree.package[saveType] &&\n          tree.package[saveType][pkg.name]\n        ) {\n          movedFrom.push(saveType)\n          delete tree.package[saveType][pkg.name]\n        }\n      }\n      if (movedFrom.length) {\n        log.notice('save', `${pkg.name} is being moved from ${movedFrom.join(' and ')} to ${pkg.save}`)\n      }\n      if (saveBundle) {\n        var ii = bundle.indexOf(pkg.name)\n        if (ii === -1) bundle.push(pkg.name)\n      }\n    })\n\n    toRemove.forEach(function (pkg) {\n      if (pkg.save) delete tree.package[pkg.save][pkg.name]\n      if (saveBundle) {\n        bundle = without(bundle, pkg.name)\n      }\n    })\n\n    Object.keys(savingTo).forEach(function (key) {\n      tree.package[key] = deepSortObject(tree.package[key])\n    })\n    if (saveBundle) {\n      tree.package.bundleDependencies = deepSortObject(bundle)\n    }\n\n    var json = stringifyPackage(tree.package, indent, newline)\n    if (json === packagejson) {\n      log.verbose('shrinkwrap', 'skipping write for package.json because there were no changes.')\n      next()\n    } else {\n      writeFileAtomic(saveTarget, json, next)\n    }\n\n    // Restore derived id as it was removed when reloading from disk\n    tree.package._id = packageId(tree.package)\n  }))\n}\n\nexports.getSaveType = function (tree, arg) {\n  if (arguments.length) validate('OO', arguments)\n  var globalInstall = npm.config.get('global')\n  var noSaveFlags = !npm.config.get('save') &&\n                    !npm.config.get('save-dev') &&\n                    !npm.config.get('save-prod') &&\n                    !npm.config.get('save-optional')\n  if (globalInstall || noSaveFlags) return null\n\n  if (npm.config.get('save-optional')) {\n    return 'optionalDependencies'\n  } else if (npm.config.get('save-dev')) {\n    return 'devDependencies'\n  } else if (npm.config.get('save-prod')) {\n    return 'dependencies'\n  } else {\n    if (arg) {\n      var name = moduleName(arg)\n      if (tree.package.optionalDependencies[name]) {\n        return 'optionalDependencies'\n      } else if (tree.package.devDependencies[name]) {\n        return 'devDependencies'\n      }\n    }\n    return 'dependencies'\n  }\n}\n\nfunction getThingsToSave (tree) {\n  validate('O', arguments)\n  var toSave = tree.children.filter(function (child) {\n    return child.save\n  }).map(function (child) {\n    return {\n      name: moduleName(child),\n      spec: child.saveSpec,\n      save: child.save\n    }\n  })\n  return toSave\n}\n\nfunction getThingsToRemove (tree) {\n  validate('O', arguments)\n  if (!tree.removedChildren) return []\n  var toRemove = tree.removedChildren.map(function (child) {\n    return {\n      name: moduleName(child),\n      save: child.save\n    }\n  })\n  return toRemove\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}