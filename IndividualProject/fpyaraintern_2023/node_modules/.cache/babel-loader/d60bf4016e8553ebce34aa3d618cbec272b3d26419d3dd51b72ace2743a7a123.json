{"ast":null,"code":"'use strict';\n\nconst BB = require('bluebird');\nconst cacache = require('cacache');\nconst cacheKey = require('./cache-key');\nconst optCheck = require('./opt-check');\nconst packlist = require('npm-packlist');\nconst pipe = BB.promisify(require('mississippi').pipe);\nconst tar = require('tar');\nmodule.exports = packDir;\nfunction packDir(manifest, label, dir, target, opts) {\n  opts = optCheck(opts);\n  const packer = opts.dirPacker ? BB.resolve(opts.dirPacker(manifest, dir)) : mkPacker(dir);\n  if (!opts.cache) {\n    return packer.then(packer => pipe(packer, target));\n  } else {\n    const cacher = cacache.put.stream(opts.cache, cacheKey('packed-dir', label), opts).on('integrity', i => {\n      target.emit('integrity', i);\n    });\n    return packer.then(packer => BB.all([pipe(packer, cacher), pipe(packer, target)]));\n  }\n}\nfunction mkPacker(dir) {\n  return packlist({\n    path: dir\n  }).then(files => {\n    return tar.c({\n      cwd: dir,\n      gzip: true,\n      portable: true,\n      prefix: 'package/'\n    }, files);\n  });\n}","map":{"version":3,"names":["BB","require","cacache","cacheKey","optCheck","packlist","pipe","promisify","tar","module","exports","packDir","manifest","label","dir","target","opts","packer","dirPacker","resolve","mkPacker","cache","then","cacher","put","stream","on","i","emit","all","path","files","c","cwd","gzip","portable","prefix"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/pacote/lib/util/pack-dir.js"],"sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst cacache = require('cacache')\nconst cacheKey = require('./cache-key')\nconst optCheck = require('./opt-check')\nconst packlist = require('npm-packlist')\nconst pipe = BB.promisify(require('mississippi').pipe)\nconst tar = require('tar')\n\nmodule.exports = packDir\nfunction packDir (manifest, label, dir, target, opts) {\n  opts = optCheck(opts)\n\n  const packer = opts.dirPacker\n    ? BB.resolve(opts.dirPacker(manifest, dir))\n    : mkPacker(dir)\n\n  if (!opts.cache) {\n    return packer.then(packer => pipe(packer, target))\n  } else {\n    const cacher = cacache.put.stream(\n      opts.cache, cacheKey('packed-dir', label), opts\n    ).on('integrity', i => {\n      target.emit('integrity', i)\n    })\n    return packer.then(packer => BB.all([\n      pipe(packer, cacher),\n      pipe(packer, target)\n    ]))\n  }\n}\n\nfunction mkPacker (dir) {\n  return packlist({ path: dir }).then(files => {\n    return tar.c({\n      cwd: dir,\n      gzip: true,\n      portable: true,\n      prefix: 'package/'\n    }, files)\n  })\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,EAAE,GAAGC,OAAO,CAAC,UAAU,CAAC;AAE9B,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC,MAAME,QAAQ,GAAGF,OAAO,CAAC,aAAa,CAAC;AACvC,MAAMG,QAAQ,GAAGH,OAAO,CAAC,aAAa,CAAC;AACvC,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,cAAc,CAAC;AACxC,MAAMK,IAAI,GAAGN,EAAE,CAACO,SAAS,CAACN,OAAO,CAAC,aAAa,CAAC,CAACK,IAAI,CAAC;AACtD,MAAME,GAAG,GAAGP,OAAO,CAAC,KAAK,CAAC;AAE1BQ,MAAM,CAACC,OAAO,GAAGC,OAAO;AACxB,SAASA,OAAOA,CAAEC,QAAQ,EAAEC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAE;EACpDA,IAAI,GAAGZ,QAAQ,CAACY,IAAI,CAAC;EAErB,MAAMC,MAAM,GAAGD,IAAI,CAACE,SAAS,GACzBlB,EAAE,CAACmB,OAAO,CAACH,IAAI,CAACE,SAAS,CAACN,QAAQ,EAAEE,GAAG,CAAC,CAAC,GACzCM,QAAQ,CAACN,GAAG,CAAC;EAEjB,IAAI,CAACE,IAAI,CAACK,KAAK,EAAE;IACf,OAAOJ,MAAM,CAACK,IAAI,CAACL,MAAM,IAAIX,IAAI,CAACW,MAAM,EAAEF,MAAM,CAAC,CAAC;EACpD,CAAC,MAAM;IACL,MAAMQ,MAAM,GAAGrB,OAAO,CAACsB,GAAG,CAACC,MAAM,CAC/BT,IAAI,CAACK,KAAK,EAAElB,QAAQ,CAAC,YAAY,EAAEU,KAAK,CAAC,EAAEG,IAAI,CAChD,CAACU,EAAE,CAAC,WAAW,EAAEC,CAAC,IAAI;MACrBZ,MAAM,CAACa,IAAI,CAAC,WAAW,EAAED,CAAC,CAAC;IAC7B,CAAC,CAAC;IACF,OAAOV,MAAM,CAACK,IAAI,CAACL,MAAM,IAAIjB,EAAE,CAAC6B,GAAG,CAAC,CAClCvB,IAAI,CAACW,MAAM,EAAEM,MAAM,CAAC,EACpBjB,IAAI,CAACW,MAAM,EAAEF,MAAM,CAAC,CACrB,CAAC,CAAC;EACL;AACF;AAEA,SAASK,QAAQA,CAAEN,GAAG,EAAE;EACtB,OAAOT,QAAQ,CAAC;IAAEyB,IAAI,EAAEhB;EAAI,CAAC,CAAC,CAACQ,IAAI,CAACS,KAAK,IAAI;IAC3C,OAAOvB,GAAG,CAACwB,CAAC,CAAC;MACXC,GAAG,EAAEnB,GAAG;MACRoB,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE;IACV,CAAC,EAAEL,KAAK,CAAC;EACX,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}