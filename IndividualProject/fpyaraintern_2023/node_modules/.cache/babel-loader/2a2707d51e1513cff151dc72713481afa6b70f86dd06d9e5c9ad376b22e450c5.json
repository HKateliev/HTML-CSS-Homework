{"ast":null,"code":"'use strict';\n\nconst path = require('path');\nconst fs = require('graceful-fs');\nconst Bluebird = require('bluebird');\nconst rimraf = Bluebird.promisify(require('rimraf'));\nconst mkdirp = Bluebird.promisify(require('gentle-fs').mkdir);\nconst lstat = Bluebird.promisify(fs.lstat);\nconst readdir = Bluebird.promisify(fs.readdir);\nconst symlink = Bluebird.promisify(fs.symlink);\nconst gentlyRm = Bluebird.promisify(require('../../utils/gently-rm'));\nconst moduleStagingPath = require('../module-staging-path.js');\nconst move = require('move-concurrently');\nconst moveOpts = {\n  fs: fs,\n  Promise: Bluebird,\n  maxConcurrency: 4\n};\nconst getRequested = require('../get-requested.js');\nconst log = require('npmlog');\nconst packageId = require('../../utils/package-id.js');\nmodule.exports = function (staging, pkg, log) {\n  log.silly('finalize', pkg.realpath);\n  const extractedTo = moduleStagingPath(staging, pkg);\n  const delpath = path.join(path.dirname(pkg.realpath), '.' + path.basename(pkg.realpath) + '.DELETE');\n  let movedDestAway = false;\n  const requested = pkg.package._requested || getRequested(pkg);\n  if (requested.type === 'directory') {\n    const relative = path.relative(path.dirname(pkg.path), pkg.realpath);\n    return makeParentPath(pkg.path).then(() => symlink(relative, pkg.path, 'junction')).catch(ex => {\n      return rimraf(pkg.path).then(() => symlink(relative, pkg.path, 'junction'));\n    });\n  } else {\n    return makeParentPath(pkg.realpath).then(moveStagingToDestination).then(restoreOldNodeModules).catch(err => {\n      if (movedDestAway) {\n        return rimraf(pkg.realpath).then(moveOldDestinationBack).then(() => {\n          throw err;\n        });\n      } else {\n        throw err;\n      }\n    }).then(() => rimraf(delpath));\n  }\n  function makeParentPath(dir) {\n    return mkdirp(path.dirname(dir));\n  }\n  function moveStagingToDestination() {\n    return destinationIsClear().then(actuallyMoveStaging).catch(() => moveOldDestinationAway().then(actuallyMoveStaging));\n  }\n  function destinationIsClear() {\n    return lstat(pkg.realpath).then(() => {\n      throw new Error('destination exists');\n    }, () => {});\n  }\n  function actuallyMoveStaging() {\n    return move(extractedTo, pkg.realpath, moveOpts);\n  }\n  function moveOldDestinationAway() {\n    return rimraf(delpath).then(() => {\n      return move(pkg.realpath, delpath, moveOpts);\n    }).then(() => {\n      movedDestAway = true;\n    });\n  }\n  function moveOldDestinationBack() {\n    return move(delpath, pkg.realpath, moveOpts).then(() => {\n      movedDestAway = false;\n    });\n  }\n  function restoreOldNodeModules() {\n    if (!movedDestAway) return;\n    return readdir(path.join(delpath, 'node_modules')).catch(() => []).then(modules => {\n      if (!modules.length) return;\n      return mkdirp(path.join(pkg.realpath, 'node_modules')).then(() => Bluebird.map(modules, file => {\n        const from = path.join(delpath, 'node_modules', file);\n        const to = path.join(pkg.realpath, 'node_modules', file);\n        return move(from, to, moveOpts);\n      }));\n    });\n  }\n};\nmodule.exports.rollback = function (top, staging, pkg) {\n  return Bluebird.try(() => {\n    const requested = pkg.package._requested || getRequested(pkg);\n    if (requested && requested.type === 'directory') return Promise.resolve();\n    // strictly speaking rolling back a finalize should ONLY remove module that\n    // was being finalized, not any of the things under it. But currently\n    // those modules are guaranteed to be useless so we may as well remove them too.\n    // When/if we separate `commit` step and can rollback to previous versions\n    // of upgraded modules then we'll need to revisit this…\n    return gentlyRm(pkg.path, false, top).catch(err => {\n      log.warn('rollback', `Rolling back ${packageId(pkg)} failed (this is probably harmless): ${err.message ? err.message : err}`);\n    });\n  });\n};","map":{"version":3,"names":["path","require","fs","Bluebird","rimraf","promisify","mkdirp","mkdir","lstat","readdir","symlink","gentlyRm","moduleStagingPath","move","moveOpts","Promise","maxConcurrency","getRequested","log","packageId","module","exports","staging","pkg","silly","realpath","extractedTo","delpath","join","dirname","basename","movedDestAway","requested","package","_requested","type","relative","makeParentPath","then","catch","ex","moveStagingToDestination","restoreOldNodeModules","err","moveOldDestinationBack","dir","destinationIsClear","actuallyMoveStaging","moveOldDestinationAway","Error","modules","length","map","file","from","to","rollback","top","try","resolve","warn","message"],"sources":["/Users/hkateliev/node_modules/npm/lib/install/action/finalize.js"],"sourcesContent":["'use strict'\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst Bluebird = require('bluebird')\nconst rimraf = Bluebird.promisify(require('rimraf'))\nconst mkdirp = Bluebird.promisify(require('gentle-fs').mkdir)\nconst lstat = Bluebird.promisify(fs.lstat)\nconst readdir = Bluebird.promisify(fs.readdir)\nconst symlink = Bluebird.promisify(fs.symlink)\nconst gentlyRm = Bluebird.promisify(require('../../utils/gently-rm'))\nconst moduleStagingPath = require('../module-staging-path.js')\nconst move = require('move-concurrently')\nconst moveOpts = {fs: fs, Promise: Bluebird, maxConcurrency: 4}\nconst getRequested = require('../get-requested.js')\nconst log = require('npmlog')\nconst packageId = require('../../utils/package-id.js')\n\nmodule.exports = function (staging, pkg, log) {\n  log.silly('finalize', pkg.realpath)\n\n  const extractedTo = moduleStagingPath(staging, pkg)\n\n  const delpath = path.join(path.dirname(pkg.realpath), '.' + path.basename(pkg.realpath) + '.DELETE')\n  let movedDestAway = false\n\n  const requested = pkg.package._requested || getRequested(pkg)\n  if (requested.type === 'directory') {\n    const relative = path.relative(path.dirname(pkg.path), pkg.realpath)\n    return makeParentPath(pkg.path)\n      .then(() => symlink(relative, pkg.path, 'junction'))\n      .catch((ex) => {\n        return rimraf(pkg.path).then(() => symlink(relative, pkg.path, 'junction'))\n      })\n  } else {\n    return makeParentPath(pkg.realpath)\n      .then(moveStagingToDestination)\n      .then(restoreOldNodeModules)\n      .catch((err) => {\n        if (movedDestAway) {\n          return rimraf(pkg.realpath).then(moveOldDestinationBack).then(() => {\n            throw err\n          })\n        } else {\n          throw err\n        }\n      })\n      .then(() => rimraf(delpath))\n  }\n\n  function makeParentPath (dir) {\n    return mkdirp(path.dirname(dir))\n  }\n\n  function moveStagingToDestination () {\n    return destinationIsClear()\n      .then(actuallyMoveStaging)\n      .catch(() => moveOldDestinationAway().then(actuallyMoveStaging))\n  }\n\n  function destinationIsClear () {\n    return lstat(pkg.realpath).then(() => {\n      throw new Error('destination exists')\n    }, () => {})\n  }\n\n  function actuallyMoveStaging () {\n    return move(extractedTo, pkg.realpath, moveOpts)\n  }\n\n  function moveOldDestinationAway () {\n    return rimraf(delpath).then(() => {\n      return move(pkg.realpath, delpath, moveOpts)\n    }).then(() => { movedDestAway = true })\n  }\n\n  function moveOldDestinationBack () {\n    return move(delpath, pkg.realpath, moveOpts).then(() => { movedDestAway = false })\n  }\n\n  function restoreOldNodeModules () {\n    if (!movedDestAway) return\n    return readdir(path.join(delpath, 'node_modules')).catch(() => []).then((modules) => {\n      if (!modules.length) return\n      return mkdirp(path.join(pkg.realpath, 'node_modules')).then(() => Bluebird.map(modules, (file) => {\n        const from = path.join(delpath, 'node_modules', file)\n        const to = path.join(pkg.realpath, 'node_modules', file)\n        return move(from, to, moveOpts)\n      }))\n    })\n  }\n}\n\nmodule.exports.rollback = function (top, staging, pkg) {\n  return Bluebird.try(() => {\n    const requested = pkg.package._requested || getRequested(pkg)\n    if (requested && requested.type === 'directory') return Promise.resolve()\n    // strictly speaking rolling back a finalize should ONLY remove module that\n    // was being finalized, not any of the things under it. But currently\n    // those modules are guaranteed to be useless so we may as well remove them too.\n    // When/if we separate `commit` step and can rollback to previous versions\n    // of upgraded modules then we'll need to revisit this…\n    return gentlyRm(pkg.path, false, top).catch((err) => {\n      log.warn('rollback', `Rolling back ${packageId(pkg)} failed (this is probably harmless): ${err.message ? err.message : err}`)\n    })\n  })\n}\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,EAAE,GAAGD,OAAO,CAAC,aAAa,CAAC;AACjC,MAAME,QAAQ,GAAGF,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMG,MAAM,GAAGD,QAAQ,CAACE,SAAS,CAACJ,OAAO,CAAC,QAAQ,CAAC,CAAC;AACpD,MAAMK,MAAM,GAAGH,QAAQ,CAACE,SAAS,CAACJ,OAAO,CAAC,WAAW,CAAC,CAACM,KAAK,CAAC;AAC7D,MAAMC,KAAK,GAAGL,QAAQ,CAACE,SAAS,CAACH,EAAE,CAACM,KAAK,CAAC;AAC1C,MAAMC,OAAO,GAAGN,QAAQ,CAACE,SAAS,CAACH,EAAE,CAACO,OAAO,CAAC;AAC9C,MAAMC,OAAO,GAAGP,QAAQ,CAACE,SAAS,CAACH,EAAE,CAACQ,OAAO,CAAC;AAC9C,MAAMC,QAAQ,GAAGR,QAAQ,CAACE,SAAS,CAACJ,OAAO,CAAC,uBAAuB,CAAC,CAAC;AACrE,MAAMW,iBAAiB,GAAGX,OAAO,CAAC,2BAA2B,CAAC;AAC9D,MAAMY,IAAI,GAAGZ,OAAO,CAAC,mBAAmB,CAAC;AACzC,MAAMa,QAAQ,GAAG;EAACZ,EAAE,EAAEA,EAAE;EAAEa,OAAO,EAAEZ,QAAQ;EAAEa,cAAc,EAAE;AAAC,CAAC;AAC/D,MAAMC,YAAY,GAAGhB,OAAO,CAAC,qBAAqB,CAAC;AACnD,MAAMiB,GAAG,GAAGjB,OAAO,CAAC,QAAQ,CAAC;AAC7B,MAAMkB,SAAS,GAAGlB,OAAO,CAAC,2BAA2B,CAAC;AAEtDmB,MAAM,CAACC,OAAO,GAAG,UAAUC,OAAO,EAAEC,GAAG,EAAEL,GAAG,EAAE;EAC5CA,GAAG,CAACM,KAAK,CAAC,UAAU,EAAED,GAAG,CAACE,QAAQ,CAAC;EAEnC,MAAMC,WAAW,GAAGd,iBAAiB,CAACU,OAAO,EAAEC,GAAG,CAAC;EAEnD,MAAMI,OAAO,GAAG3B,IAAI,CAAC4B,IAAI,CAAC5B,IAAI,CAAC6B,OAAO,CAACN,GAAG,CAACE,QAAQ,CAAC,EAAE,GAAG,GAAGzB,IAAI,CAAC8B,QAAQ,CAACP,GAAG,CAACE,QAAQ,CAAC,GAAG,SAAS,CAAC;EACpG,IAAIM,aAAa,GAAG,KAAK;EAEzB,MAAMC,SAAS,GAAGT,GAAG,CAACU,OAAO,CAACC,UAAU,IAAIjB,YAAY,CAACM,GAAG,CAAC;EAC7D,IAAIS,SAAS,CAACG,IAAI,KAAK,WAAW,EAAE;IAClC,MAAMC,QAAQ,GAAGpC,IAAI,CAACoC,QAAQ,CAACpC,IAAI,CAAC6B,OAAO,CAACN,GAAG,CAACvB,IAAI,CAAC,EAAEuB,GAAG,CAACE,QAAQ,CAAC;IACpE,OAAOY,cAAc,CAACd,GAAG,CAACvB,IAAI,CAAC,CAC5BsC,IAAI,CAAC,MAAM5B,OAAO,CAAC0B,QAAQ,EAAEb,GAAG,CAACvB,IAAI,EAAE,UAAU,CAAC,CAAC,CACnDuC,KAAK,CAAEC,EAAE,IAAK;MACb,OAAOpC,MAAM,CAACmB,GAAG,CAACvB,IAAI,CAAC,CAACsC,IAAI,CAAC,MAAM5B,OAAO,CAAC0B,QAAQ,EAAEb,GAAG,CAACvB,IAAI,EAAE,UAAU,CAAC,CAAC;IAC7E,CAAC,CAAC;EACN,CAAC,MAAM;IACL,OAAOqC,cAAc,CAACd,GAAG,CAACE,QAAQ,CAAC,CAChCa,IAAI,CAACG,wBAAwB,CAAC,CAC9BH,IAAI,CAACI,qBAAqB,CAAC,CAC3BH,KAAK,CAAEI,GAAG,IAAK;MACd,IAAIZ,aAAa,EAAE;QACjB,OAAO3B,MAAM,CAACmB,GAAG,CAACE,QAAQ,CAAC,CAACa,IAAI,CAACM,sBAAsB,CAAC,CAACN,IAAI,CAAC,MAAM;UAClE,MAAMK,GAAG;QACX,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,MAAMA,GAAG;MACX;IACF,CAAC,CAAC,CACDL,IAAI,CAAC,MAAMlC,MAAM,CAACuB,OAAO,CAAC,CAAC;EAChC;EAEA,SAASU,cAAcA,CAAEQ,GAAG,EAAE;IAC5B,OAAOvC,MAAM,CAACN,IAAI,CAAC6B,OAAO,CAACgB,GAAG,CAAC,CAAC;EAClC;EAEA,SAASJ,wBAAwBA,CAAA,EAAI;IACnC,OAAOK,kBAAkB,EAAE,CACxBR,IAAI,CAACS,mBAAmB,CAAC,CACzBR,KAAK,CAAC,MAAMS,sBAAsB,EAAE,CAACV,IAAI,CAACS,mBAAmB,CAAC,CAAC;EACpE;EAEA,SAASD,kBAAkBA,CAAA,EAAI;IAC7B,OAAOtC,KAAK,CAACe,GAAG,CAACE,QAAQ,CAAC,CAACa,IAAI,CAAC,MAAM;MACpC,MAAM,IAAIW,KAAK,CAAC,oBAAoB,CAAC;IACvC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;EACd;EAEA,SAASF,mBAAmBA,CAAA,EAAI;IAC9B,OAAOlC,IAAI,CAACa,WAAW,EAAEH,GAAG,CAACE,QAAQ,EAAEX,QAAQ,CAAC;EAClD;EAEA,SAASkC,sBAAsBA,CAAA,EAAI;IACjC,OAAO5C,MAAM,CAACuB,OAAO,CAAC,CAACW,IAAI,CAAC,MAAM;MAChC,OAAOzB,IAAI,CAACU,GAAG,CAACE,QAAQ,EAAEE,OAAO,EAAEb,QAAQ,CAAC;IAC9C,CAAC,CAAC,CAACwB,IAAI,CAAC,MAAM;MAAEP,aAAa,GAAG,IAAI;IAAC,CAAC,CAAC;EACzC;EAEA,SAASa,sBAAsBA,CAAA,EAAI;IACjC,OAAO/B,IAAI,CAACc,OAAO,EAAEJ,GAAG,CAACE,QAAQ,EAAEX,QAAQ,CAAC,CAACwB,IAAI,CAAC,MAAM;MAAEP,aAAa,GAAG,KAAK;IAAC,CAAC,CAAC;EACpF;EAEA,SAASW,qBAAqBA,CAAA,EAAI;IAChC,IAAI,CAACX,aAAa,EAAE;IACpB,OAAOtB,OAAO,CAACT,IAAI,CAAC4B,IAAI,CAACD,OAAO,EAAE,cAAc,CAAC,CAAC,CAACY,KAAK,CAAC,MAAM,EAAE,CAAC,CAACD,IAAI,CAAEY,OAAO,IAAK;MACnF,IAAI,CAACA,OAAO,CAACC,MAAM,EAAE;MACrB,OAAO7C,MAAM,CAACN,IAAI,CAAC4B,IAAI,CAACL,GAAG,CAACE,QAAQ,EAAE,cAAc,CAAC,CAAC,CAACa,IAAI,CAAC,MAAMnC,QAAQ,CAACiD,GAAG,CAACF,OAAO,EAAGG,IAAI,IAAK;QAChG,MAAMC,IAAI,GAAGtD,IAAI,CAAC4B,IAAI,CAACD,OAAO,EAAE,cAAc,EAAE0B,IAAI,CAAC;QACrD,MAAME,EAAE,GAAGvD,IAAI,CAAC4B,IAAI,CAACL,GAAG,CAACE,QAAQ,EAAE,cAAc,EAAE4B,IAAI,CAAC;QACxD,OAAOxC,IAAI,CAACyC,IAAI,EAAEC,EAAE,EAAEzC,QAAQ,CAAC;MACjC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;EACJ;AACF,CAAC;AAEDM,MAAM,CAACC,OAAO,CAACmC,QAAQ,GAAG,UAAUC,GAAG,EAAEnC,OAAO,EAAEC,GAAG,EAAE;EACrD,OAAOpB,QAAQ,CAACuD,GAAG,CAAC,MAAM;IACxB,MAAM1B,SAAS,GAAGT,GAAG,CAACU,OAAO,CAACC,UAAU,IAAIjB,YAAY,CAACM,GAAG,CAAC;IAC7D,IAAIS,SAAS,IAAIA,SAAS,CAACG,IAAI,KAAK,WAAW,EAAE,OAAOpB,OAAO,CAAC4C,OAAO,EAAE;IACzE;IACA;IACA;IACA;IACA;IACA,OAAOhD,QAAQ,CAACY,GAAG,CAACvB,IAAI,EAAE,KAAK,EAAEyD,GAAG,CAAC,CAAClB,KAAK,CAAEI,GAAG,IAAK;MACnDzB,GAAG,CAAC0C,IAAI,CAAC,UAAU,EAAG,gBAAezC,SAAS,CAACI,GAAG,CAAE,wCAAuCoB,GAAG,CAACkB,OAAO,GAAGlB,GAAG,CAACkB,OAAO,GAAGlB,GAAI,EAAC,CAAC;IAC/H,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}