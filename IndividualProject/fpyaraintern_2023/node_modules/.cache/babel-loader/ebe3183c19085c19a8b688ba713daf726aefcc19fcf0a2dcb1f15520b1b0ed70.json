{"ast":null,"code":"var _jsxFileName = \"/Users/hkateliev/Desktop/Individual Project/fpyaraintern_2023/src/Content/LoginPage/index.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./loginstyle.css\";\nimport axios from \"axios\";\nimport bcrypt from \"bcryptjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = props => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!username || !password) {\n      alert(\"Username and password are required!\");\n      return;\n    }\n    const response = await axios.post(\"http://localhost:3001/client/signin\", {\n      username,\n      password\n    });\n    console.log(response);\n    // login user logic goes here\n    // check if a user exists already in DB-> WH else throw error\n    // redirect to home page on successful login\n    // history.push('/'); (use this if you are using react-router-dom)\n    // window.location.href = '/'; (use this to redirect manually)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: event => setUsername(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"log\",\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Sign up here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 32\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","Link","axios","bcrypt","jsxDEV","_jsxDEV","LoginPage","props","_s","username","setUsername","password","setPassword","handleSubmit","event","preventDefault","alert","response","post","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","to","_c","$RefreshReg$"],"sources":["/Users/hkateliev/Desktop/Individual Project/fpyaraintern_2023/src/Content/LoginPage/index.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./loginstyle.css\";\nimport axios from \"axios\";\nimport bcrypt from \"bcryptjs\";\n\nconst LoginPage = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!username || !password) {\n      alert(\"Username and password are required!\");\n      return;\n    }\n\n    const response = await axios.post(\"http://localhost:3001/client/signin\", {\n      username,\n      password,\n    });\n    console.log(response);\n    // login user logic goes here\n    // check if a user exists already in DB-> WH else throw error\n    // redirect to home page on successful login\n    // history.push('/'); (use this if you are using react-router-dom)\n    // window.location.href = '/'; (use this to redirect manually)\n  };\n\n  return (\n    <div className=\"login\">\n      <h1>Login</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Username:\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n          />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </label>\n        <br />\n        <button className=\"log\" type=\"submit\">\n          Log In\n        </button>\n      </form>\n      <p>\n        Don't have an account? <Link to=\"/register\">Sign up here</Link>.\n      </p>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}