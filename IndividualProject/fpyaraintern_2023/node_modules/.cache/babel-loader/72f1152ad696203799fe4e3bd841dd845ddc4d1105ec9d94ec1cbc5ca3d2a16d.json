{"ast":null,"code":"'use strict';\n\nvar has = require('has');\nvar toPrimitive = require('es-to-primitive/es6');\nvar GetIntrinsic = require('./GetIntrinsic');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $Array = GetIntrinsic('%Array%');\nvar $String = GetIntrinsic('%String%');\nvar $Object = GetIntrinsic('%Object%');\nvar $Number = GetIntrinsic('%Number%');\nvar $Symbol = GetIntrinsic('%Symbol%', true);\nvar $RegExp = GetIntrinsic('%RegExp%');\nvar hasSymbols = !!$Symbol;\nvar $isNaN = require('./helpers/isNaN');\nvar $isFinite = require('./helpers/isFinite');\nvar MAX_SAFE_INTEGER = $Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\nvar assign = require('./helpers/assign');\nvar sign = require('./helpers/sign');\nvar mod = require('./helpers/mod');\nvar isPrimitive = require('./helpers/isPrimitive');\nvar parseInteger = parseInt;\nvar bind = require('function-bind');\nvar arraySlice = bind.call(Function.call, $Array.prototype.slice);\nvar strSlice = bind.call(Function.call, $String.prototype.slice);\nvar isBinary = bind.call(Function.call, $RegExp.prototype.test, /^0b[01]+$/i);\nvar isOctal = bind.call(Function.call, $RegExp.prototype.test, /^0o[0-7]+$/i);\nvar regexExec = bind.call(Function.call, $RegExp.prototype.exec);\nvar nonWS = ['\\u0085', '\\u200b', '\\ufffe'].join('');\nvar nonWSregex = new $RegExp('[' + nonWS + ']', 'g');\nvar hasNonWS = bind.call(Function.call, $RegExp.prototype.test, nonWSregex);\nvar invalidHexLiteral = /^[-+]0x[0-9a-f]+$/i;\nvar isInvalidHexLiteral = bind.call(Function.call, $RegExp.prototype.test, invalidHexLiteral);\nvar $charCodeAt = bind.call(Function.call, $String.prototype.charCodeAt);\nvar toStr = bind.call(Function.call, Object.prototype.toString);\nvar $floor = Math.floor;\nvar $abs = Math.abs;\nvar $ObjectCreate = Object.create;\nvar $gOPD = $Object.getOwnPropertyDescriptor;\nvar $isExtensible = $Object.isExtensible;\n\n// whitespace from: http://es5.github.io/#x15.5.4.20\n// implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324\nvar ws = ['\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003', '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028', '\\u2029\\uFEFF'].join('');\nvar trimRegex = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');\nvar replace = bind.call(Function.call, $String.prototype.replace);\nvar trim = function (value) {\n  return replace(value, trimRegex, '');\n};\nvar ES5 = require('./es5');\nvar hasRegExpMatcher = require('is-regex');\n\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-abstract-operations\nvar ES6 = assign(assign({}, ES5), {\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-call-f-v-args\n  Call: function Call(F, V) {\n    var args = arguments.length > 2 ? arguments[2] : [];\n    if (!this.IsCallable(F)) {\n      throw new $TypeError(F + ' is not a function');\n    }\n    return F.apply(V, args);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toprimitive\n  ToPrimitive: toPrimitive,\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toboolean\n  // ToBoolean: ES5.ToBoolean,\n\n  // https://ecma-international.org/ecma-262/6.0/#sec-tonumber\n  ToNumber: function ToNumber(argument) {\n    var value = isPrimitive(argument) ? argument : toPrimitive(argument, $Number);\n    if (typeof value === 'symbol') {\n      throw new $TypeError('Cannot convert a Symbol value to a number');\n    }\n    if (typeof value === 'string') {\n      if (isBinary(value)) {\n        return this.ToNumber(parseInteger(strSlice(value, 2), 2));\n      } else if (isOctal(value)) {\n        return this.ToNumber(parseInteger(strSlice(value, 2), 8));\n      } else if (hasNonWS(value) || isInvalidHexLiteral(value)) {\n        return NaN;\n      } else {\n        var trimmed = trim(value);\n        if (trimmed !== value) {\n          return this.ToNumber(trimmed);\n        }\n      }\n    }\n    return $Number(value);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tointeger\n  // ToInteger: ES5.ToNumber,\n\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint32\n  // ToInt32: ES5.ToInt32,\n\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint32\n  // ToUint32: ES5.ToUint32,\n\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint16\n  ToInt16: function ToInt16(argument) {\n    var int16bit = this.ToUint16(argument);\n    return int16bit >= 0x8000 ? int16bit - 0x10000 : int16bit;\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint16\n  // ToUint16: ES5.ToUint16,\n\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint8\n  ToInt8: function ToInt8(argument) {\n    var int8bit = this.ToUint8(argument);\n    return int8bit >= 0x80 ? int8bit - 0x100 : int8bit;\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8\n  ToUint8: function ToUint8(argument) {\n    var number = this.ToNumber(argument);\n    if ($isNaN(number) || number === 0 || !$isFinite(number)) {\n      return 0;\n    }\n    var posInt = sign(number) * $floor($abs(number));\n    return mod(posInt, 0x100);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8clamp\n  ToUint8Clamp: function ToUint8Clamp(argument) {\n    var number = this.ToNumber(argument);\n    if ($isNaN(number) || number <= 0) {\n      return 0;\n    }\n    if (number >= 0xFF) {\n      return 0xFF;\n    }\n    var f = $floor(argument);\n    if (f + 0.5 < number) {\n      return f + 1;\n    }\n    if (number < f + 0.5) {\n      return f;\n    }\n    if (f % 2 !== 0) {\n      return f + 1;\n    }\n    return f;\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tostring\n  ToString: function ToString(argument) {\n    if (typeof argument === 'symbol') {\n      throw new $TypeError('Cannot convert a Symbol value to a string');\n    }\n    return $String(argument);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toobject\n  ToObject: function ToObject(value) {\n    this.RequireObjectCoercible(value);\n    return $Object(value);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-topropertykey\n  ToPropertyKey: function ToPropertyKey(argument) {\n    var key = this.ToPrimitive(argument, $String);\n    return typeof key === 'symbol' ? key : this.ToString(key);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  ToLength: function ToLength(argument) {\n    var len = this.ToInteger(argument);\n    if (len <= 0) {\n      return 0;\n    } // includes converting -0 to +0\n    if (len > MAX_SAFE_INTEGER) {\n      return MAX_SAFE_INTEGER;\n    }\n    return len;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-canonicalnumericindexstring\n  CanonicalNumericIndexString: function CanonicalNumericIndexString(argument) {\n    if (toStr(argument) !== '[object String]') {\n      throw new $TypeError('must be a string');\n    }\n    if (argument === '-0') {\n      return -0;\n    }\n    var n = this.ToNumber(argument);\n    if (this.SameValue(this.ToString(n), argument)) {\n      return n;\n    }\n    return void 0;\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-requireobjectcoercible\n  RequireObjectCoercible: ES5.CheckObjectCoercible,\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isarray\n  IsArray: $Array.isArray || function IsArray(argument) {\n    return toStr(argument) === '[object Array]';\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-iscallable\n  // IsCallable: ES5.IsCallable,\n\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isconstructor\n  IsConstructor: function IsConstructor(argument) {\n    return typeof argument === 'function' && !!argument.prototype; // unfortunately there's no way to truly check this without try/catch `new argument`\n  },\n\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isextensible-o\n  IsExtensible: Object.preventExtensions ? function IsExtensible(obj) {\n    if (isPrimitive(obj)) {\n      return false;\n    }\n    return $isExtensible(obj);\n  } : function isExtensible(obj) {\n    return true;\n  },\n  // eslint-disable-line no-unused-vars\n\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isinteger\n  IsInteger: function IsInteger(argument) {\n    if (typeof argument !== 'number' || $isNaN(argument) || !$isFinite(argument)) {\n      return false;\n    }\n    var abs = $abs(argument);\n    return $floor(abs) === abs;\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ispropertykey\n  IsPropertyKey: function IsPropertyKey(argument) {\n    return typeof argument === 'string' || typeof argument === 'symbol';\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-isregexp\n  IsRegExp: function IsRegExp(argument) {\n    if (!argument || typeof argument !== 'object') {\n      return false;\n    }\n    if (hasSymbols) {\n      var isRegExp = argument[$Symbol.match];\n      if (typeof isRegExp !== 'undefined') {\n        return ES5.ToBoolean(isRegExp);\n      }\n    }\n    return hasRegExpMatcher(argument);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevalue\n  // SameValue: ES5.SameValue,\n\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero\n  SameValueZero: function SameValueZero(x, y) {\n    return x === y || $isNaN(x) && $isNaN(y);\n  },\n  /**\n   * 7.3.2 GetV (V, P)\n   * 1. Assert: IsPropertyKey(P) is true.\n   * 2. Let O be ToObject(V).\n   * 3. ReturnIfAbrupt(O).\n   * 4. Return O.[[Get]](P, V).\n   */\n  GetV: function GetV(V, P) {\n    // 7.3.2.1\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n    }\n\n    // 7.3.2.2-3\n    var O = this.ToObject(V);\n\n    // 7.3.2.4\n    return O[P];\n  },\n  /**\n   * 7.3.9 - https://ecma-international.org/ecma-262/6.0/#sec-getmethod\n   * 1. Assert: IsPropertyKey(P) is true.\n   * 2. Let func be GetV(O, P).\n   * 3. ReturnIfAbrupt(func).\n   * 4. If func is either undefined or null, return undefined.\n   * 5. If IsCallable(func) is false, throw a TypeError exception.\n   * 6. Return func.\n   */\n  GetMethod: function GetMethod(O, P) {\n    // 7.3.9.1\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n    }\n\n    // 7.3.9.2\n    var func = this.GetV(O, P);\n\n    // 7.3.9.4\n    if (func == null) {\n      return void 0;\n    }\n\n    // 7.3.9.5\n    if (!this.IsCallable(func)) {\n      throw new $TypeError(P + 'is not a function');\n    }\n\n    // 7.3.9.6\n    return func;\n  },\n  /**\n   * 7.3.1 Get (O, P) - https://ecma-international.org/ecma-262/6.0/#sec-get-o-p\n   * 1. Assert: Type(O) is Object.\n   * 2. Assert: IsPropertyKey(P) is true.\n   * 3. Return O.[[Get]](P, O).\n   */\n  Get: function Get(O, P) {\n    // 7.3.1.1\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n    // 7.3.1.2\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n    }\n    // 7.3.1.3\n    return O[P];\n  },\n  Type: function Type(x) {\n    if (typeof x === 'symbol') {\n      return 'Symbol';\n    }\n    return ES5.Type(x);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-speciesconstructor\n  SpeciesConstructor: function SpeciesConstructor(O, defaultConstructor) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n    var C = O.constructor;\n    if (typeof C === 'undefined') {\n      return defaultConstructor;\n    }\n    if (this.Type(C) !== 'Object') {\n      throw new $TypeError('O.constructor is not an Object');\n    }\n    var S = hasSymbols && $Symbol.species ? C[$Symbol.species] : void 0;\n    if (S == null) {\n      return defaultConstructor;\n    }\n    if (this.IsConstructor(S)) {\n      return S;\n    }\n    throw new $TypeError('no constructor found');\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-completepropertydescriptor\n  CompletePropertyDescriptor: function CompletePropertyDescriptor(Desc) {\n    if (!this.IsPropertyDescriptor(Desc)) {\n      throw new $TypeError('Desc must be a Property Descriptor');\n    }\n    if (this.IsGenericDescriptor(Desc) || this.IsDataDescriptor(Desc)) {\n      if (!has(Desc, '[[Value]]')) {\n        Desc['[[Value]]'] = void 0;\n      }\n      if (!has(Desc, '[[Writable]]')) {\n        Desc['[[Writable]]'] = false;\n      }\n    } else {\n      if (!has(Desc, '[[Get]]')) {\n        Desc['[[Get]]'] = void 0;\n      }\n      if (!has(Desc, '[[Set]]')) {\n        Desc['[[Set]]'] = void 0;\n      }\n    }\n    if (!has(Desc, '[[Enumerable]]')) {\n      Desc['[[Enumerable]]'] = false;\n    }\n    if (!has(Desc, '[[Configurable]]')) {\n      Desc['[[Configurable]]'] = false;\n    }\n    return Desc;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-set-o-p-v-throw\n  Set: function Set(O, P, V, Throw) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('O must be an Object');\n    }\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('P must be a Property Key');\n    }\n    if (this.Type(Throw) !== 'Boolean') {\n      throw new $TypeError('Throw must be a Boolean');\n    }\n    if (Throw) {\n      O[P] = V;\n      return true;\n    } else {\n      try {\n        O[P] = V;\n      } catch (e) {\n        return false;\n      }\n    }\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-hasownproperty\n  HasOwnProperty: function HasOwnProperty(O, P) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('O must be an Object');\n    }\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('P must be a Property Key');\n    }\n    return has(O, P);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-hasproperty\n  HasProperty: function HasProperty(O, P) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('O must be an Object');\n    }\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('P must be a Property Key');\n    }\n    return P in O;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-isconcatspreadable\n  IsConcatSpreadable: function IsConcatSpreadable(O) {\n    if (this.Type(O) !== 'Object') {\n      return false;\n    }\n    if (hasSymbols && typeof $Symbol.isConcatSpreadable === 'symbol') {\n      var spreadable = this.Get(O, Symbol.isConcatSpreadable);\n      if (typeof spreadable !== 'undefined') {\n        return this.ToBoolean(spreadable);\n      }\n    }\n    return this.IsArray(O);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-invoke\n  Invoke: function Invoke(O, P) {\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('P must be a Property Key');\n    }\n    var argumentsList = arraySlice(arguments, 2);\n    var func = this.GetV(O, P);\n    return this.Call(func, O, argumentsList);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-getiterator\n  GetIterator: function GetIterator(obj, method) {\n    if (!hasSymbols) {\n      throw new SyntaxError('ES.GetIterator depends on native iterator support.');\n    }\n    var actualMethod = method;\n    if (arguments.length < 2) {\n      actualMethod = this.GetMethod(obj, $Symbol.iterator);\n    }\n    var iterator = this.Call(actualMethod, obj);\n    if (this.Type(iterator) !== 'Object') {\n      throw new $TypeError('iterator must return an object');\n    }\n    return iterator;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-iteratornext\n  IteratorNext: function IteratorNext(iterator, value) {\n    var result = this.Invoke(iterator, 'next', arguments.length < 2 ? [] : [value]);\n    if (this.Type(result) !== 'Object') {\n      throw new $TypeError('iterator next must return an object');\n    }\n    return result;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-iteratorcomplete\n  IteratorComplete: function IteratorComplete(iterResult) {\n    if (this.Type(iterResult) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(iterResult) is not Object');\n    }\n    return this.ToBoolean(this.Get(iterResult, 'done'));\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-iteratorvalue\n  IteratorValue: function IteratorValue(iterResult) {\n    if (this.Type(iterResult) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(iterResult) is not Object');\n    }\n    return this.Get(iterResult, 'value');\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-iteratorstep\n  IteratorStep: function IteratorStep(iterator) {\n    var result = this.IteratorNext(iterator);\n    var done = this.IteratorComplete(result);\n    return done === true ? false : result;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-iteratorclose\n  IteratorClose: function IteratorClose(iterator, completion) {\n    if (this.Type(iterator) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(iterator) is not Object');\n    }\n    if (!this.IsCallable(completion)) {\n      throw new $TypeError('Assertion failed: completion is not a thunk for a Completion Record');\n    }\n    var completionThunk = completion;\n    var iteratorReturn = this.GetMethod(iterator, 'return');\n    if (typeof iteratorReturn === 'undefined') {\n      return completionThunk();\n    }\n    var completionRecord;\n    try {\n      var innerResult = this.Call(iteratorReturn, iterator, []);\n    } catch (e) {\n      // if we hit here, then \"e\" is the innerResult completion that needs re-throwing\n\n      // if the completion is of type \"throw\", this will throw.\n      completionRecord = completionThunk();\n      completionThunk = null; // ensure it's not called twice.\n\n      // if not, then return the innerResult completion\n      throw e;\n    }\n    completionRecord = completionThunk(); // if innerResult worked, then throw if the completion does\n    completionThunk = null; // ensure it's not called twice.\n\n    if (this.Type(innerResult) !== 'Object') {\n      throw new $TypeError('iterator .return must return an object');\n    }\n    return completionRecord;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-createiterresultobject\n  CreateIterResultObject: function CreateIterResultObject(value, done) {\n    if (this.Type(done) !== 'Boolean') {\n      throw new $TypeError('Assertion failed: Type(done) is not Boolean');\n    }\n    return {\n      value: value,\n      done: done\n    };\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-regexpexec\n  RegExpExec: function RegExpExec(R, S) {\n    if (this.Type(R) !== 'Object') {\n      throw new $TypeError('R must be an Object');\n    }\n    if (this.Type(S) !== 'String') {\n      throw new $TypeError('S must be a String');\n    }\n    var exec = this.Get(R, 'exec');\n    if (this.IsCallable(exec)) {\n      var result = this.Call(exec, R, [S]);\n      if (result === null || this.Type(result) === 'Object') {\n        return result;\n      }\n      throw new $TypeError('\"exec\" method must return `null` or an Object');\n    }\n    return regexExec(R, S);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-arrayspeciescreate\n  ArraySpeciesCreate: function ArraySpeciesCreate(originalArray, length) {\n    if (!this.IsInteger(length) || length < 0) {\n      throw new $TypeError('Assertion failed: length must be an integer >= 0');\n    }\n    var len = length === 0 ? 0 : length;\n    var C;\n    var isArray = this.IsArray(originalArray);\n    if (isArray) {\n      C = this.Get(originalArray, 'constructor');\n      // TODO: figure out how to make a cross-realm normal Array, a same-realm Array\n      // if (this.IsConstructor(C)) {\n      // \tif C is another realm's Array, C = undefined\n      // \tObject.getPrototypeOf(Object.getPrototypeOf(Object.getPrototypeOf(Array))) === null ?\n      // }\n      if (this.Type(C) === 'Object' && hasSymbols && $Symbol.species) {\n        C = this.Get(C, $Symbol.species);\n        if (C === null) {\n          C = void 0;\n        }\n      }\n    }\n    if (typeof C === 'undefined') {\n      return $Array(len);\n    }\n    if (!this.IsConstructor(C)) {\n      throw new $TypeError('C must be a constructor');\n    }\n    return new C(len); // this.Construct(C, len);\n  },\n\n  CreateDataProperty: function CreateDataProperty(O, P, V) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n    }\n    var oldDesc = $gOPD(O, P);\n    var extensible = oldDesc || typeof $isExtensible !== 'function' || $isExtensible(O);\n    var immutable = oldDesc && (!oldDesc.writable || !oldDesc.configurable);\n    if (immutable || !extensible) {\n      return false;\n    }\n    var newDesc = {\n      configurable: true,\n      enumerable: true,\n      value: V,\n      writable: true\n    };\n    Object.defineProperty(O, P, newDesc);\n    return true;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-createdatapropertyorthrow\n  CreateDataPropertyOrThrow: function CreateDataPropertyOrThrow(O, P, V) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n    }\n    var success = this.CreateDataProperty(O, P, V);\n    if (!success) {\n      throw new $TypeError('unable to create data property');\n    }\n    return success;\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-objectcreate\n  ObjectCreate: function ObjectCreate(proto, internalSlotsList) {\n    if (proto !== null && this.Type(proto) !== 'Object') {\n      throw new $TypeError('Assertion failed: proto must be null or an object');\n    }\n    var slots = arguments.length < 2 ? [] : internalSlotsList;\n    if (slots.length > 0) {\n      throw new $SyntaxError('es-abstract does not yet support internal slots');\n    }\n    if (proto === null && !$ObjectCreate) {\n      throw new $SyntaxError('native Object.create support is required to create null objects');\n    }\n    return $ObjectCreate(proto);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-advancestringindex\n  AdvanceStringIndex: function AdvanceStringIndex(S, index, unicode) {\n    if (this.Type(S) !== 'String') {\n      throw new $TypeError('S must be a String');\n    }\n    if (!this.IsInteger(index) || index < 0 || index > MAX_SAFE_INTEGER) {\n      throw new $TypeError('Assertion failed: length must be an integer >= 0 and <= 2**53');\n    }\n    if (this.Type(unicode) !== 'Boolean') {\n      throw new $TypeError('Assertion failed: unicode must be a Boolean');\n    }\n    if (!unicode) {\n      return index + 1;\n    }\n    var length = S.length;\n    if (index + 1 >= length) {\n      return index + 1;\n    }\n    var first = $charCodeAt(S, index);\n    if (first < 0xD800 || first > 0xDBFF) {\n      return index + 1;\n    }\n    var second = $charCodeAt(S, index + 1);\n    if (second < 0xDC00 || second > 0xDFFF) {\n      return index + 1;\n    }\n    return index + 2;\n  }\n});\ndelete ES6.CheckObjectCoercible; // renamed in ES6 to RequireObjectCoercible\n\nmodule.exports = ES6;","map":{"version":3,"names":["has","require","toPrimitive","GetIntrinsic","$TypeError","$SyntaxError","$Array","$String","$Object","$Number","$Symbol","$RegExp","hasSymbols","$isNaN","$isFinite","MAX_SAFE_INTEGER","Math","pow","assign","sign","mod","isPrimitive","parseInteger","parseInt","bind","arraySlice","call","Function","prototype","slice","strSlice","isBinary","test","isOctal","regexExec","exec","nonWS","join","nonWSregex","hasNonWS","invalidHexLiteral","isInvalidHexLiteral","$charCodeAt","charCodeAt","toStr","Object","toString","$floor","floor","$abs","abs","$ObjectCreate","create","$gOPD","getOwnPropertyDescriptor","$isExtensible","isExtensible","ws","trimRegex","RegExp","replace","trim","value","ES5","hasRegExpMatcher","ES6","Call","F","V","args","arguments","length","IsCallable","apply","ToPrimitive","ToNumber","argument","NaN","trimmed","ToInt16","int16bit","ToUint16","ToInt8","int8bit","ToUint8","number","posInt","ToUint8Clamp","f","ToString","ToObject","RequireObjectCoercible","ToPropertyKey","key","ToLength","len","ToInteger","CanonicalNumericIndexString","n","SameValue","CheckObjectCoercible","IsArray","isArray","IsConstructor","IsExtensible","preventExtensions","obj","IsInteger","IsPropertyKey","IsRegExp","isRegExp","match","ToBoolean","SameValueZero","x","y","GetV","P","O","GetMethod","func","Get","Type","SpeciesConstructor","defaultConstructor","C","constructor","S","species","CompletePropertyDescriptor","Desc","IsPropertyDescriptor","IsGenericDescriptor","IsDataDescriptor","Set","Throw","e","HasOwnProperty","HasProperty","IsConcatSpreadable","isConcatSpreadable","spreadable","Symbol","Invoke","argumentsList","GetIterator","method","SyntaxError","actualMethod","iterator","IteratorNext","result","IteratorComplete","iterResult","IteratorValue","IteratorStep","done","IteratorClose","completion","completionThunk","iteratorReturn","completionRecord","innerResult","CreateIterResultObject","RegExpExec","R","ArraySpeciesCreate","originalArray","CreateDataProperty","oldDesc","extensible","immutable","writable","configurable","newDesc","enumerable","defineProperty","CreateDataPropertyOrThrow","success","ObjectCreate","proto","internalSlotsList","slots","AdvanceStringIndex","index","unicode","first","second","module","exports"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/es-abstract/es2015.js"],"sourcesContent":["'use strict';\n\nvar has = require('has');\nvar toPrimitive = require('es-to-primitive/es6');\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $Array = GetIntrinsic('%Array%');\nvar $String = GetIntrinsic('%String%');\nvar $Object = GetIntrinsic('%Object%');\nvar $Number = GetIntrinsic('%Number%');\nvar $Symbol = GetIntrinsic('%Symbol%', true);\nvar $RegExp = GetIntrinsic('%RegExp%');\n\nvar hasSymbols = !!$Symbol;\n\nvar $isNaN = require('./helpers/isNaN');\nvar $isFinite = require('./helpers/isFinite');\nvar MAX_SAFE_INTEGER = $Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\n\nvar assign = require('./helpers/assign');\nvar sign = require('./helpers/sign');\nvar mod = require('./helpers/mod');\nvar isPrimitive = require('./helpers/isPrimitive');\nvar parseInteger = parseInt;\nvar bind = require('function-bind');\nvar arraySlice = bind.call(Function.call, $Array.prototype.slice);\nvar strSlice = bind.call(Function.call, $String.prototype.slice);\nvar isBinary = bind.call(Function.call, $RegExp.prototype.test, /^0b[01]+$/i);\nvar isOctal = bind.call(Function.call, $RegExp.prototype.test, /^0o[0-7]+$/i);\nvar regexExec = bind.call(Function.call, $RegExp.prototype.exec);\nvar nonWS = ['\\u0085', '\\u200b', '\\ufffe'].join('');\nvar nonWSregex = new $RegExp('[' + nonWS + ']', 'g');\nvar hasNonWS = bind.call(Function.call, $RegExp.prototype.test, nonWSregex);\nvar invalidHexLiteral = /^[-+]0x[0-9a-f]+$/i;\nvar isInvalidHexLiteral = bind.call(Function.call, $RegExp.prototype.test, invalidHexLiteral);\nvar $charCodeAt = bind.call(Function.call, $String.prototype.charCodeAt);\n\nvar toStr = bind.call(Function.call, Object.prototype.toString);\n\nvar $floor = Math.floor;\nvar $abs = Math.abs;\n\nvar $ObjectCreate = Object.create;\nvar $gOPD = $Object.getOwnPropertyDescriptor;\n\nvar $isExtensible = $Object.isExtensible;\n\n// whitespace from: http://es5.github.io/#x15.5.4.20\n// implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324\nvar ws = [\n\t'\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003',\n\t'\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028',\n\t'\\u2029\\uFEFF'\n].join('');\nvar trimRegex = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');\nvar replace = bind.call(Function.call, $String.prototype.replace);\nvar trim = function (value) {\n\treturn replace(value, trimRegex, '');\n};\n\nvar ES5 = require('./es5');\n\nvar hasRegExpMatcher = require('is-regex');\n\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-abstract-operations\nvar ES6 = assign(assign({}, ES5), {\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-call-f-v-args\n\tCall: function Call(F, V) {\n\t\tvar args = arguments.length > 2 ? arguments[2] : [];\n\t\tif (!this.IsCallable(F)) {\n\t\t\tthrow new $TypeError(F + ' is not a function');\n\t\t}\n\t\treturn F.apply(V, args);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toprimitive\n\tToPrimitive: toPrimitive,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toboolean\n\t// ToBoolean: ES5.ToBoolean,\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-tonumber\n\tToNumber: function ToNumber(argument) {\n\t\tvar value = isPrimitive(argument) ? argument : toPrimitive(argument, $Number);\n\t\tif (typeof value === 'symbol') {\n\t\t\tthrow new $TypeError('Cannot convert a Symbol value to a number');\n\t\t}\n\t\tif (typeof value === 'string') {\n\t\t\tif (isBinary(value)) {\n\t\t\t\treturn this.ToNumber(parseInteger(strSlice(value, 2), 2));\n\t\t\t} else if (isOctal(value)) {\n\t\t\t\treturn this.ToNumber(parseInteger(strSlice(value, 2), 8));\n\t\t\t} else if (hasNonWS(value) || isInvalidHexLiteral(value)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar trimmed = trim(value);\n\t\t\t\tif (trimmed !== value) {\n\t\t\t\t\treturn this.ToNumber(trimmed);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $Number(value);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tointeger\n\t// ToInteger: ES5.ToNumber,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint32\n\t// ToInt32: ES5.ToInt32,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint32\n\t// ToUint32: ES5.ToUint32,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint16\n\tToInt16: function ToInt16(argument) {\n\t\tvar int16bit = this.ToUint16(argument);\n\t\treturn int16bit >= 0x8000 ? int16bit - 0x10000 : int16bit;\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint16\n\t// ToUint16: ES5.ToUint16,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint8\n\tToInt8: function ToInt8(argument) {\n\t\tvar int8bit = this.ToUint8(argument);\n\t\treturn int8bit >= 0x80 ? int8bit - 0x100 : int8bit;\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8\n\tToUint8: function ToUint8(argument) {\n\t\tvar number = this.ToNumber(argument);\n\t\tif ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }\n\t\tvar posInt = sign(number) * $floor($abs(number));\n\t\treturn mod(posInt, 0x100);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8clamp\n\tToUint8Clamp: function ToUint8Clamp(argument) {\n\t\tvar number = this.ToNumber(argument);\n\t\tif ($isNaN(number) || number <= 0) { return 0; }\n\t\tif (number >= 0xFF) { return 0xFF; }\n\t\tvar f = $floor(argument);\n\t\tif (f + 0.5 < number) { return f + 1; }\n\t\tif (number < f + 0.5) { return f; }\n\t\tif (f % 2 !== 0) { return f + 1; }\n\t\treturn f;\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tostring\n\tToString: function ToString(argument) {\n\t\tif (typeof argument === 'symbol') {\n\t\t\tthrow new $TypeError('Cannot convert a Symbol value to a string');\n\t\t}\n\t\treturn $String(argument);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toobject\n\tToObject: function ToObject(value) {\n\t\tthis.RequireObjectCoercible(value);\n\t\treturn $Object(value);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-topropertykey\n\tToPropertyKey: function ToPropertyKey(argument) {\n\t\tvar key = this.ToPrimitive(argument, $String);\n\t\treturn typeof key === 'symbol' ? key : this.ToString(key);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n\tToLength: function ToLength(argument) {\n\t\tvar len = this.ToInteger(argument);\n\t\tif (len <= 0) { return 0; } // includes converting -0 to +0\n\t\tif (len > MAX_SAFE_INTEGER) { return MAX_SAFE_INTEGER; }\n\t\treturn len;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-canonicalnumericindexstring\n\tCanonicalNumericIndexString: function CanonicalNumericIndexString(argument) {\n\t\tif (toStr(argument) !== '[object String]') {\n\t\t\tthrow new $TypeError('must be a string');\n\t\t}\n\t\tif (argument === '-0') { return -0; }\n\t\tvar n = this.ToNumber(argument);\n\t\tif (this.SameValue(this.ToString(n), argument)) { return n; }\n\t\treturn void 0;\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-requireobjectcoercible\n\tRequireObjectCoercible: ES5.CheckObjectCoercible,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isarray\n\tIsArray: $Array.isArray || function IsArray(argument) {\n\t\treturn toStr(argument) === '[object Array]';\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-iscallable\n\t// IsCallable: ES5.IsCallable,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isconstructor\n\tIsConstructor: function IsConstructor(argument) {\n\t\treturn typeof argument === 'function' && !!argument.prototype; // unfortunately there's no way to truly check this without try/catch `new argument`\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isextensible-o\n\tIsExtensible: Object.preventExtensions\n\t\t? function IsExtensible(obj) {\n\t\t\tif (isPrimitive(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn $isExtensible(obj);\n\t\t}\n\t\t: function isExtensible(obj) { return true; }, // eslint-disable-line no-unused-vars\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isinteger\n\tIsInteger: function IsInteger(argument) {\n\t\tif (typeof argument !== 'number' || $isNaN(argument) || !$isFinite(argument)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar abs = $abs(argument);\n\t\treturn $floor(abs) === abs;\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ispropertykey\n\tIsPropertyKey: function IsPropertyKey(argument) {\n\t\treturn typeof argument === 'string' || typeof argument === 'symbol';\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-isregexp\n\tIsRegExp: function IsRegExp(argument) {\n\t\tif (!argument || typeof argument !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\tif (hasSymbols) {\n\t\t\tvar isRegExp = argument[$Symbol.match];\n\t\t\tif (typeof isRegExp !== 'undefined') {\n\t\t\t\treturn ES5.ToBoolean(isRegExp);\n\t\t\t}\n\t\t}\n\t\treturn hasRegExpMatcher(argument);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevalue\n\t// SameValue: ES5.SameValue,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero\n\tSameValueZero: function SameValueZero(x, y) {\n\t\treturn (x === y) || ($isNaN(x) && $isNaN(y));\n\t},\n\n\t/**\n\t * 7.3.2 GetV (V, P)\n\t * 1. Assert: IsPropertyKey(P) is true.\n\t * 2. Let O be ToObject(V).\n\t * 3. ReturnIfAbrupt(O).\n\t * 4. Return O.[[Get]](P, V).\n\t */\n\tGetV: function GetV(V, P) {\n\t\t// 7.3.2.1\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\n\t\t// 7.3.2.2-3\n\t\tvar O = this.ToObject(V);\n\n\t\t// 7.3.2.4\n\t\treturn O[P];\n\t},\n\n\t/**\n\t * 7.3.9 - https://ecma-international.org/ecma-262/6.0/#sec-getmethod\n\t * 1. Assert: IsPropertyKey(P) is true.\n\t * 2. Let func be GetV(O, P).\n\t * 3. ReturnIfAbrupt(func).\n\t * 4. If func is either undefined or null, return undefined.\n\t * 5. If IsCallable(func) is false, throw a TypeError exception.\n\t * 6. Return func.\n\t */\n\tGetMethod: function GetMethod(O, P) {\n\t\t// 7.3.9.1\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\n\t\t// 7.3.9.2\n\t\tvar func = this.GetV(O, P);\n\n\t\t// 7.3.9.4\n\t\tif (func == null) {\n\t\t\treturn void 0;\n\t\t}\n\n\t\t// 7.3.9.5\n\t\tif (!this.IsCallable(func)) {\n\t\t\tthrow new $TypeError(P + 'is not a function');\n\t\t}\n\n\t\t// 7.3.9.6\n\t\treturn func;\n\t},\n\n\t/**\n\t * 7.3.1 Get (O, P) - https://ecma-international.org/ecma-262/6.0/#sec-get-o-p\n\t * 1. Assert: Type(O) is Object.\n\t * 2. Assert: IsPropertyKey(P) is true.\n\t * 3. Return O.[[Get]](P, O).\n\t */\n\tGet: function Get(O, P) {\n\t\t// 7.3.1.1\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\t// 7.3.1.2\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\t\t// 7.3.1.3\n\t\treturn O[P];\n\t},\n\n\tType: function Type(x) {\n\t\tif (typeof x === 'symbol') {\n\t\t\treturn 'Symbol';\n\t\t}\n\t\treturn ES5.Type(x);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-speciesconstructor\n\tSpeciesConstructor: function SpeciesConstructor(O, defaultConstructor) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\tvar C = O.constructor;\n\t\tif (typeof C === 'undefined') {\n\t\t\treturn defaultConstructor;\n\t\t}\n\t\tif (this.Type(C) !== 'Object') {\n\t\t\tthrow new $TypeError('O.constructor is not an Object');\n\t\t}\n\t\tvar S = hasSymbols && $Symbol.species ? C[$Symbol.species] : void 0;\n\t\tif (S == null) {\n\t\t\treturn defaultConstructor;\n\t\t}\n\t\tif (this.IsConstructor(S)) {\n\t\t\treturn S;\n\t\t}\n\t\tthrow new $TypeError('no constructor found');\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-completepropertydescriptor\n\tCompletePropertyDescriptor: function CompletePropertyDescriptor(Desc) {\n\t\tif (!this.IsPropertyDescriptor(Desc)) {\n\t\t\tthrow new $TypeError('Desc must be a Property Descriptor');\n\t\t}\n\n\t\tif (this.IsGenericDescriptor(Desc) || this.IsDataDescriptor(Desc)) {\n\t\t\tif (!has(Desc, '[[Value]]')) {\n\t\t\t\tDesc['[[Value]]'] = void 0;\n\t\t\t}\n\t\t\tif (!has(Desc, '[[Writable]]')) {\n\t\t\t\tDesc['[[Writable]]'] = false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (!has(Desc, '[[Get]]')) {\n\t\t\t\tDesc['[[Get]]'] = void 0;\n\t\t\t}\n\t\t\tif (!has(Desc, '[[Set]]')) {\n\t\t\t\tDesc['[[Set]]'] = void 0;\n\t\t\t}\n\t\t}\n\t\tif (!has(Desc, '[[Enumerable]]')) {\n\t\t\tDesc['[[Enumerable]]'] = false;\n\t\t}\n\t\tif (!has(Desc, '[[Configurable]]')) {\n\t\t\tDesc['[[Configurable]]'] = false;\n\t\t}\n\t\treturn Desc;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-set-o-p-v-throw\n\tSet: function Set(O, P, V, Throw) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('O must be an Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('P must be a Property Key');\n\t\t}\n\t\tif (this.Type(Throw) !== 'Boolean') {\n\t\t\tthrow new $TypeError('Throw must be a Boolean');\n\t\t}\n\t\tif (Throw) {\n\t\t\tO[P] = V;\n\t\t\treturn true;\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tO[P] = V;\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-hasownproperty\n\tHasOwnProperty: function HasOwnProperty(O, P) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('O must be an Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('P must be a Property Key');\n\t\t}\n\t\treturn has(O, P);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-hasproperty\n\tHasProperty: function HasProperty(O, P) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('O must be an Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('P must be a Property Key');\n\t\t}\n\t\treturn P in O;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-isconcatspreadable\n\tIsConcatSpreadable: function IsConcatSpreadable(O) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\tif (hasSymbols && typeof $Symbol.isConcatSpreadable === 'symbol') {\n\t\t\tvar spreadable = this.Get(O, Symbol.isConcatSpreadable);\n\t\t\tif (typeof spreadable !== 'undefined') {\n\t\t\t\treturn this.ToBoolean(spreadable);\n\t\t\t}\n\t\t}\n\t\treturn this.IsArray(O);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-invoke\n\tInvoke: function Invoke(O, P) {\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('P must be a Property Key');\n\t\t}\n\t\tvar argumentsList = arraySlice(arguments, 2);\n\t\tvar func = this.GetV(O, P);\n\t\treturn this.Call(func, O, argumentsList);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-getiterator\n\tGetIterator: function GetIterator(obj, method) {\n\t\tif (!hasSymbols) {\n\t\t\tthrow new SyntaxError('ES.GetIterator depends on native iterator support.');\n\t\t}\n\n\t\tvar actualMethod = method;\n\t\tif (arguments.length < 2) {\n\t\t\tactualMethod = this.GetMethod(obj, $Symbol.iterator);\n\t\t}\n\t\tvar iterator = this.Call(actualMethod, obj);\n\t\tif (this.Type(iterator) !== 'Object') {\n\t\t\tthrow new $TypeError('iterator must return an object');\n\t\t}\n\n\t\treturn iterator;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-iteratornext\n\tIteratorNext: function IteratorNext(iterator, value) {\n\t\tvar result = this.Invoke(iterator, 'next', arguments.length < 2 ? [] : [value]);\n\t\tif (this.Type(result) !== 'Object') {\n\t\t\tthrow new $TypeError('iterator next must return an object');\n\t\t}\n\t\treturn result;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-iteratorcomplete\n\tIteratorComplete: function IteratorComplete(iterResult) {\n\t\tif (this.Type(iterResult) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(iterResult) is not Object');\n\t\t}\n\t\treturn this.ToBoolean(this.Get(iterResult, 'done'));\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-iteratorvalue\n\tIteratorValue: function IteratorValue(iterResult) {\n\t\tif (this.Type(iterResult) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(iterResult) is not Object');\n\t\t}\n\t\treturn this.Get(iterResult, 'value');\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-iteratorstep\n\tIteratorStep: function IteratorStep(iterator) {\n\t\tvar result = this.IteratorNext(iterator);\n\t\tvar done = this.IteratorComplete(result);\n\t\treturn done === true ? false : result;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-iteratorclose\n\tIteratorClose: function IteratorClose(iterator, completion) {\n\t\tif (this.Type(iterator) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(iterator) is not Object');\n\t\t}\n\t\tif (!this.IsCallable(completion)) {\n\t\t\tthrow new $TypeError('Assertion failed: completion is not a thunk for a Completion Record');\n\t\t}\n\t\tvar completionThunk = completion;\n\n\t\tvar iteratorReturn = this.GetMethod(iterator, 'return');\n\n\t\tif (typeof iteratorReturn === 'undefined') {\n\t\t\treturn completionThunk();\n\t\t}\n\n\t\tvar completionRecord;\n\t\ttry {\n\t\t\tvar innerResult = this.Call(iteratorReturn, iterator, []);\n\t\t} catch (e) {\n\t\t\t// if we hit here, then \"e\" is the innerResult completion that needs re-throwing\n\n\t\t\t// if the completion is of type \"throw\", this will throw.\n\t\t\tcompletionRecord = completionThunk();\n\t\t\tcompletionThunk = null; // ensure it's not called twice.\n\n\t\t\t// if not, then return the innerResult completion\n\t\t\tthrow e;\n\t\t}\n\t\tcompletionRecord = completionThunk(); // if innerResult worked, then throw if the completion does\n\t\tcompletionThunk = null; // ensure it's not called twice.\n\n\t\tif (this.Type(innerResult) !== 'Object') {\n\t\t\tthrow new $TypeError('iterator .return must return an object');\n\t\t}\n\n\t\treturn completionRecord;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-createiterresultobject\n\tCreateIterResultObject: function CreateIterResultObject(value, done) {\n\t\tif (this.Type(done) !== 'Boolean') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(done) is not Boolean');\n\t\t}\n\t\treturn {\n\t\t\tvalue: value,\n\t\t\tdone: done\n\t\t};\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-regexpexec\n\tRegExpExec: function RegExpExec(R, S) {\n\t\tif (this.Type(R) !== 'Object') {\n\t\t\tthrow new $TypeError('R must be an Object');\n\t\t}\n\t\tif (this.Type(S) !== 'String') {\n\t\t\tthrow new $TypeError('S must be a String');\n\t\t}\n\t\tvar exec = this.Get(R, 'exec');\n\t\tif (this.IsCallable(exec)) {\n\t\t\tvar result = this.Call(exec, R, [S]);\n\t\t\tif (result === null || this.Type(result) === 'Object') {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tthrow new $TypeError('\"exec\" method must return `null` or an Object');\n\t\t}\n\t\treturn regexExec(R, S);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-arrayspeciescreate\n\tArraySpeciesCreate: function ArraySpeciesCreate(originalArray, length) {\n\t\tif (!this.IsInteger(length) || length < 0) {\n\t\t\tthrow new $TypeError('Assertion failed: length must be an integer >= 0');\n\t\t}\n\t\tvar len = length === 0 ? 0 : length;\n\t\tvar C;\n\t\tvar isArray = this.IsArray(originalArray);\n\t\tif (isArray) {\n\t\t\tC = this.Get(originalArray, 'constructor');\n\t\t\t// TODO: figure out how to make a cross-realm normal Array, a same-realm Array\n\t\t\t// if (this.IsConstructor(C)) {\n\t\t\t// \tif C is another realm's Array, C = undefined\n\t\t\t// \tObject.getPrototypeOf(Object.getPrototypeOf(Object.getPrototypeOf(Array))) === null ?\n\t\t\t// }\n\t\t\tif (this.Type(C) === 'Object' && hasSymbols && $Symbol.species) {\n\t\t\t\tC = this.Get(C, $Symbol.species);\n\t\t\t\tif (C === null) {\n\t\t\t\t\tC = void 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (typeof C === 'undefined') {\n\t\t\treturn $Array(len);\n\t\t}\n\t\tif (!this.IsConstructor(C)) {\n\t\t\tthrow new $TypeError('C must be a constructor');\n\t\t}\n\t\treturn new C(len); // this.Construct(C, len);\n\t},\n\n\tCreateDataProperty: function CreateDataProperty(O, P, V) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\t\tvar oldDesc = $gOPD(O, P);\n\t\tvar extensible = oldDesc || (typeof $isExtensible !== 'function' || $isExtensible(O));\n\t\tvar immutable = oldDesc && (!oldDesc.writable || !oldDesc.configurable);\n\t\tif (immutable || !extensible) {\n\t\t\treturn false;\n\t\t}\n\t\tvar newDesc = {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: V,\n\t\t\twritable: true\n\t\t};\n\t\tObject.defineProperty(O, P, newDesc);\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-createdatapropertyorthrow\n\tCreateDataPropertyOrThrow: function CreateDataPropertyOrThrow(O, P, V) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\t\tvar success = this.CreateDataProperty(O, P, V);\n\t\tif (!success) {\n\t\t\tthrow new $TypeError('unable to create data property');\n\t\t}\n\t\treturn success;\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-objectcreate\n\tObjectCreate: function ObjectCreate(proto, internalSlotsList) {\n\t\tif (proto !== null && this.Type(proto) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: proto must be null or an object');\n\t\t}\n\t\tvar slots = arguments.length < 2 ? [] : internalSlotsList;\n\t\tif (slots.length > 0) {\n\t\t\tthrow new $SyntaxError('es-abstract does not yet support internal slots');\n\t\t}\n\n\t\tif (proto === null && !$ObjectCreate) {\n\t\t\tthrow new $SyntaxError('native Object.create support is required to create null objects');\n\t\t}\n\n\t\treturn $ObjectCreate(proto);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-advancestringindex\n\tAdvanceStringIndex: function AdvanceStringIndex(S, index, unicode) {\n\t\tif (this.Type(S) !== 'String') {\n\t\t\tthrow new $TypeError('S must be a String');\n\t\t}\n\t\tif (!this.IsInteger(index) || index < 0 || index > MAX_SAFE_INTEGER) {\n\t\t\tthrow new $TypeError('Assertion failed: length must be an integer >= 0 and <= 2**53');\n\t\t}\n\t\tif (this.Type(unicode) !== 'Boolean') {\n\t\t\tthrow new $TypeError('Assertion failed: unicode must be a Boolean');\n\t\t}\n\t\tif (!unicode) {\n\t\t\treturn index + 1;\n\t\t}\n\t\tvar length = S.length;\n\t\tif ((index + 1) >= length) {\n\t\t\treturn index + 1;\n\t\t}\n\n\t\tvar first = $charCodeAt(S, index);\n\t\tif (first < 0xD800 || first > 0xDBFF) {\n\t\t\treturn index + 1;\n\t\t}\n\n\t\tvar second = $charCodeAt(S, index + 1);\n\t\tif (second < 0xDC00 || second > 0xDFFF) {\n\t\t\treturn index + 1;\n\t\t}\n\n\t\treturn index + 2;\n\t}\n});\n\ndelete ES6.CheckObjectCoercible; // renamed in ES6 to RequireObjectCoercible\n\nmodule.exports = ES6;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,GAAG,GAAGC,OAAO,CAAC,KAAK,CAAC;AACxB,IAAIC,WAAW,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAEhD,IAAIE,YAAY,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AAE5C,IAAIG,UAAU,GAAGD,YAAY,CAAC,aAAa,CAAC;AAC5C,IAAIE,YAAY,GAAGF,YAAY,CAAC,eAAe,CAAC;AAChD,IAAIG,MAAM,GAAGH,YAAY,CAAC,SAAS,CAAC;AACpC,IAAII,OAAO,GAAGJ,YAAY,CAAC,UAAU,CAAC;AACtC,IAAIK,OAAO,GAAGL,YAAY,CAAC,UAAU,CAAC;AACtC,IAAIM,OAAO,GAAGN,YAAY,CAAC,UAAU,CAAC;AACtC,IAAIO,OAAO,GAAGP,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC;AAC5C,IAAIQ,OAAO,GAAGR,YAAY,CAAC,UAAU,CAAC;AAEtC,IAAIS,UAAU,GAAG,CAAC,CAACF,OAAO;AAE1B,IAAIG,MAAM,GAAGZ,OAAO,CAAC,iBAAiB,CAAC;AACvC,IAAIa,SAAS,GAAGb,OAAO,CAAC,oBAAoB,CAAC;AAC7C,IAAIc,gBAAgB,GAAGN,OAAO,CAACM,gBAAgB,IAAIC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;AAEtE,IAAIC,MAAM,GAAGjB,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIkB,IAAI,GAAGlB,OAAO,CAAC,gBAAgB,CAAC;AACpC,IAAImB,GAAG,GAAGnB,OAAO,CAAC,eAAe,CAAC;AAClC,IAAIoB,WAAW,GAAGpB,OAAO,CAAC,uBAAuB,CAAC;AAClD,IAAIqB,YAAY,GAAGC,QAAQ;AAC3B,IAAIC,IAAI,GAAGvB,OAAO,CAAC,eAAe,CAAC;AACnC,IAAIwB,UAAU,GAAGD,IAAI,CAACE,IAAI,CAACC,QAAQ,CAACD,IAAI,EAAEpB,MAAM,CAACsB,SAAS,CAACC,KAAK,CAAC;AACjE,IAAIC,QAAQ,GAAGN,IAAI,CAACE,IAAI,CAACC,QAAQ,CAACD,IAAI,EAAEnB,OAAO,CAACqB,SAAS,CAACC,KAAK,CAAC;AAChE,IAAIE,QAAQ,GAAGP,IAAI,CAACE,IAAI,CAACC,QAAQ,CAACD,IAAI,EAAEf,OAAO,CAACiB,SAAS,CAACI,IAAI,EAAE,YAAY,CAAC;AAC7E,IAAIC,OAAO,GAAGT,IAAI,CAACE,IAAI,CAACC,QAAQ,CAACD,IAAI,EAAEf,OAAO,CAACiB,SAAS,CAACI,IAAI,EAAE,aAAa,CAAC;AAC7E,IAAIE,SAAS,GAAGV,IAAI,CAACE,IAAI,CAACC,QAAQ,CAACD,IAAI,EAAEf,OAAO,CAACiB,SAAS,CAACO,IAAI,CAAC;AAChE,IAAIC,KAAK,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;AACnD,IAAIC,UAAU,GAAG,IAAI3B,OAAO,CAAC,GAAG,GAAGyB,KAAK,GAAG,GAAG,EAAE,GAAG,CAAC;AACpD,IAAIG,QAAQ,GAAGf,IAAI,CAACE,IAAI,CAACC,QAAQ,CAACD,IAAI,EAAEf,OAAO,CAACiB,SAAS,CAACI,IAAI,EAAEM,UAAU,CAAC;AAC3E,IAAIE,iBAAiB,GAAG,oBAAoB;AAC5C,IAAIC,mBAAmB,GAAGjB,IAAI,CAACE,IAAI,CAACC,QAAQ,CAACD,IAAI,EAAEf,OAAO,CAACiB,SAAS,CAACI,IAAI,EAAEQ,iBAAiB,CAAC;AAC7F,IAAIE,WAAW,GAAGlB,IAAI,CAACE,IAAI,CAACC,QAAQ,CAACD,IAAI,EAAEnB,OAAO,CAACqB,SAAS,CAACe,UAAU,CAAC;AAExE,IAAIC,KAAK,GAAGpB,IAAI,CAACE,IAAI,CAACC,QAAQ,CAACD,IAAI,EAAEmB,MAAM,CAACjB,SAAS,CAACkB,QAAQ,CAAC;AAE/D,IAAIC,MAAM,GAAG/B,IAAI,CAACgC,KAAK;AACvB,IAAIC,IAAI,GAAGjC,IAAI,CAACkC,GAAG;AAEnB,IAAIC,aAAa,GAAGN,MAAM,CAACO,MAAM;AACjC,IAAIC,KAAK,GAAG7C,OAAO,CAAC8C,wBAAwB;AAE5C,IAAIC,aAAa,GAAG/C,OAAO,CAACgD,YAAY;;AAExC;AACA;AACA,IAAIC,EAAE,GAAG,CACR,kEAAkE,EAClE,oEAAoE,EACpE,cAAc,CACd,CAACpB,IAAI,CAAC,EAAE,CAAC;AACV,IAAIqB,SAAS,GAAG,IAAIC,MAAM,CAAC,KAAK,GAAGF,EAAE,GAAG,QAAQ,GAAGA,EAAE,GAAG,MAAM,EAAE,GAAG,CAAC;AACpE,IAAIG,OAAO,GAAGpC,IAAI,CAACE,IAAI,CAACC,QAAQ,CAACD,IAAI,EAAEnB,OAAO,CAACqB,SAAS,CAACgC,OAAO,CAAC;AACjE,IAAIC,IAAI,GAAG,SAAAA,CAAUC,KAAK,EAAE;EAC3B,OAAOF,OAAO,CAACE,KAAK,EAAEJ,SAAS,EAAE,EAAE,CAAC;AACrC,CAAC;AAED,IAAIK,GAAG,GAAG9D,OAAO,CAAC,OAAO,CAAC;AAE1B,IAAI+D,gBAAgB,GAAG/D,OAAO,CAAC,UAAU,CAAC;;AAE1C;AACA,IAAIgE,GAAG,GAAG/C,MAAM,CAACA,MAAM,CAAC,CAAC,CAAC,EAAE6C,GAAG,CAAC,EAAE;EAEjC;EACAG,IAAI,EAAE,SAASA,IAAIA,CAACC,CAAC,EAAEC,CAAC,EAAE;IACzB,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;IACnD,IAAI,CAAC,IAAI,CAACE,UAAU,CAACL,CAAC,CAAC,EAAE;MACxB,MAAM,IAAI/D,UAAU,CAAC+D,CAAC,GAAG,oBAAoB,CAAC;IAC/C;IACA,OAAOA,CAAC,CAACM,KAAK,CAACL,CAAC,EAAEC,IAAI,CAAC;EACxB,CAAC;EAED;EACAK,WAAW,EAAExE,WAAW;EAExB;EACA;;EAEA;EACAyE,QAAQ,EAAE,SAASA,QAAQA,CAACC,QAAQ,EAAE;IACrC,IAAId,KAAK,GAAGzC,WAAW,CAACuD,QAAQ,CAAC,GAAGA,QAAQ,GAAG1E,WAAW,CAAC0E,QAAQ,EAAEnE,OAAO,CAAC;IAC7E,IAAI,OAAOqD,KAAK,KAAK,QAAQ,EAAE;MAC9B,MAAM,IAAI1D,UAAU,CAAC,2CAA2C,CAAC;IAClE;IACA,IAAI,OAAO0D,KAAK,KAAK,QAAQ,EAAE;MAC9B,IAAI/B,QAAQ,CAAC+B,KAAK,CAAC,EAAE;QACpB,OAAO,IAAI,CAACa,QAAQ,CAACrD,YAAY,CAACQ,QAAQ,CAACgC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC1D,CAAC,MAAM,IAAI7B,OAAO,CAAC6B,KAAK,CAAC,EAAE;QAC1B,OAAO,IAAI,CAACa,QAAQ,CAACrD,YAAY,CAACQ,QAAQ,CAACgC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC1D,CAAC,MAAM,IAAIvB,QAAQ,CAACuB,KAAK,CAAC,IAAIrB,mBAAmB,CAACqB,KAAK,CAAC,EAAE;QACzD,OAAOe,GAAG;MACX,CAAC,MAAM;QACN,IAAIC,OAAO,GAAGjB,IAAI,CAACC,KAAK,CAAC;QACzB,IAAIgB,OAAO,KAAKhB,KAAK,EAAE;UACtB,OAAO,IAAI,CAACa,QAAQ,CAACG,OAAO,CAAC;QAC9B;MACD;IACD;IACA,OAAOrE,OAAO,CAACqD,KAAK,CAAC;EACtB,CAAC;EAED;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACAiB,OAAO,EAAE,SAASA,OAAOA,CAACH,QAAQ,EAAE;IACnC,IAAII,QAAQ,GAAG,IAAI,CAACC,QAAQ,CAACL,QAAQ,CAAC;IACtC,OAAOI,QAAQ,IAAI,MAAM,GAAGA,QAAQ,GAAG,OAAO,GAAGA,QAAQ;EAC1D,CAAC;EAED;EACA;;EAEA;EACAE,MAAM,EAAE,SAASA,MAAMA,CAACN,QAAQ,EAAE;IACjC,IAAIO,OAAO,GAAG,IAAI,CAACC,OAAO,CAACR,QAAQ,CAAC;IACpC,OAAOO,OAAO,IAAI,IAAI,GAAGA,OAAO,GAAG,KAAK,GAAGA,OAAO;EACnD,CAAC;EAED;EACAC,OAAO,EAAE,SAASA,OAAOA,CAACR,QAAQ,EAAE;IACnC,IAAIS,MAAM,GAAG,IAAI,CAACV,QAAQ,CAACC,QAAQ,CAAC;IACpC,IAAI/D,MAAM,CAACwE,MAAM,CAAC,IAAIA,MAAM,KAAK,CAAC,IAAI,CAACvE,SAAS,CAACuE,MAAM,CAAC,EAAE;MAAE,OAAO,CAAC;IAAE;IACtE,IAAIC,MAAM,GAAGnE,IAAI,CAACkE,MAAM,CAAC,GAAGtC,MAAM,CAACE,IAAI,CAACoC,MAAM,CAAC,CAAC;IAChD,OAAOjE,GAAG,CAACkE,MAAM,EAAE,KAAK,CAAC;EAC1B,CAAC;EAED;EACAC,YAAY,EAAE,SAASA,YAAYA,CAACX,QAAQ,EAAE;IAC7C,IAAIS,MAAM,GAAG,IAAI,CAACV,QAAQ,CAACC,QAAQ,CAAC;IACpC,IAAI/D,MAAM,CAACwE,MAAM,CAAC,IAAIA,MAAM,IAAI,CAAC,EAAE;MAAE,OAAO,CAAC;IAAE;IAC/C,IAAIA,MAAM,IAAI,IAAI,EAAE;MAAE,OAAO,IAAI;IAAE;IACnC,IAAIG,CAAC,GAAGzC,MAAM,CAAC6B,QAAQ,CAAC;IACxB,IAAIY,CAAC,GAAG,GAAG,GAAGH,MAAM,EAAE;MAAE,OAAOG,CAAC,GAAG,CAAC;IAAE;IACtC,IAAIH,MAAM,GAAGG,CAAC,GAAG,GAAG,EAAE;MAAE,OAAOA,CAAC;IAAE;IAClC,IAAIA,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;MAAE,OAAOA,CAAC,GAAG,CAAC;IAAE;IACjC,OAAOA,CAAC;EACT,CAAC;EAED;EACAC,QAAQ,EAAE,SAASA,QAAQA,CAACb,QAAQ,EAAE;IACrC,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;MACjC,MAAM,IAAIxE,UAAU,CAAC,2CAA2C,CAAC;IAClE;IACA,OAAOG,OAAO,CAACqE,QAAQ,CAAC;EACzB,CAAC;EAED;EACAc,QAAQ,EAAE,SAASA,QAAQA,CAAC5B,KAAK,EAAE;IAClC,IAAI,CAAC6B,sBAAsB,CAAC7B,KAAK,CAAC;IAClC,OAAOtD,OAAO,CAACsD,KAAK,CAAC;EACtB,CAAC;EAED;EACA8B,aAAa,EAAE,SAASA,aAAaA,CAAChB,QAAQ,EAAE;IAC/C,IAAIiB,GAAG,GAAG,IAAI,CAACnB,WAAW,CAACE,QAAQ,EAAErE,OAAO,CAAC;IAC7C,OAAO,OAAOsF,GAAG,KAAK,QAAQ,GAAGA,GAAG,GAAG,IAAI,CAACJ,QAAQ,CAACI,GAAG,CAAC;EAC1D,CAAC;EAED;EACAC,QAAQ,EAAE,SAASA,QAAQA,CAAClB,QAAQ,EAAE;IACrC,IAAImB,GAAG,GAAG,IAAI,CAACC,SAAS,CAACpB,QAAQ,CAAC;IAClC,IAAImB,GAAG,IAAI,CAAC,EAAE;MAAE,OAAO,CAAC;IAAE,CAAC,CAAC;IAC5B,IAAIA,GAAG,GAAGhF,gBAAgB,EAAE;MAAE,OAAOA,gBAAgB;IAAE;IACvD,OAAOgF,GAAG;EACX,CAAC;EAED;EACAE,2BAA2B,EAAE,SAASA,2BAA2BA,CAACrB,QAAQ,EAAE;IAC3E,IAAIhC,KAAK,CAACgC,QAAQ,CAAC,KAAK,iBAAiB,EAAE;MAC1C,MAAM,IAAIxE,UAAU,CAAC,kBAAkB,CAAC;IACzC;IACA,IAAIwE,QAAQ,KAAK,IAAI,EAAE;MAAE,OAAO,CAAC,CAAC;IAAE;IACpC,IAAIsB,CAAC,GAAG,IAAI,CAACvB,QAAQ,CAACC,QAAQ,CAAC;IAC/B,IAAI,IAAI,CAACuB,SAAS,CAAC,IAAI,CAACV,QAAQ,CAACS,CAAC,CAAC,EAAEtB,QAAQ,CAAC,EAAE;MAAE,OAAOsB,CAAC;IAAE;IAC5D,OAAO,KAAK,CAAC;EACd,CAAC;EAED;EACAP,sBAAsB,EAAE5B,GAAG,CAACqC,oBAAoB;EAEhD;EACAC,OAAO,EAAE/F,MAAM,CAACgG,OAAO,IAAI,SAASD,OAAOA,CAACzB,QAAQ,EAAE;IACrD,OAAOhC,KAAK,CAACgC,QAAQ,CAAC,KAAK,gBAAgB;EAC5C,CAAC;EAED;EACA;;EAEA;EACA2B,aAAa,EAAE,SAASA,aAAaA,CAAC3B,QAAQ,EAAE;IAC/C,OAAO,OAAOA,QAAQ,KAAK,UAAU,IAAI,CAAC,CAACA,QAAQ,CAAChD,SAAS,CAAC,CAAC;EAChE,CAAC;;EAED;EACA4E,YAAY,EAAE3D,MAAM,CAAC4D,iBAAiB,GACnC,SAASD,YAAYA,CAACE,GAAG,EAAE;IAC5B,IAAIrF,WAAW,CAACqF,GAAG,CAAC,EAAE;MACrB,OAAO,KAAK;IACb;IACA,OAAOnD,aAAa,CAACmD,GAAG,CAAC;EAC1B,CAAC,GACC,SAASlD,YAAYA,CAACkD,GAAG,EAAE;IAAE,OAAO,IAAI;EAAE,CAAC;EAAE;;EAEhD;EACAC,SAAS,EAAE,SAASA,SAASA,CAAC/B,QAAQ,EAAE;IACvC,IAAI,OAAOA,QAAQ,KAAK,QAAQ,IAAI/D,MAAM,CAAC+D,QAAQ,CAAC,IAAI,CAAC9D,SAAS,CAAC8D,QAAQ,CAAC,EAAE;MAC7E,OAAO,KAAK;IACb;IACA,IAAI1B,GAAG,GAAGD,IAAI,CAAC2B,QAAQ,CAAC;IACxB,OAAO7B,MAAM,CAACG,GAAG,CAAC,KAAKA,GAAG;EAC3B,CAAC;EAED;EACA0D,aAAa,EAAE,SAASA,aAAaA,CAAChC,QAAQ,EAAE;IAC/C,OAAO,OAAOA,QAAQ,KAAK,QAAQ,IAAI,OAAOA,QAAQ,KAAK,QAAQ;EACpE,CAAC;EAED;EACAiC,QAAQ,EAAE,SAASA,QAAQA,CAACjC,QAAQ,EAAE;IACrC,IAAI,CAACA,QAAQ,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;MAC9C,OAAO,KAAK;IACb;IACA,IAAIhE,UAAU,EAAE;MACf,IAAIkG,QAAQ,GAAGlC,QAAQ,CAAClE,OAAO,CAACqG,KAAK,CAAC;MACtC,IAAI,OAAOD,QAAQ,KAAK,WAAW,EAAE;QACpC,OAAO/C,GAAG,CAACiD,SAAS,CAACF,QAAQ,CAAC;MAC/B;IACD;IACA,OAAO9C,gBAAgB,CAACY,QAAQ,CAAC;EAClC,CAAC;EAED;EACA;;EAEA;EACAqC,aAAa,EAAE,SAASA,aAAaA,CAACC,CAAC,EAAEC,CAAC,EAAE;IAC3C,OAAQD,CAAC,KAAKC,CAAC,IAAMtG,MAAM,CAACqG,CAAC,CAAC,IAAIrG,MAAM,CAACsG,CAAC,CAAE;EAC7C,CAAC;EAED;AACD;AACA;AACA;AACA;AACA;AACA;EACCC,IAAI,EAAE,SAASA,IAAIA,CAAChD,CAAC,EAAEiD,CAAC,EAAE;IACzB;IACA,IAAI,CAAC,IAAI,CAACT,aAAa,CAACS,CAAC,CAAC,EAAE;MAC3B,MAAM,IAAIjH,UAAU,CAAC,gDAAgD,CAAC;IACvE;;IAEA;IACA,IAAIkH,CAAC,GAAG,IAAI,CAAC5B,QAAQ,CAACtB,CAAC,CAAC;;IAExB;IACA,OAAOkD,CAAC,CAACD,CAAC,CAAC;EACZ,CAAC;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCE,SAAS,EAAE,SAASA,SAASA,CAACD,CAAC,EAAED,CAAC,EAAE;IACnC;IACA,IAAI,CAAC,IAAI,CAACT,aAAa,CAACS,CAAC,CAAC,EAAE;MAC3B,MAAM,IAAIjH,UAAU,CAAC,gDAAgD,CAAC;IACvE;;IAEA;IACA,IAAIoH,IAAI,GAAG,IAAI,CAACJ,IAAI,CAACE,CAAC,EAAED,CAAC,CAAC;;IAE1B;IACA,IAAIG,IAAI,IAAI,IAAI,EAAE;MACjB,OAAO,KAAK,CAAC;IACd;;IAEA;IACA,IAAI,CAAC,IAAI,CAAChD,UAAU,CAACgD,IAAI,CAAC,EAAE;MAC3B,MAAM,IAAIpH,UAAU,CAACiH,CAAC,GAAG,mBAAmB,CAAC;IAC9C;;IAEA;IACA,OAAOG,IAAI;EACZ,CAAC;EAED;AACD;AACA;AACA;AACA;AACA;EACCC,GAAG,EAAE,SAASA,GAAGA,CAACH,CAAC,EAAED,CAAC,EAAE;IACvB;IACA,IAAI,IAAI,CAACK,IAAI,CAACJ,CAAC,CAAC,KAAK,QAAQ,EAAE;MAC9B,MAAM,IAAIlH,UAAU,CAAC,yCAAyC,CAAC;IAChE;IACA;IACA,IAAI,CAAC,IAAI,CAACwG,aAAa,CAACS,CAAC,CAAC,EAAE;MAC3B,MAAM,IAAIjH,UAAU,CAAC,gDAAgD,CAAC;IACvE;IACA;IACA,OAAOkH,CAAC,CAACD,CAAC,CAAC;EACZ,CAAC;EAEDK,IAAI,EAAE,SAASA,IAAIA,CAACR,CAAC,EAAE;IACtB,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;MAC1B,OAAO,QAAQ;IAChB;IACA,OAAOnD,GAAG,CAAC2D,IAAI,CAACR,CAAC,CAAC;EACnB,CAAC;EAED;EACAS,kBAAkB,EAAE,SAASA,kBAAkBA,CAACL,CAAC,EAAEM,kBAAkB,EAAE;IACtE,IAAI,IAAI,CAACF,IAAI,CAACJ,CAAC,CAAC,KAAK,QAAQ,EAAE;MAC9B,MAAM,IAAIlH,UAAU,CAAC,yCAAyC,CAAC;IAChE;IACA,IAAIyH,CAAC,GAAGP,CAAC,CAACQ,WAAW;IACrB,IAAI,OAAOD,CAAC,KAAK,WAAW,EAAE;MAC7B,OAAOD,kBAAkB;IAC1B;IACA,IAAI,IAAI,CAACF,IAAI,CAACG,CAAC,CAAC,KAAK,QAAQ,EAAE;MAC9B,MAAM,IAAIzH,UAAU,CAAC,gCAAgC,CAAC;IACvD;IACA,IAAI2H,CAAC,GAAGnH,UAAU,IAAIF,OAAO,CAACsH,OAAO,GAAGH,CAAC,CAACnH,OAAO,CAACsH,OAAO,CAAC,GAAG,KAAK,CAAC;IACnE,IAAID,CAAC,IAAI,IAAI,EAAE;MACd,OAAOH,kBAAkB;IAC1B;IACA,IAAI,IAAI,CAACrB,aAAa,CAACwB,CAAC,CAAC,EAAE;MAC1B,OAAOA,CAAC;IACT;IACA,MAAM,IAAI3H,UAAU,CAAC,sBAAsB,CAAC;EAC7C,CAAC;EAED;EACA6H,0BAA0B,EAAE,SAASA,0BAA0BA,CAACC,IAAI,EAAE;IACrE,IAAI,CAAC,IAAI,CAACC,oBAAoB,CAACD,IAAI,CAAC,EAAE;MACrC,MAAM,IAAI9H,UAAU,CAAC,oCAAoC,CAAC;IAC3D;IAEA,IAAI,IAAI,CAACgI,mBAAmB,CAACF,IAAI,CAAC,IAAI,IAAI,CAACG,gBAAgB,CAACH,IAAI,CAAC,EAAE;MAClE,IAAI,CAAClI,GAAG,CAACkI,IAAI,EAAE,WAAW,CAAC,EAAE;QAC5BA,IAAI,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;MAC3B;MACA,IAAI,CAAClI,GAAG,CAACkI,IAAI,EAAE,cAAc,CAAC,EAAE;QAC/BA,IAAI,CAAC,cAAc,CAAC,GAAG,KAAK;MAC7B;IACD,CAAC,MAAM;MACN,IAAI,CAAClI,GAAG,CAACkI,IAAI,EAAE,SAAS,CAAC,EAAE;QAC1BA,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;MACzB;MACA,IAAI,CAAClI,GAAG,CAACkI,IAAI,EAAE,SAAS,CAAC,EAAE;QAC1BA,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;MACzB;IACD;IACA,IAAI,CAAClI,GAAG,CAACkI,IAAI,EAAE,gBAAgB,CAAC,EAAE;MACjCA,IAAI,CAAC,gBAAgB,CAAC,GAAG,KAAK;IAC/B;IACA,IAAI,CAAClI,GAAG,CAACkI,IAAI,EAAE,kBAAkB,CAAC,EAAE;MACnCA,IAAI,CAAC,kBAAkB,CAAC,GAAG,KAAK;IACjC;IACA,OAAOA,IAAI;EACZ,CAAC;EAED;EACAI,GAAG,EAAE,SAASA,GAAGA,CAAChB,CAAC,EAAED,CAAC,EAAEjD,CAAC,EAAEmE,KAAK,EAAE;IACjC,IAAI,IAAI,CAACb,IAAI,CAACJ,CAAC,CAAC,KAAK,QAAQ,EAAE;MAC9B,MAAM,IAAIlH,UAAU,CAAC,qBAAqB,CAAC;IAC5C;IACA,IAAI,CAAC,IAAI,CAACwG,aAAa,CAACS,CAAC,CAAC,EAAE;MAC3B,MAAM,IAAIjH,UAAU,CAAC,0BAA0B,CAAC;IACjD;IACA,IAAI,IAAI,CAACsH,IAAI,CAACa,KAAK,CAAC,KAAK,SAAS,EAAE;MACnC,MAAM,IAAInI,UAAU,CAAC,yBAAyB,CAAC;IAChD;IACA,IAAImI,KAAK,EAAE;MACVjB,CAAC,CAACD,CAAC,CAAC,GAAGjD,CAAC;MACR,OAAO,IAAI;IACZ,CAAC,MAAM;MACN,IAAI;QACHkD,CAAC,CAACD,CAAC,CAAC,GAAGjD,CAAC;MACT,CAAC,CAAC,OAAOoE,CAAC,EAAE;QACX,OAAO,KAAK;MACb;IACD;EACD,CAAC;EAED;EACAC,cAAc,EAAE,SAASA,cAAcA,CAACnB,CAAC,EAAED,CAAC,EAAE;IAC7C,IAAI,IAAI,CAACK,IAAI,CAACJ,CAAC,CAAC,KAAK,QAAQ,EAAE;MAC9B,MAAM,IAAIlH,UAAU,CAAC,qBAAqB,CAAC;IAC5C;IACA,IAAI,CAAC,IAAI,CAACwG,aAAa,CAACS,CAAC,CAAC,EAAE;MAC3B,MAAM,IAAIjH,UAAU,CAAC,0BAA0B,CAAC;IACjD;IACA,OAAOJ,GAAG,CAACsH,CAAC,EAAED,CAAC,CAAC;EACjB,CAAC;EAED;EACAqB,WAAW,EAAE,SAASA,WAAWA,CAACpB,CAAC,EAAED,CAAC,EAAE;IACvC,IAAI,IAAI,CAACK,IAAI,CAACJ,CAAC,CAAC,KAAK,QAAQ,EAAE;MAC9B,MAAM,IAAIlH,UAAU,CAAC,qBAAqB,CAAC;IAC5C;IACA,IAAI,CAAC,IAAI,CAACwG,aAAa,CAACS,CAAC,CAAC,EAAE;MAC3B,MAAM,IAAIjH,UAAU,CAAC,0BAA0B,CAAC;IACjD;IACA,OAAOiH,CAAC,IAAIC,CAAC;EACd,CAAC;EAED;EACAqB,kBAAkB,EAAE,SAASA,kBAAkBA,CAACrB,CAAC,EAAE;IAClD,IAAI,IAAI,CAACI,IAAI,CAACJ,CAAC,CAAC,KAAK,QAAQ,EAAE;MAC9B,OAAO,KAAK;IACb;IACA,IAAI1G,UAAU,IAAI,OAAOF,OAAO,CAACkI,kBAAkB,KAAK,QAAQ,EAAE;MACjE,IAAIC,UAAU,GAAG,IAAI,CAACpB,GAAG,CAACH,CAAC,EAAEwB,MAAM,CAACF,kBAAkB,CAAC;MACvD,IAAI,OAAOC,UAAU,KAAK,WAAW,EAAE;QACtC,OAAO,IAAI,CAAC7B,SAAS,CAAC6B,UAAU,CAAC;MAClC;IACD;IACA,OAAO,IAAI,CAACxC,OAAO,CAACiB,CAAC,CAAC;EACvB,CAAC;EAED;EACAyB,MAAM,EAAE,SAASA,MAAMA,CAACzB,CAAC,EAAED,CAAC,EAAE;IAC7B,IAAI,CAAC,IAAI,CAACT,aAAa,CAACS,CAAC,CAAC,EAAE;MAC3B,MAAM,IAAIjH,UAAU,CAAC,0BAA0B,CAAC;IACjD;IACA,IAAI4I,aAAa,GAAGvH,UAAU,CAAC6C,SAAS,EAAE,CAAC,CAAC;IAC5C,IAAIkD,IAAI,GAAG,IAAI,CAACJ,IAAI,CAACE,CAAC,EAAED,CAAC,CAAC;IAC1B,OAAO,IAAI,CAACnD,IAAI,CAACsD,IAAI,EAAEF,CAAC,EAAE0B,aAAa,CAAC;EACzC,CAAC;EAED;EACAC,WAAW,EAAE,SAASA,WAAWA,CAACvC,GAAG,EAAEwC,MAAM,EAAE;IAC9C,IAAI,CAACtI,UAAU,EAAE;MAChB,MAAM,IAAIuI,WAAW,CAAC,oDAAoD,CAAC;IAC5E;IAEA,IAAIC,YAAY,GAAGF,MAAM;IACzB,IAAI5E,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;MACzB6E,YAAY,GAAG,IAAI,CAAC7B,SAAS,CAACb,GAAG,EAAEhG,OAAO,CAAC2I,QAAQ,CAAC;IACrD;IACA,IAAIA,QAAQ,GAAG,IAAI,CAACnF,IAAI,CAACkF,YAAY,EAAE1C,GAAG,CAAC;IAC3C,IAAI,IAAI,CAACgB,IAAI,CAAC2B,QAAQ,CAAC,KAAK,QAAQ,EAAE;MACrC,MAAM,IAAIjJ,UAAU,CAAC,gCAAgC,CAAC;IACvD;IAEA,OAAOiJ,QAAQ;EAChB,CAAC;EAED;EACAC,YAAY,EAAE,SAASA,YAAYA,CAACD,QAAQ,EAAEvF,KAAK,EAAE;IACpD,IAAIyF,MAAM,GAAG,IAAI,CAACR,MAAM,CAACM,QAAQ,EAAE,MAAM,EAAE/E,SAAS,CAACC,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,CAACT,KAAK,CAAC,CAAC;IAC/E,IAAI,IAAI,CAAC4D,IAAI,CAAC6B,MAAM,CAAC,KAAK,QAAQ,EAAE;MACnC,MAAM,IAAInJ,UAAU,CAAC,qCAAqC,CAAC;IAC5D;IACA,OAAOmJ,MAAM;EACd,CAAC;EAED;EACAC,gBAAgB,EAAE,SAASA,gBAAgBA,CAACC,UAAU,EAAE;IACvD,IAAI,IAAI,CAAC/B,IAAI,CAAC+B,UAAU,CAAC,KAAK,QAAQ,EAAE;MACvC,MAAM,IAAIrJ,UAAU,CAAC,kDAAkD,CAAC;IACzE;IACA,OAAO,IAAI,CAAC4G,SAAS,CAAC,IAAI,CAACS,GAAG,CAACgC,UAAU,EAAE,MAAM,CAAC,CAAC;EACpD,CAAC;EAED;EACAC,aAAa,EAAE,SAASA,aAAaA,CAACD,UAAU,EAAE;IACjD,IAAI,IAAI,CAAC/B,IAAI,CAAC+B,UAAU,CAAC,KAAK,QAAQ,EAAE;MACvC,MAAM,IAAIrJ,UAAU,CAAC,kDAAkD,CAAC;IACzE;IACA,OAAO,IAAI,CAACqH,GAAG,CAACgC,UAAU,EAAE,OAAO,CAAC;EACrC,CAAC;EAED;EACAE,YAAY,EAAE,SAASA,YAAYA,CAACN,QAAQ,EAAE;IAC7C,IAAIE,MAAM,GAAG,IAAI,CAACD,YAAY,CAACD,QAAQ,CAAC;IACxC,IAAIO,IAAI,GAAG,IAAI,CAACJ,gBAAgB,CAACD,MAAM,CAAC;IACxC,OAAOK,IAAI,KAAK,IAAI,GAAG,KAAK,GAAGL,MAAM;EACtC,CAAC;EAED;EACAM,aAAa,EAAE,SAASA,aAAaA,CAACR,QAAQ,EAAES,UAAU,EAAE;IAC3D,IAAI,IAAI,CAACpC,IAAI,CAAC2B,QAAQ,CAAC,KAAK,QAAQ,EAAE;MACrC,MAAM,IAAIjJ,UAAU,CAAC,gDAAgD,CAAC;IACvE;IACA,IAAI,CAAC,IAAI,CAACoE,UAAU,CAACsF,UAAU,CAAC,EAAE;MACjC,MAAM,IAAI1J,UAAU,CAAC,qEAAqE,CAAC;IAC5F;IACA,IAAI2J,eAAe,GAAGD,UAAU;IAEhC,IAAIE,cAAc,GAAG,IAAI,CAACzC,SAAS,CAAC8B,QAAQ,EAAE,QAAQ,CAAC;IAEvD,IAAI,OAAOW,cAAc,KAAK,WAAW,EAAE;MAC1C,OAAOD,eAAe,EAAE;IACzB;IAEA,IAAIE,gBAAgB;IACpB,IAAI;MACH,IAAIC,WAAW,GAAG,IAAI,CAAChG,IAAI,CAAC8F,cAAc,EAAEX,QAAQ,EAAE,EAAE,CAAC;IAC1D,CAAC,CAAC,OAAOb,CAAC,EAAE;MACX;;MAEA;MACAyB,gBAAgB,GAAGF,eAAe,EAAE;MACpCA,eAAe,GAAG,IAAI,CAAC,CAAC;;MAExB;MACA,MAAMvB,CAAC;IACR;IACAyB,gBAAgB,GAAGF,eAAe,EAAE,CAAC,CAAC;IACtCA,eAAe,GAAG,IAAI,CAAC,CAAC;;IAExB,IAAI,IAAI,CAACrC,IAAI,CAACwC,WAAW,CAAC,KAAK,QAAQ,EAAE;MACxC,MAAM,IAAI9J,UAAU,CAAC,wCAAwC,CAAC;IAC/D;IAEA,OAAO6J,gBAAgB;EACxB,CAAC;EAED;EACAE,sBAAsB,EAAE,SAASA,sBAAsBA,CAACrG,KAAK,EAAE8F,IAAI,EAAE;IACpE,IAAI,IAAI,CAAClC,IAAI,CAACkC,IAAI,CAAC,KAAK,SAAS,EAAE;MAClC,MAAM,IAAIxJ,UAAU,CAAC,6CAA6C,CAAC;IACpE;IACA,OAAO;MACN0D,KAAK,EAAEA,KAAK;MACZ8F,IAAI,EAAEA;IACP,CAAC;EACF,CAAC;EAED;EACAQ,UAAU,EAAE,SAASA,UAAUA,CAACC,CAAC,EAAEtC,CAAC,EAAE;IACrC,IAAI,IAAI,CAACL,IAAI,CAAC2C,CAAC,CAAC,KAAK,QAAQ,EAAE;MAC9B,MAAM,IAAIjK,UAAU,CAAC,qBAAqB,CAAC;IAC5C;IACA,IAAI,IAAI,CAACsH,IAAI,CAACK,CAAC,CAAC,KAAK,QAAQ,EAAE;MAC9B,MAAM,IAAI3H,UAAU,CAAC,oBAAoB,CAAC;IAC3C;IACA,IAAI+B,IAAI,GAAG,IAAI,CAACsF,GAAG,CAAC4C,CAAC,EAAE,MAAM,CAAC;IAC9B,IAAI,IAAI,CAAC7F,UAAU,CAACrC,IAAI,CAAC,EAAE;MAC1B,IAAIoH,MAAM,GAAG,IAAI,CAACrF,IAAI,CAAC/B,IAAI,EAAEkI,CAAC,EAAE,CAACtC,CAAC,CAAC,CAAC;MACpC,IAAIwB,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC7B,IAAI,CAAC6B,MAAM,CAAC,KAAK,QAAQ,EAAE;QACtD,OAAOA,MAAM;MACd;MACA,MAAM,IAAInJ,UAAU,CAAC,+CAA+C,CAAC;IACtE;IACA,OAAO8B,SAAS,CAACmI,CAAC,EAAEtC,CAAC,CAAC;EACvB,CAAC;EAED;EACAuC,kBAAkB,EAAE,SAASA,kBAAkBA,CAACC,aAAa,EAAEhG,MAAM,EAAE;IACtE,IAAI,CAAC,IAAI,CAACoC,SAAS,CAACpC,MAAM,CAAC,IAAIA,MAAM,GAAG,CAAC,EAAE;MAC1C,MAAM,IAAInE,UAAU,CAAC,kDAAkD,CAAC;IACzE;IACA,IAAI2F,GAAG,GAAGxB,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGA,MAAM;IACnC,IAAIsD,CAAC;IACL,IAAIvB,OAAO,GAAG,IAAI,CAACD,OAAO,CAACkE,aAAa,CAAC;IACzC,IAAIjE,OAAO,EAAE;MACZuB,CAAC,GAAG,IAAI,CAACJ,GAAG,CAAC8C,aAAa,EAAE,aAAa,CAAC;MAC1C;MACA;MACA;MACA;MACA;MACA,IAAI,IAAI,CAAC7C,IAAI,CAACG,CAAC,CAAC,KAAK,QAAQ,IAAIjH,UAAU,IAAIF,OAAO,CAACsH,OAAO,EAAE;QAC/DH,CAAC,GAAG,IAAI,CAACJ,GAAG,CAACI,CAAC,EAAEnH,OAAO,CAACsH,OAAO,CAAC;QAChC,IAAIH,CAAC,KAAK,IAAI,EAAE;UACfA,CAAC,GAAG,KAAK,CAAC;QACX;MACD;IACD;IACA,IAAI,OAAOA,CAAC,KAAK,WAAW,EAAE;MAC7B,OAAOvH,MAAM,CAACyF,GAAG,CAAC;IACnB;IACA,IAAI,CAAC,IAAI,CAACQ,aAAa,CAACsB,CAAC,CAAC,EAAE;MAC3B,MAAM,IAAIzH,UAAU,CAAC,yBAAyB,CAAC;IAChD;IACA,OAAO,IAAIyH,CAAC,CAAC9B,GAAG,CAAC,CAAC,CAAC;EACpB,CAAC;;EAEDyE,kBAAkB,EAAE,SAASA,kBAAkBA,CAAClD,CAAC,EAAED,CAAC,EAAEjD,CAAC,EAAE;IACxD,IAAI,IAAI,CAACsD,IAAI,CAACJ,CAAC,CAAC,KAAK,QAAQ,EAAE;MAC9B,MAAM,IAAIlH,UAAU,CAAC,yCAAyC,CAAC;IAChE;IACA,IAAI,CAAC,IAAI,CAACwG,aAAa,CAACS,CAAC,CAAC,EAAE;MAC3B,MAAM,IAAIjH,UAAU,CAAC,gDAAgD,CAAC;IACvE;IACA,IAAIqK,OAAO,GAAGpH,KAAK,CAACiE,CAAC,EAAED,CAAC,CAAC;IACzB,IAAIqD,UAAU,GAAGD,OAAO,IAAK,OAAOlH,aAAa,KAAK,UAAU,IAAIA,aAAa,CAAC+D,CAAC,CAAE;IACrF,IAAIqD,SAAS,GAAGF,OAAO,KAAK,CAACA,OAAO,CAACG,QAAQ,IAAI,CAACH,OAAO,CAACI,YAAY,CAAC;IACvE,IAAIF,SAAS,IAAI,CAACD,UAAU,EAAE;MAC7B,OAAO,KAAK;IACb;IACA,IAAII,OAAO,GAAG;MACbD,YAAY,EAAE,IAAI;MAClBE,UAAU,EAAE,IAAI;MAChBjH,KAAK,EAAEM,CAAC;MACRwG,QAAQ,EAAE;IACX,CAAC;IACD/H,MAAM,CAACmI,cAAc,CAAC1D,CAAC,EAAED,CAAC,EAAEyD,OAAO,CAAC;IACpC,OAAO,IAAI;EACZ,CAAC;EAED;EACAG,yBAAyB,EAAE,SAASA,yBAAyBA,CAAC3D,CAAC,EAAED,CAAC,EAAEjD,CAAC,EAAE;IACtE,IAAI,IAAI,CAACsD,IAAI,CAACJ,CAAC,CAAC,KAAK,QAAQ,EAAE;MAC9B,MAAM,IAAIlH,UAAU,CAAC,yCAAyC,CAAC;IAChE;IACA,IAAI,CAAC,IAAI,CAACwG,aAAa,CAACS,CAAC,CAAC,EAAE;MAC3B,MAAM,IAAIjH,UAAU,CAAC,gDAAgD,CAAC;IACvE;IACA,IAAI8K,OAAO,GAAG,IAAI,CAACV,kBAAkB,CAAClD,CAAC,EAAED,CAAC,EAAEjD,CAAC,CAAC;IAC9C,IAAI,CAAC8G,OAAO,EAAE;MACb,MAAM,IAAI9K,UAAU,CAAC,gCAAgC,CAAC;IACvD;IACA,OAAO8K,OAAO;EACf,CAAC;EAED;EACAC,YAAY,EAAE,SAASA,YAAYA,CAACC,KAAK,EAAEC,iBAAiB,EAAE;IAC7D,IAAID,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC1D,IAAI,CAAC0D,KAAK,CAAC,KAAK,QAAQ,EAAE;MACpD,MAAM,IAAIhL,UAAU,CAAC,mDAAmD,CAAC;IAC1E;IACA,IAAIkL,KAAK,GAAGhH,SAAS,CAACC,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG8G,iBAAiB;IACzD,IAAIC,KAAK,CAAC/G,MAAM,GAAG,CAAC,EAAE;MACrB,MAAM,IAAIlE,YAAY,CAAC,iDAAiD,CAAC;IAC1E;IAEA,IAAI+K,KAAK,KAAK,IAAI,IAAI,CAACjI,aAAa,EAAE;MACrC,MAAM,IAAI9C,YAAY,CAAC,iEAAiE,CAAC;IAC1F;IAEA,OAAO8C,aAAa,CAACiI,KAAK,CAAC;EAC5B,CAAC;EAED;EACAG,kBAAkB,EAAE,SAASA,kBAAkBA,CAACxD,CAAC,EAAEyD,KAAK,EAAEC,OAAO,EAAE;IAClE,IAAI,IAAI,CAAC/D,IAAI,CAACK,CAAC,CAAC,KAAK,QAAQ,EAAE;MAC9B,MAAM,IAAI3H,UAAU,CAAC,oBAAoB,CAAC;IAC3C;IACA,IAAI,CAAC,IAAI,CAACuG,SAAS,CAAC6E,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAGzK,gBAAgB,EAAE;MACpE,MAAM,IAAIX,UAAU,CAAC,+DAA+D,CAAC;IACtF;IACA,IAAI,IAAI,CAACsH,IAAI,CAAC+D,OAAO,CAAC,KAAK,SAAS,EAAE;MACrC,MAAM,IAAIrL,UAAU,CAAC,6CAA6C,CAAC;IACpE;IACA,IAAI,CAACqL,OAAO,EAAE;MACb,OAAOD,KAAK,GAAG,CAAC;IACjB;IACA,IAAIjH,MAAM,GAAGwD,CAAC,CAACxD,MAAM;IACrB,IAAKiH,KAAK,GAAG,CAAC,IAAKjH,MAAM,EAAE;MAC1B,OAAOiH,KAAK,GAAG,CAAC;IACjB;IAEA,IAAIE,KAAK,GAAGhJ,WAAW,CAACqF,CAAC,EAAEyD,KAAK,CAAC;IACjC,IAAIE,KAAK,GAAG,MAAM,IAAIA,KAAK,GAAG,MAAM,EAAE;MACrC,OAAOF,KAAK,GAAG,CAAC;IACjB;IAEA,IAAIG,MAAM,GAAGjJ,WAAW,CAACqF,CAAC,EAAEyD,KAAK,GAAG,CAAC,CAAC;IACtC,IAAIG,MAAM,GAAG,MAAM,IAAIA,MAAM,GAAG,MAAM,EAAE;MACvC,OAAOH,KAAK,GAAG,CAAC;IACjB;IAEA,OAAOA,KAAK,GAAG,CAAC;EACjB;AACD,CAAC,CAAC;AAEF,OAAOvH,GAAG,CAACmC,oBAAoB,CAAC,CAAC;;AAEjCwF,MAAM,CAACC,OAAO,GAAG5H,GAAG"},"metadata":{},"sourceType":"script","externalDependencies":[]}