{"ast":null,"code":"'use strict';\n\nconst LEVELS = ['notice', 'error', 'warn', 'info', 'verbose', 'http', 'silly', 'pause', 'resume'];\nconst logger = {};\nfor (const level of LEVELS) {\n  logger[level] = log(level);\n}\nmodule.exports = logger;\nfunction log(level) {\n  return function (category) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return process.emit('log', level, category, ...args);\n  };\n}","map":{"version":3,"names":["LEVELS","logger","level","log","module","exports","category","_len","arguments","length","args","Array","_key","process","emit"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/pacote/lib/util/proclog.js"],"sourcesContent":["'use strict'\n\nconst LEVELS = [\n  'notice',\n  'error',\n  'warn',\n  'info',\n  'verbose',\n  'http',\n  'silly',\n  'pause',\n  'resume'\n]\n\nconst logger = {}\nfor (const level of LEVELS) {\n  logger[level] = log(level)\n}\nmodule.exports = logger\n\nfunction log (level) {\n  return (category, ...args) => process.emit('log', level, category, ...args)\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAG,CACb,QAAQ,EACR,OAAO,EACP,MAAM,EACN,MAAM,EACN,SAAS,EACT,MAAM,EACN,OAAO,EACP,OAAO,EACP,QAAQ,CACT;AAED,MAAMC,MAAM,GAAG,CAAC,CAAC;AACjB,KAAK,MAAMC,KAAK,IAAIF,MAAM,EAAE;EAC1BC,MAAM,CAACC,KAAK,CAAC,GAAGC,GAAG,CAACD,KAAK,CAAC;AAC5B;AACAE,MAAM,CAACC,OAAO,GAAGJ,MAAM;AAEvB,SAASE,GAAGA,CAAED,KAAK,EAAE;EACnB,OAAO,UAACI,QAAQ;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAKC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAA,OAAKC,OAAO,CAACC,IAAI,CAAC,KAAK,EAAEZ,KAAK,EAAEI,QAAQ,EAAE,GAAGI,IAAI,CAAC;EAAA;AAC7E"},"metadata":{},"sourceType":"script","externalDependencies":[]}