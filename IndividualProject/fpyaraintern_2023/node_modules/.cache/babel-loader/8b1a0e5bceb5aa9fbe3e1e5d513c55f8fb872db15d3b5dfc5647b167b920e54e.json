{"ast":null,"code":"'use strict';\n\nmodule.exports = npa;\nmodule.exports.resolve = resolve;\nmodule.exports.Result = Result;\nlet url;\nlet HostedGit;\nlet semver;\nlet path_;\nfunction path() {\n  if (!path_) path_ = require('path');\n  return path_;\n}\nlet validatePackageName;\nlet osenv;\nconst isWindows = process.platform === 'win32' || global.FAKE_WINDOWS;\nconst hasSlashes = isWindows ? /\\\\|[/]/ : /[/]/;\nconst isURL = /^(?:git[+])?[a-z]+:/i;\nconst isFilename = /[.](?:tgz|tar.gz|tar)$/i;\nfunction npa(arg, where) {\n  let name;\n  let spec;\n  if (typeof arg === 'object') {\n    if (arg instanceof Result && (!where || where === arg.where)) {\n      return arg;\n    } else if (arg.name && arg.rawSpec) {\n      return npa.resolve(arg.name, arg.rawSpec, where || arg.where);\n    } else {\n      return npa(arg.raw, where || arg.where);\n    }\n  }\n  const nameEndsAt = arg[0] === '@' ? arg.slice(1).indexOf('@') + 1 : arg.indexOf('@');\n  const namePart = nameEndsAt > 0 ? arg.slice(0, nameEndsAt) : arg;\n  if (isURL.test(arg)) {\n    spec = arg;\n  } else if (namePart[0] !== '@' && (hasSlashes.test(namePart) || isFilename.test(namePart))) {\n    spec = arg;\n  } else if (nameEndsAt > 0) {\n    name = namePart;\n    spec = arg.slice(nameEndsAt + 1);\n  } else {\n    if (!validatePackageName) validatePackageName = require('validate-npm-package-name');\n    const valid = validatePackageName(arg);\n    if (valid.validForOldPackages) {\n      name = arg;\n    } else {\n      spec = arg;\n    }\n  }\n  return resolve(name, spec, where, arg);\n}\nconst isFilespec = isWindows ? /^(?:[.]|~[/]|[/\\\\]|[a-zA-Z]:)/ : /^(?:[.]|~[/]|[/]|[a-zA-Z]:)/;\nfunction resolve(name, spec, where, arg) {\n  const res = new Result({\n    raw: arg,\n    name: name,\n    rawSpec: spec,\n    fromArgument: arg != null\n  });\n  if (name) res.setName(name);\n  if (spec && (isFilespec.test(spec) || /^file:/i.test(spec))) {\n    return fromFile(res, where);\n  } else if (spec && /^npm:/i.test(spec)) {\n    return fromAlias(res, where);\n  }\n  if (!HostedGit) HostedGit = require('hosted-git-info');\n  const hosted = HostedGit.fromUrl(spec, {\n    noGitPlus: true,\n    noCommittish: true\n  });\n  if (hosted) {\n    return fromHostedGit(res, hosted);\n  } else if (spec && isURL.test(spec)) {\n    return fromURL(res);\n  } else if (spec && (hasSlashes.test(spec) || isFilename.test(spec))) {\n    return fromFile(res, where);\n  } else {\n    return fromRegistry(res);\n  }\n}\nfunction invalidPackageName(name, valid) {\n  const err = new Error(`Invalid package name \"${name}\": ${valid.errors.join('; ')}`);\n  err.code = 'EINVALIDPACKAGENAME';\n  return err;\n}\nfunction invalidTagName(name) {\n  const err = new Error(`Invalid tag name \"${name}\": Tags may not have any characters that encodeURIComponent encodes.`);\n  err.code = 'EINVALIDTAGNAME';\n  return err;\n}\nfunction Result(opts) {\n  this.type = opts.type;\n  this.registry = opts.registry;\n  this.where = opts.where;\n  if (opts.raw == null) {\n    this.raw = opts.name ? opts.name + '@' + opts.rawSpec : opts.rawSpec;\n  } else {\n    this.raw = opts.raw;\n  }\n  this.name = undefined;\n  this.escapedName = undefined;\n  this.scope = undefined;\n  this.rawSpec = opts.rawSpec == null ? '' : opts.rawSpec;\n  this.saveSpec = opts.saveSpec;\n  this.fetchSpec = opts.fetchSpec;\n  if (opts.name) this.setName(opts.name);\n  this.gitRange = opts.gitRange;\n  this.gitCommittish = opts.gitCommittish;\n  this.hosted = opts.hosted;\n}\nResult.prototype.setName = function (name) {\n  if (!validatePackageName) validatePackageName = require('validate-npm-package-name');\n  const valid = validatePackageName(name);\n  if (!valid.validForOldPackages) {\n    throw invalidPackageName(name, valid);\n  }\n  this.name = name;\n  this.scope = name[0] === '@' ? name.slice(0, name.indexOf('/')) : undefined;\n  // scoped packages in couch must have slash url-encoded, e.g. @foo%2Fbar\n  this.escapedName = name.replace('/', '%2f');\n  return this;\n};\nResult.prototype.toString = function () {\n  const full = [];\n  if (this.name != null && this.name !== '') full.push(this.name);\n  const spec = this.saveSpec || this.fetchSpec || this.rawSpec;\n  if (spec != null && spec !== '') full.push(spec);\n  return full.length ? full.join('@') : this.raw;\n};\nResult.prototype.toJSON = function () {\n  const result = Object.assign({}, this);\n  delete result.hosted;\n  return result;\n};\nfunction setGitCommittish(res, committish) {\n  if (committish != null && committish.length >= 7 && committish.slice(0, 7) === 'semver:') {\n    res.gitRange = decodeURIComponent(committish.slice(7));\n    res.gitCommittish = null;\n  } else {\n    res.gitCommittish = committish === '' ? null : committish;\n  }\n  return res;\n}\nconst isAbsolutePath = /^[/]|^[A-Za-z]:/;\nfunction resolvePath(where, spec) {\n  if (isAbsolutePath.test(spec)) return spec;\n  return path().resolve(where, spec);\n}\nfunction isAbsolute(dir) {\n  if (dir[0] === '/') return true;\n  if (/^[A-Za-z]:/.test(dir)) return true;\n  return false;\n}\nfunction fromFile(res, where) {\n  if (!where) where = process.cwd();\n  res.type = isFilename.test(res.rawSpec) ? 'file' : 'directory';\n  res.where = where;\n  const spec = res.rawSpec.replace(/\\\\/g, '/').replace(/^file:[/]*([A-Za-z]:)/, '$1') // drive name paths on windows\n  .replace(/^file:(?:[/]*([~./]))?/, '$1');\n  if (/^~[/]/.test(spec)) {\n    // this is needed for windows and for file:~/foo/bar\n    if (!osenv) osenv = require('osenv');\n    res.fetchSpec = resolvePath(osenv.home(), spec.slice(2));\n    res.saveSpec = 'file:' + spec;\n  } else {\n    res.fetchSpec = resolvePath(where, spec);\n    if (isAbsolute(spec)) {\n      res.saveSpec = 'file:' + spec;\n    } else {\n      res.saveSpec = 'file:' + path().relative(where, res.fetchSpec);\n    }\n  }\n  return res;\n}\nfunction fromHostedGit(res, hosted) {\n  res.type = 'git';\n  res.hosted = hosted;\n  res.saveSpec = hosted.toString({\n    noGitPlus: false,\n    noCommittish: false\n  });\n  res.fetchSpec = hosted.getDefaultRepresentation() === 'shortcut' ? null : hosted.toString();\n  return setGitCommittish(res, hosted.committish);\n}\nfunction unsupportedURLType(protocol, spec) {\n  const err = new Error(`Unsupported URL Type \"${protocol}\": ${spec}`);\n  err.code = 'EUNSUPPORTEDPROTOCOL';\n  return err;\n}\nfunction matchGitScp(spec) {\n  // git ssh specifiers are overloaded to also use scp-style git\n  // specifiers, so we have to parse those out and treat them special.\n  // They are NOT true URIs, so we can't hand them to `url.parse`.\n  //\n  // This regex looks for things that look like:\n  // git+ssh://git@my.custom.git.com:username/project.git#deadbeef\n  //\n  // ...and various combinations. The username in the beginning is *required*.\n  const matched = spec.match(/^git\\+ssh:\\/\\/([^:#]+:[^#]+(?:\\.git)?)(?:#(.*))?$/i);\n  return matched && !matched[1].match(/:[0-9]+\\/?.*$/i) && {\n    fetchSpec: matched[1],\n    gitCommittish: matched[2] == null ? null : matched[2]\n  };\n}\nfunction fromURL(res) {\n  if (!url) url = require('url');\n  const urlparse = url.parse(res.rawSpec);\n  res.saveSpec = res.rawSpec;\n  // check the protocol, and then see if it's git or not\n  switch (urlparse.protocol) {\n    case 'git:':\n    case 'git+http:':\n    case 'git+https:':\n    case 'git+rsync:':\n    case 'git+ftp:':\n    case 'git+file:':\n    case 'git+ssh:':\n      res.type = 'git';\n      const match = urlparse.protocol === 'git+ssh:' && matchGitScp(res.rawSpec);\n      if (match) {\n        setGitCommittish(res, match.gitCommittish);\n        res.fetchSpec = match.fetchSpec;\n      } else {\n        setGitCommittish(res, urlparse.hash != null ? urlparse.hash.slice(1) : '');\n        urlparse.protocol = urlparse.protocol.replace(/^git[+]/, '');\n        if (urlparse.protocol === 'file:' && /^git\\+file:\\/\\/[a-z]:/i.test(res.rawSpec)) {\n          // keep the drive letter : on windows file paths\n          urlparse.host += ':';\n          urlparse.hostname += ':';\n        }\n        delete urlparse.hash;\n        res.fetchSpec = url.format(urlparse);\n      }\n      break;\n    case 'http:':\n    case 'https:':\n      res.type = 'remote';\n      res.fetchSpec = res.saveSpec;\n      break;\n    default:\n      throw unsupportedURLType(urlparse.protocol, res.rawSpec);\n  }\n  return res;\n}\nfunction fromAlias(res, where) {\n  const subSpec = npa(res.rawSpec.substr(4), where);\n  if (subSpec.type === 'alias') {\n    throw new Error('nested aliases not supported');\n  }\n  if (!subSpec.registry) {\n    throw new Error('aliases only work for registry deps');\n  }\n  res.subSpec = subSpec;\n  res.registry = true;\n  res.type = 'alias';\n  res.saveSpec = null;\n  res.fetchSpec = null;\n  return res;\n}\nfunction fromRegistry(res) {\n  res.registry = true;\n  const spec = res.rawSpec === '' ? 'latest' : res.rawSpec;\n  // no save spec for registry components as we save based on the fetched\n  // version, not on the argument so this can't compute that.\n  res.saveSpec = null;\n  res.fetchSpec = spec;\n  if (!semver) semver = require('semver');\n  const version = semver.valid(spec, true);\n  const range = semver.validRange(spec, true);\n  if (version) {\n    res.type = 'version';\n  } else if (range) {\n    res.type = 'range';\n  } else {\n    if (encodeURIComponent(spec) !== spec) {\n      throw invalidTagName(spec);\n    }\n    res.type = 'tag';\n  }\n  return res;\n}","map":{"version":3,"names":["module","exports","npa","resolve","Result","url","HostedGit","semver","path_","path","require","validatePackageName","osenv","isWindows","process","platform","global","FAKE_WINDOWS","hasSlashes","isURL","isFilename","arg","where","name","spec","rawSpec","raw","nameEndsAt","slice","indexOf","namePart","test","valid","validForOldPackages","isFilespec","res","fromArgument","setName","fromFile","fromAlias","hosted","fromUrl","noGitPlus","noCommittish","fromHostedGit","fromURL","fromRegistry","invalidPackageName","err","Error","errors","join","code","invalidTagName","opts","type","registry","undefined","escapedName","scope","saveSpec","fetchSpec","gitRange","gitCommittish","prototype","replace","toString","full","push","length","toJSON","result","Object","assign","setGitCommittish","committish","decodeURIComponent","isAbsolutePath","resolvePath","isAbsolute","dir","cwd","home","relative","getDefaultRepresentation","unsupportedURLType","protocol","matchGitScp","matched","match","urlparse","parse","hash","host","hostname","format","subSpec","substr","version","range","validRange","encodeURIComponent"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/npm-package-arg/npa.js"],"sourcesContent":["'use strict'\nmodule.exports = npa\nmodule.exports.resolve = resolve\nmodule.exports.Result = Result\n\nlet url\nlet HostedGit\nlet semver\nlet path_\nfunction path () {\n  if (!path_) path_ = require('path')\n  return path_\n}\nlet validatePackageName\nlet osenv\n\nconst isWindows = process.platform === 'win32' || global.FAKE_WINDOWS\nconst hasSlashes = isWindows ? /\\\\|[/]/ : /[/]/\nconst isURL = /^(?:git[+])?[a-z]+:/i\nconst isFilename = /[.](?:tgz|tar.gz|tar)$/i\n\nfunction npa (arg, where) {\n  let name\n  let spec\n  if (typeof arg === 'object') {\n    if (arg instanceof Result && (!where || where === arg.where)) {\n      return arg\n    } else if (arg.name && arg.rawSpec) {\n      return npa.resolve(arg.name, arg.rawSpec, where || arg.where)\n    } else {\n      return npa(arg.raw, where || arg.where)\n    }\n  }\n  const nameEndsAt = arg[0] === '@' ? arg.slice(1).indexOf('@') + 1 : arg.indexOf('@')\n  const namePart = nameEndsAt > 0 ? arg.slice(0, nameEndsAt) : arg\n  if (isURL.test(arg)) {\n    spec = arg\n  } else if (namePart[0] !== '@' && (hasSlashes.test(namePart) || isFilename.test(namePart))) {\n    spec = arg\n  } else if (nameEndsAt > 0) {\n    name = namePart\n    spec = arg.slice(nameEndsAt + 1)\n  } else {\n    if (!validatePackageName) validatePackageName = require('validate-npm-package-name')\n    const valid = validatePackageName(arg)\n    if (valid.validForOldPackages) {\n      name = arg\n    } else {\n      spec = arg\n    }\n  }\n  return resolve(name, spec, where, arg)\n}\n\nconst isFilespec = isWindows ? /^(?:[.]|~[/]|[/\\\\]|[a-zA-Z]:)/ : /^(?:[.]|~[/]|[/]|[a-zA-Z]:)/\n\nfunction resolve (name, spec, where, arg) {\n  const res = new Result({\n    raw: arg,\n    name: name,\n    rawSpec: spec,\n    fromArgument: arg != null\n  })\n\n  if (name) res.setName(name)\n\n  if (spec && (isFilespec.test(spec) || /^file:/i.test(spec))) {\n    return fromFile(res, where)\n  } else if (spec && /^npm:/i.test(spec)) {\n    return fromAlias(res, where)\n  }\n  if (!HostedGit) HostedGit = require('hosted-git-info')\n  const hosted = HostedGit.fromUrl(spec, {noGitPlus: true, noCommittish: true})\n  if (hosted) {\n    return fromHostedGit(res, hosted)\n  } else if (spec && isURL.test(spec)) {\n    return fromURL(res)\n  } else if (spec && (hasSlashes.test(spec) || isFilename.test(spec))) {\n    return fromFile(res, where)\n  } else {\n    return fromRegistry(res)\n  }\n}\n\nfunction invalidPackageName (name, valid) {\n  const err = new Error(`Invalid package name \"${name}\": ${valid.errors.join('; ')}`)\n  err.code = 'EINVALIDPACKAGENAME'\n  return err\n}\nfunction invalidTagName (name) {\n  const err = new Error(`Invalid tag name \"${name}\": Tags may not have any characters that encodeURIComponent encodes.`)\n  err.code = 'EINVALIDTAGNAME'\n  return err\n}\n\nfunction Result (opts) {\n  this.type = opts.type\n  this.registry = opts.registry\n  this.where = opts.where\n  if (opts.raw == null) {\n    this.raw = opts.name ? opts.name + '@' + opts.rawSpec : opts.rawSpec\n  } else {\n    this.raw = opts.raw\n  }\n  this.name = undefined\n  this.escapedName = undefined\n  this.scope = undefined\n  this.rawSpec = opts.rawSpec == null ? '' : opts.rawSpec\n  this.saveSpec = opts.saveSpec\n  this.fetchSpec = opts.fetchSpec\n  if (opts.name) this.setName(opts.name)\n  this.gitRange = opts.gitRange\n  this.gitCommittish = opts.gitCommittish\n  this.hosted = opts.hosted\n}\n\nResult.prototype.setName = function (name) {\n  if (!validatePackageName) validatePackageName = require('validate-npm-package-name')\n  const valid = validatePackageName(name)\n  if (!valid.validForOldPackages) {\n    throw invalidPackageName(name, valid)\n  }\n  this.name = name\n  this.scope = name[0] === '@' ? name.slice(0, name.indexOf('/')) : undefined\n  // scoped packages in couch must have slash url-encoded, e.g. @foo%2Fbar\n  this.escapedName = name.replace('/', '%2f')\n  return this\n}\n\nResult.prototype.toString = function () {\n  const full = []\n  if (this.name != null && this.name !== '') full.push(this.name)\n  const spec = this.saveSpec || this.fetchSpec || this.rawSpec\n  if (spec != null && spec !== '') full.push(spec)\n  return full.length ? full.join('@') : this.raw\n}\n\nResult.prototype.toJSON = function () {\n  const result = Object.assign({}, this)\n  delete result.hosted\n  return result\n}\n\nfunction setGitCommittish (res, committish) {\n  if (committish != null && committish.length >= 7 && committish.slice(0, 7) === 'semver:') {\n    res.gitRange = decodeURIComponent(committish.slice(7))\n    res.gitCommittish = null\n  } else {\n    res.gitCommittish = committish === '' ? null : committish\n  }\n  return res\n}\n\nconst isAbsolutePath = /^[/]|^[A-Za-z]:/\n\nfunction resolvePath (where, spec) {\n  if (isAbsolutePath.test(spec)) return spec\n  return path().resolve(where, spec)\n}\n\nfunction isAbsolute (dir) {\n  if (dir[0] === '/') return true\n  if (/^[A-Za-z]:/.test(dir)) return true\n  return false\n}\n\nfunction fromFile (res, where) {\n  if (!where) where = process.cwd()\n  res.type = isFilename.test(res.rawSpec) ? 'file' : 'directory'\n  res.where = where\n\n  const spec = res.rawSpec.replace(/\\\\/g, '/')\n    .replace(/^file:[/]*([A-Za-z]:)/, '$1') // drive name paths on windows\n    .replace(/^file:(?:[/]*([~./]))?/, '$1')\n  if (/^~[/]/.test(spec)) {\n    // this is needed for windows and for file:~/foo/bar\n    if (!osenv) osenv = require('osenv')\n    res.fetchSpec = resolvePath(osenv.home(), spec.slice(2))\n    res.saveSpec = 'file:' + spec\n  } else {\n    res.fetchSpec = resolvePath(where, spec)\n    if (isAbsolute(spec)) {\n      res.saveSpec = 'file:' + spec\n    } else {\n      res.saveSpec = 'file:' + path().relative(where, res.fetchSpec)\n    }\n  }\n  return res\n}\n\nfunction fromHostedGit (res, hosted) {\n  res.type = 'git'\n  res.hosted = hosted\n  res.saveSpec = hosted.toString({noGitPlus: false, noCommittish: false})\n  res.fetchSpec = hosted.getDefaultRepresentation() === 'shortcut' ? null : hosted.toString()\n  return setGitCommittish(res, hosted.committish)\n}\n\nfunction unsupportedURLType (protocol, spec) {\n  const err = new Error(`Unsupported URL Type \"${protocol}\": ${spec}`)\n  err.code = 'EUNSUPPORTEDPROTOCOL'\n  return err\n}\n\nfunction matchGitScp (spec) {\n  // git ssh specifiers are overloaded to also use scp-style git\n  // specifiers, so we have to parse those out and treat them special.\n  // They are NOT true URIs, so we can't hand them to `url.parse`.\n  //\n  // This regex looks for things that look like:\n  // git+ssh://git@my.custom.git.com:username/project.git#deadbeef\n  //\n  // ...and various combinations. The username in the beginning is *required*.\n  const matched = spec.match(/^git\\+ssh:\\/\\/([^:#]+:[^#]+(?:\\.git)?)(?:#(.*))?$/i)\n  return matched && !matched[1].match(/:[0-9]+\\/?.*$/i) && {\n    fetchSpec: matched[1],\n    gitCommittish: matched[2] == null ? null : matched[2]\n  }\n}\n\nfunction fromURL (res) {\n  if (!url) url = require('url')\n  const urlparse = url.parse(res.rawSpec)\n  res.saveSpec = res.rawSpec\n  // check the protocol, and then see if it's git or not\n  switch (urlparse.protocol) {\n    case 'git:':\n    case 'git+http:':\n    case 'git+https:':\n    case 'git+rsync:':\n    case 'git+ftp:':\n    case 'git+file:':\n    case 'git+ssh:':\n      res.type = 'git'\n      const match = urlparse.protocol === 'git+ssh:' && matchGitScp(res.rawSpec)\n      if (match) {\n        setGitCommittish(res, match.gitCommittish)\n        res.fetchSpec = match.fetchSpec\n      } else {\n        setGitCommittish(res, urlparse.hash != null ? urlparse.hash.slice(1) : '')\n        urlparse.protocol = urlparse.protocol.replace(/^git[+]/, '')\n        if (urlparse.protocol === 'file:' && /^git\\+file:\\/\\/[a-z]:/i.test(res.rawSpec)) {\n          // keep the drive letter : on windows file paths\n          urlparse.host += ':'\n          urlparse.hostname += ':'\n        }\n        delete urlparse.hash\n        res.fetchSpec = url.format(urlparse)\n      }\n      break\n    case 'http:':\n    case 'https:':\n      res.type = 'remote'\n      res.fetchSpec = res.saveSpec\n      break\n\n    default:\n      throw unsupportedURLType(urlparse.protocol, res.rawSpec)\n  }\n\n  return res\n}\n\nfunction fromAlias (res, where) {\n  const subSpec = npa(res.rawSpec.substr(4), where)\n  if (subSpec.type === 'alias') {\n    throw new Error('nested aliases not supported')\n  }\n  if (!subSpec.registry) {\n    throw new Error('aliases only work for registry deps')\n  }\n  res.subSpec = subSpec\n  res.registry = true\n  res.type = 'alias'\n  res.saveSpec = null\n  res.fetchSpec = null\n  return res\n}\n\nfunction fromRegistry (res) {\n  res.registry = true\n  const spec = res.rawSpec === '' ? 'latest' : res.rawSpec\n  // no save spec for registry components as we save based on the fetched\n  // version, not on the argument so this can't compute that.\n  res.saveSpec = null\n  res.fetchSpec = spec\n  if (!semver) semver = require('semver')\n  const version = semver.valid(spec, true)\n  const range = semver.validRange(spec, true)\n  if (version) {\n    res.type = 'version'\n  } else if (range) {\n    res.type = 'range'\n  } else {\n    if (encodeURIComponent(spec) !== spec) {\n      throw invalidTagName(spec)\n    }\n    res.type = 'tag'\n  }\n  return res\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}