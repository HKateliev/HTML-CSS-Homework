{"ast":null,"code":"'use strict';\n\nconst BB = require('bluebird');\nconst Fetcher = require('../fetch');\nconst glob = BB.promisify(require('glob'));\nconst packDir = require('../util/pack-dir');\nconst readJson = require('../util/read-json');\nconst path = require('path');\nconst pipe = BB.promisify(require('mississippi').pipe);\nconst through = require('mississippi').through;\nconst normalizePackageBin = require('npm-normalize-package-bin');\nconst readFileAsync = BB.promisify(require('fs').readFile);\nconst fetchDirectory = module.exports = Object.create(null);\nFetcher.impl(fetchDirectory, {\n  packument(spec, opts) {\n    return this.manifest(spec, opts).then(manifest => {\n      return Object.assign({}, manifest, {\n        'dist-tags': {\n          'latest': manifest.version\n        },\n        time: {\n          [manifest.version]: new Date().toISOString()\n        },\n        versions: {\n          [manifest.version]: manifest\n        }\n      });\n    });\n  },\n  // `directory` manifests come from the actual manifest/lockfile data.\n  manifest(spec, opts) {\n    const pkgPath = path.join(spec.fetchSpec, 'package.json');\n    const srPath = path.join(spec.fetchSpec, 'npm-shrinkwrap.json');\n    return BB.join(readFileAsync(pkgPath).then(readJson).catch({\n      code: 'ENOENT'\n    }, err => {\n      err.code = 'ENOPACKAGEJSON';\n      throw err;\n    }), readFileAsync(srPath).then(readJson).catch({\n      code: 'ENOENT'\n    }, () => null), (pkg, sr) => {\n      pkg._shrinkwrap = sr;\n      pkg._hasShrinkwrap = !!sr;\n      pkg._resolved = spec.fetchSpec;\n      pkg._integrity = false; // Don't auto-calculate integrity\n      pkg._shasum = false; // Don't auto-calculate shasum either\n      return pkg;\n    }).then(pkg => {\n      if (!pkg.bin && pkg.directories && pkg.directories.bin) {\n        const dirBin = pkg.directories.bin;\n        return glob(path.join(spec.fetchSpec, dirBin, '/**'), {\n          nodir: true\n        }).then(matches => {\n          matches.forEach(filePath => {\n            const relative = path.relative(spec.fetchSpec, filePath);\n            if (relative && relative[0] !== '.') {\n              if (!pkg.bin) {\n                pkg.bin = {};\n              }\n              pkg.bin[path.basename(relative)] = relative;\n            }\n          });\n        }).then(() => pkg);\n      } else {\n        return pkg;\n      }\n    }).then(pkg => normalizePackageBin(pkg));\n  },\n  // As of npm@5, the npm installer doesn't pack + install directories: it just\n  // creates symlinks. This code is here because `npm pack` still needs the\n  // ability to create a tarball from a local directory.\n  tarball(spec, opts) {\n    const stream = through();\n    this.manifest(spec, opts).then(mani => {\n      return pipe(this.fromManifest(mani, spec, opts), stream);\n    }).catch(err => stream.emit('error', err));\n    return stream;\n  },\n  // `directory` tarballs are generated in a very similar way to git tarballs.\n  fromManifest(manifest, spec, opts) {\n    const stream = through();\n    packDir(manifest, manifest._resolved, manifest._resolved, stream, opts).catch(err => {\n      stream.emit('error', err);\n    });\n    return stream;\n  }\n});","map":{"version":3,"names":["BB","require","Fetcher","glob","promisify","packDir","readJson","path","pipe","through","normalizePackageBin","readFileAsync","readFile","fetchDirectory","module","exports","Object","create","impl","packument","spec","opts","manifest","then","assign","version","time","Date","toISOString","versions","pkgPath","join","fetchSpec","srPath","catch","code","err","pkg","sr","_shrinkwrap","_hasShrinkwrap","_resolved","_integrity","_shasum","bin","directories","dirBin","nodir","matches","forEach","filePath","relative","basename","tarball","stream","mani","fromManifest","emit"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/pacote/lib/fetchers/directory.js"],"sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst Fetcher = require('../fetch')\nconst glob = BB.promisify(require('glob'))\nconst packDir = require('../util/pack-dir')\nconst readJson = require('../util/read-json')\nconst path = require('path')\nconst pipe = BB.promisify(require('mississippi').pipe)\nconst through = require('mississippi').through\nconst normalizePackageBin = require('npm-normalize-package-bin')\n\nconst readFileAsync = BB.promisify(require('fs').readFile)\n\nconst fetchDirectory = module.exports = Object.create(null)\n\nFetcher.impl(fetchDirectory, {\n  packument (spec, opts) {\n    return this.manifest(spec, opts).then(manifest => {\n      return Object.assign({}, manifest, {\n        'dist-tags': {\n          'latest': manifest.version\n        },\n        time: {\n          [manifest.version]: (new Date()).toISOString()\n        },\n        versions: {\n          [manifest.version]: manifest\n        }\n      })\n    })\n  },\n  // `directory` manifests come from the actual manifest/lockfile data.\n  manifest (spec, opts) {\n    const pkgPath = path.join(spec.fetchSpec, 'package.json')\n    const srPath = path.join(spec.fetchSpec, 'npm-shrinkwrap.json')\n    return BB.join(\n      readFileAsync(pkgPath).then(readJson).catch({ code: 'ENOENT' }, err => {\n        err.code = 'ENOPACKAGEJSON'\n        throw err\n      }),\n      readFileAsync(srPath).then(readJson).catch({ code: 'ENOENT' }, () => null),\n      (pkg, sr) => {\n        pkg._shrinkwrap = sr\n        pkg._hasShrinkwrap = !!sr\n        pkg._resolved = spec.fetchSpec\n        pkg._integrity = false // Don't auto-calculate integrity\n        pkg._shasum = false // Don't auto-calculate shasum either\n        return pkg\n      }\n    ).then(pkg => {\n      if (!pkg.bin && pkg.directories && pkg.directories.bin) {\n        const dirBin = pkg.directories.bin\n        return glob(path.join(spec.fetchSpec, dirBin, '/**'), { nodir: true }).then(matches => {\n          matches.forEach(filePath => {\n            const relative = path.relative(spec.fetchSpec, filePath)\n            if (relative && relative[0] !== '.') {\n              if (!pkg.bin) { pkg.bin = {} }\n              pkg.bin[path.basename(relative)] = relative\n            }\n          })\n        }).then(() => pkg)\n      } else {\n        return pkg\n      }\n    }).then(pkg => normalizePackageBin(pkg))\n  },\n\n  // As of npm@5, the npm installer doesn't pack + install directories: it just\n  // creates symlinks. This code is here because `npm pack` still needs the\n  // ability to create a tarball from a local directory.\n  tarball (spec, opts) {\n    const stream = through()\n    this.manifest(spec, opts).then(mani => {\n      return pipe(this.fromManifest(mani, spec, opts), stream)\n    }).catch(err => stream.emit('error', err))\n    return stream\n  },\n\n  // `directory` tarballs are generated in a very similar way to git tarballs.\n  fromManifest (manifest, spec, opts) {\n    const stream = through()\n    packDir(manifest, manifest._resolved, manifest._resolved, stream, opts).catch(err => {\n      stream.emit('error', err)\n    })\n    return stream\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}