{"ast":null,"code":"var assert = require('assert');\nvar toNerfDart = require('./nerf-dart.js');\nmodule.exports = getCredentialsByURI;\nfunction getCredentialsByURI(uri) {\n  assert(uri && typeof uri === 'string', 'registry URL is required');\n  var nerfed = toNerfDart(uri);\n  var defnerf = toNerfDart(this.get('registry'));\n\n  // hidden class micro-optimization\n  var c = {\n    scope: nerfed,\n    token: undefined,\n    password: undefined,\n    username: undefined,\n    email: undefined,\n    auth: undefined,\n    alwaysAuth: undefined\n  };\n\n  // used to override scope matching for tokens as well as legacy auth\n  if (this.get(nerfed + ':always-auth') !== undefined) {\n    var val = this.get(nerfed + ':always-auth');\n    c.alwaysAuth = val === 'false' ? false : !!val;\n  } else if (this.get('always-auth') !== undefined) {\n    c.alwaysAuth = this.get('always-auth');\n  }\n  if (this.get(nerfed + ':_authToken')) {\n    c.token = this.get(nerfed + ':_authToken');\n    // the bearer token is enough, don't confuse things\n    return c;\n  }\n  if (this.get(nerfed + ':-authtoken')) {\n    c.token = this.get(nerfed + ':-authtoken');\n    // the bearer token is enough, don't confuse things\n    return c;\n  }\n\n  // Handle the old-style _auth=<base64> style for the default\n  // registry, if set.\n  var authDef = this.get('_auth');\n  var userDef = this.get('username');\n  var passDef = this.get('_password');\n  if (authDef && !(userDef && passDef)) {\n    authDef = Buffer.from(authDef, 'base64').toString();\n    authDef = authDef.split(':');\n    userDef = authDef.shift();\n    passDef = authDef.join(':');\n  }\n  if (this.get(nerfed + ':_password')) {\n    c.password = Buffer.from(this.get(nerfed + ':_password'), 'base64').toString('utf8');\n  } else if (nerfed === defnerf && passDef) {\n    c.password = passDef;\n  }\n  if (this.get(nerfed + ':username')) {\n    c.username = this.get(nerfed + ':username');\n  } else if (nerfed === defnerf && userDef) {\n    c.username = userDef;\n  }\n  if (this.get(nerfed + ':email')) {\n    c.email = this.get(nerfed + ':email');\n  } else if (this.get('email')) {\n    c.email = this.get('email');\n  }\n  if (c.username && c.password) {\n    c.auth = Buffer.from(c.username + ':' + c.password).toString('base64');\n  }\n  return c;\n}","map":{"version":3,"names":["assert","require","toNerfDart","module","exports","getCredentialsByURI","uri","nerfed","defnerf","get","c","scope","token","undefined","password","username","email","auth","alwaysAuth","val","authDef","userDef","passDef","Buffer","from","toString","split","shift","join"],"sources":["/Users/hkateliev/node_modules/npm/lib/config/get-credentials-by-uri.js"],"sourcesContent":["var assert = require('assert')\n\nvar toNerfDart = require('./nerf-dart.js')\n\nmodule.exports = getCredentialsByURI\n\nfunction getCredentialsByURI (uri) {\n  assert(uri && typeof uri === 'string', 'registry URL is required')\n  var nerfed = toNerfDart(uri)\n  var defnerf = toNerfDart(this.get('registry'))\n\n  // hidden class micro-optimization\n  var c = {\n    scope: nerfed,\n    token: undefined,\n    password: undefined,\n    username: undefined,\n    email: undefined,\n    auth: undefined,\n    alwaysAuth: undefined\n  }\n\n  // used to override scope matching for tokens as well as legacy auth\n  if (this.get(nerfed + ':always-auth') !== undefined) {\n    var val = this.get(nerfed + ':always-auth')\n    c.alwaysAuth = val === 'false' ? false : !!val\n  } else if (this.get('always-auth') !== undefined) {\n    c.alwaysAuth = this.get('always-auth')\n  }\n\n  if (this.get(nerfed + ':_authToken')) {\n    c.token = this.get(nerfed + ':_authToken')\n    // the bearer token is enough, don't confuse things\n    return c\n  }\n\n  if (this.get(nerfed + ':-authtoken')) {\n    c.token = this.get(nerfed + ':-authtoken')\n    // the bearer token is enough, don't confuse things\n    return c\n  }\n\n  // Handle the old-style _auth=<base64> style for the default\n  // registry, if set.\n  var authDef = this.get('_auth')\n  var userDef = this.get('username')\n  var passDef = this.get('_password')\n  if (authDef && !(userDef && passDef)) {\n    authDef = Buffer.from(authDef, 'base64').toString()\n    authDef = authDef.split(':')\n    userDef = authDef.shift()\n    passDef = authDef.join(':')\n  }\n\n  if (this.get(nerfed + ':_password')) {\n    c.password = Buffer.from(this.get(nerfed + ':_password'), 'base64').toString('utf8')\n  } else if (nerfed === defnerf && passDef) {\n    c.password = passDef\n  }\n\n  if (this.get(nerfed + ':username')) {\n    c.username = this.get(nerfed + ':username')\n  } else if (nerfed === defnerf && userDef) {\n    c.username = userDef\n  }\n\n  if (this.get(nerfed + ':email')) {\n    c.email = this.get(nerfed + ':email')\n  } else if (this.get('email')) {\n    c.email = this.get('email')\n  }\n\n  if (c.username && c.password) {\n    c.auth = Buffer.from(c.username + ':' + c.password).toString('base64')\n  }\n\n  return c\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}