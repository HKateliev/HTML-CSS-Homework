{"ast":null,"code":"'use strict';\n\nconst Minipass = require('minipass');\nconst path = require('path');\nconst tar = require('tar');\nmodule.exports = extractStream;\nmodule.exports._computeMode = computeMode;\nclass Transformer extends Minipass {\n  constructor(spec, opts) {\n    super();\n    this.spec = spec;\n    this.opts = opts;\n    this.str = '';\n  }\n  write(data) {\n    this.str += data;\n    return true;\n  }\n  end() {\n    const replaced = this.str.replace(/}\\s*$/, `\\n,\"_resolved\": ${JSON.stringify(this.opts.resolved || '')}\\n,\"_integrity\": ${JSON.stringify(this.opts.integrity || '')}\\n,\"_from\": ${JSON.stringify(this.spec.toString())}\\n}`);\n    super.write(replaced);\n    return super.end();\n  }\n}\nfunction computeMode(fileMode, optMode, umask) {\n  return (fileMode | optMode) & ~(umask || 0);\n}\nfunction pkgJsonTransform(spec, opts) {\n  return entry => {\n    if (entry.path === 'package.json') {\n      const transformed = new Transformer(spec, opts);\n      return transformed;\n    }\n  };\n}\nfunction extractStream(spec, dest, opts) {\n  opts = opts || {};\n  const sawIgnores = new Set();\n  return tar.x({\n    cwd: dest,\n    filter: (name, entry) => !entry.header.type.match(/^.*link$/i),\n    strip: 1,\n    onwarn: msg => opts.log && opts.log.warn('tar', msg),\n    uid: opts.uid,\n    gid: opts.gid,\n    umask: opts.umask,\n    transform: opts.resolved && pkgJsonTransform(spec, opts),\n    onentry(entry) {\n      if (entry.type.toLowerCase() === 'file') {\n        entry.mode = computeMode(entry.mode, opts.fmode, opts.umask);\n      } else if (entry.type.toLowerCase() === 'directory') {\n        entry.mode = computeMode(entry.mode, opts.dmode, opts.umask);\n      } else {\n        entry.mode = computeMode(entry.mode, 0, opts.umask);\n      }\n\n      // Note: This mirrors logic in the fs read operations that are\n      // employed during tarball creation, in the fstream-npm module.\n      // It is duplicated here to handle tarballs that are created\n      // using other means, such as system tar or git archive.\n      if (entry.type.toLowerCase() === 'file') {\n        const base = path.basename(entry.path);\n        if (base === '.npmignore') {\n          sawIgnores.add(entry.path);\n        } else if (base === '.gitignore') {\n          const npmignore = entry.path.replace(/\\.gitignore$/, '.npmignore');\n          if (!sawIgnores.has(npmignore)) {\n            // Rename, may be clobbered later.\n            entry.path = npmignore;\n          }\n        }\n      }\n    }\n  });\n}","map":{"version":3,"names":["Minipass","require","path","tar","module","exports","extractStream","_computeMode","computeMode","Transformer","constructor","spec","opts","str","write","data","end","replaced","replace","JSON","stringify","resolved","integrity","toString","fileMode","optMode","umask","pkgJsonTransform","entry","transformed","dest","sawIgnores","Set","x","cwd","filter","name","header","type","match","strip","onwarn","msg","log","warn","uid","gid","transform","onentry","toLowerCase","mode","fmode","dmode","base","basename","add","npmignore","has"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/pacote/lib/extract-stream.js"],"sourcesContent":["'use strict'\n\nconst Minipass = require('minipass')\nconst path = require('path')\nconst tar = require('tar')\n\nmodule.exports = extractStream\nmodule.exports._computeMode = computeMode\n\nclass Transformer extends Minipass {\n  constructor (spec, opts) {\n    super()\n    this.spec = spec\n    this.opts = opts\n    this.str = ''\n  }\n  write (data) {\n    this.str += data\n    return true\n  }\n  end () {\n    const replaced = this.str.replace(\n      /}\\s*$/,\n      `\\n,\"_resolved\": ${\n        JSON.stringify(this.opts.resolved || '')\n      }\\n,\"_integrity\": ${\n        JSON.stringify(this.opts.integrity || '')\n      }\\n,\"_from\": ${\n        JSON.stringify(this.spec.toString())\n      }\\n}`\n    )\n    super.write(replaced)\n    return super.end()\n  }\n}\n\nfunction computeMode (fileMode, optMode, umask) {\n  return (fileMode | optMode) & ~(umask || 0)\n}\n\nfunction pkgJsonTransform (spec, opts) {\n  return entry => {\n    if (entry.path === 'package.json') {\n      const transformed = new Transformer(spec, opts)\n      return transformed\n    }\n  }\n}\n\nfunction extractStream (spec, dest, opts) {\n  opts = opts || {}\n  const sawIgnores = new Set()\n  return tar.x({\n    cwd: dest,\n    filter: (name, entry) => !entry.header.type.match(/^.*link$/i),\n    strip: 1,\n    onwarn: msg => opts.log && opts.log.warn('tar', msg),\n    uid: opts.uid,\n    gid: opts.gid,\n    umask: opts.umask,\n    transform: opts.resolved && pkgJsonTransform(spec, opts),\n    onentry (entry) {\n      if (entry.type.toLowerCase() === 'file') {\n        entry.mode = computeMode(entry.mode, opts.fmode, opts.umask)\n      } else if (entry.type.toLowerCase() === 'directory') {\n        entry.mode = computeMode(entry.mode, opts.dmode, opts.umask)\n      } else {\n        entry.mode = computeMode(entry.mode, 0, opts.umask)\n      }\n\n      // Note: This mirrors logic in the fs read operations that are\n      // employed during tarball creation, in the fstream-npm module.\n      // It is duplicated here to handle tarballs that are created\n      // using other means, such as system tar or git archive.\n      if (entry.type.toLowerCase() === 'file') {\n        const base = path.basename(entry.path)\n        if (base === '.npmignore') {\n          sawIgnores.add(entry.path)\n        } else if (base === '.gitignore') {\n          const npmignore = entry.path.replace(/\\.gitignore$/, '.npmignore')\n          if (!sawIgnores.has(npmignore)) {\n            // Rename, may be clobbered later.\n            entry.path = npmignore\n          }\n        }\n      }\n    }\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}