{"ast":null,"code":"'use strict';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n// (MIT licensed)\nconst Buffer = require('safe-buffer').Buffer;\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\nconst CLOSED = Symbol('closed');\nclass Blob {\n  constructor() {\n    Object.defineProperty(this, Symbol.toStringTag, {\n      value: 'Blob',\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    this[CLOSED] = false;\n    this[TYPE] = '';\n    const blobParts = arguments[0];\n    const options = arguments[1];\n    const buffers = [];\n    if (blobParts) {\n      const a = blobParts;\n      const length = Number(a.length);\n      for (let i = 0; i < length; i++) {\n        const element = a[i];\n        let buffer;\n        if (Buffer.isBuffer(element)) {\n          buffer = element;\n        } else if (ArrayBuffer.isView(element)) {\n          buffer = Buffer.from(new Uint8Array(element.buffer, element.byteOffset, element.byteLength));\n        } else if (element instanceof ArrayBuffer) {\n          buffer = Buffer.from(new Uint8Array(element));\n        } else if (element instanceof Blob) {\n          buffer = element[BUFFER];\n        } else {\n          buffer = Buffer.from(typeof element === 'string' ? element : String(element));\n        }\n        buffers.push(buffer);\n      }\n    }\n    this[BUFFER] = Buffer.concat(buffers);\n    let type = options && options.type !== undefined && String(options.type).toLowerCase();\n    if (type && !/[^\\u0020-\\u007E]/.test(type)) {\n      this[TYPE] = type;\n    }\n  }\n  get size() {\n    return this[CLOSED] ? 0 : this[BUFFER].length;\n  }\n  get type() {\n    return this[TYPE];\n  }\n  get isClosed() {\n    return this[CLOSED];\n  }\n  slice() {\n    const size = this.size;\n    const start = arguments[0];\n    const end = arguments[1];\n    let relativeStart, relativeEnd;\n    if (start === undefined) {\n      relativeStart = 0;\n    } else if (start < 0) {\n      relativeStart = Math.max(size + start, 0);\n    } else {\n      relativeStart = Math.min(start, size);\n    }\n    if (end === undefined) {\n      relativeEnd = size;\n    } else if (end < 0) {\n      relativeEnd = Math.max(size + end, 0);\n    } else {\n      relativeEnd = Math.min(end, size);\n    }\n    const span = Math.max(relativeEnd - relativeStart, 0);\n    const buffer = this[BUFFER];\n    const slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n    const blob = new Blob([], {\n      type: arguments[2]\n    });\n    blob[BUFFER] = slicedBuffer;\n    blob[CLOSED] = this[CLOSED];\n    return blob;\n  }\n  close() {\n    this[CLOSED] = true;\n  }\n}\nexports = module.exports = Blob;\nexports.BUFFER = BUFFER;\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n  value: 'BlobPrototype',\n  writable: false,\n  enumerable: false,\n  configurable: true\n});","map":{"version":3,"names":["Buffer","require","BUFFER","Symbol","TYPE","CLOSED","Blob","constructor","Object","defineProperty","toStringTag","value","writable","enumerable","configurable","blobParts","arguments","options","buffers","a","length","Number","i","element","buffer","isBuffer","ArrayBuffer","isView","from","Uint8Array","byteOffset","byteLength","String","push","concat","type","undefined","toLowerCase","test","size","isClosed","slice","start","end","relativeStart","relativeEnd","Math","max","min","span","slicedBuffer","blob","close","exports","module","prototype"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/node-fetch-npm/src/blob.js"],"sourcesContent":["'use strict'\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n// (MIT licensed)\n\nconst Buffer = require('safe-buffer').Buffer\n\nconst BUFFER = Symbol('buffer')\nconst TYPE = Symbol('type')\nconst CLOSED = Symbol('closed')\n\nclass Blob {\n  constructor () {\n    Object.defineProperty(this, Symbol.toStringTag, {\n      value: 'Blob',\n      writable: false,\n      enumerable: false,\n      configurable: true\n    })\n\n    this[CLOSED] = false\n    this[TYPE] = ''\n\n    const blobParts = arguments[0]\n    const options = arguments[1]\n\n    const buffers = []\n\n    if (blobParts) {\n      const a = blobParts\n      const length = Number(a.length)\n      for (let i = 0; i < length; i++) {\n        const element = a[i]\n        let buffer\n        if (Buffer.isBuffer(element)) {\n          buffer = element\n        } else if (ArrayBuffer.isView(element)) {\n          buffer = Buffer.from(new Uint8Array(element.buffer, element.byteOffset, element.byteLength))\n        } else if (element instanceof ArrayBuffer) {\n          buffer = Buffer.from(new Uint8Array(element))\n        } else if (element instanceof Blob) {\n          buffer = element[BUFFER]\n        } else {\n          buffer = Buffer.from(typeof element === 'string' ? element : String(element))\n        }\n        buffers.push(buffer)\n      }\n    }\n\n    this[BUFFER] = Buffer.concat(buffers)\n\n    let type = options && options.type !== undefined && String(options.type).toLowerCase()\n    if (type && !/[^\\u0020-\\u007E]/.test(type)) {\n      this[TYPE] = type\n    }\n  }\n  get size () {\n    return this[CLOSED] ? 0 : this[BUFFER].length\n  }\n  get type () {\n    return this[TYPE]\n  }\n  get isClosed () {\n    return this[CLOSED]\n  }\n  slice () {\n    const size = this.size\n\n    const start = arguments[0]\n    const end = arguments[1]\n    let relativeStart, relativeEnd\n    if (start === undefined) {\n      relativeStart = 0\n    } else if (start < 0) {\n      relativeStart = Math.max(size + start, 0)\n    } else {\n      relativeStart = Math.min(start, size)\n    }\n    if (end === undefined) {\n      relativeEnd = size\n    } else if (end < 0) {\n      relativeEnd = Math.max(size + end, 0)\n    } else {\n      relativeEnd = Math.min(end, size)\n    }\n    const span = Math.max(relativeEnd - relativeStart, 0)\n\n    const buffer = this[BUFFER]\n    const slicedBuffer = buffer.slice(\n      relativeStart,\n      relativeStart + span\n    )\n    const blob = new Blob([], { type: arguments[2] })\n    blob[BUFFER] = slicedBuffer\n    blob[CLOSED] = this[CLOSED]\n    return blob\n  }\n  close () {\n    this[CLOSED] = true\n  }\n}\nexports = module.exports = Blob\nexports.BUFFER = BUFFER\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n  value: 'BlobPrototype',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}