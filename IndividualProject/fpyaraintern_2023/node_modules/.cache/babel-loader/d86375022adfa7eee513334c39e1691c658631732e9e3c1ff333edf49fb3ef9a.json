{"ast":null,"code":"'use strict';\n\nconst deprCheck = require('./utils/depr-check');\nconst path = require('path');\nconst log = require('npmlog');\nconst pacote = require('pacote');\nconst readPackageTree = require('read-package-tree');\nconst rimraf = require('rimraf');\nconst validate = require('aproba');\nconst npa = require('npm-package-arg');\nconst npm = require('./npm');\nlet npmConfig;\nconst npmlog = require('npmlog');\nconst limit = require('call-limit');\nconst tempFilename = require('./utils/temp-filename.js');\nconst replaceInfo = require('./utils/replace-info.js');\nconst isWindows = require('./utils/is-windows.js');\nfunction andLogAndFinish(spec, tracker, done) {\n  validate('SOF|SZF|OOF|OZF', [spec, tracker, done]);\n  return (er, pkg) => {\n    if (er) {\n      er.message = replaceInfo(er.message);\n      var spc = replaceInfo(String(spec));\n      log.silly('fetchPackageMetaData', 'error for ' + spc, er.message);\n      if (tracker) tracker.finish();\n    }\n    return done(er, pkg);\n  };\n}\nconst LRUCache = require('lru-cache');\nconst CACHE = new LRUCache({\n  max: 300 * 1024 * 1024,\n  length: p => p._contentLength\n});\nmodule.exports = limit(fetchPackageMetadata, npm.limit.fetch);\nfunction fetchPackageMetadata(spec, where, opts, done) {\n  validate('SSOF|SSFZ|OSOF|OSFZ', [spec, where, opts, done]);\n  if (!done) {\n    done = opts;\n    opts = {};\n  }\n  var tracker = opts.tracker;\n  const logAndFinish = andLogAndFinish(spec, tracker, done);\n  if (typeof spec === 'object') {\n    var dep = spec;\n  } else {\n    dep = npa(spec);\n  }\n  if (!isWindows && dep.type === 'directory' && /^[a-zA-Z]:/.test(dep.fetchSpec)) {\n    var err = new Error(`Can't install from windows path on a non-windows system: ${dep.fetchSpec.replace(/[/]/g, '\\\\')}`);\n    err.code = 'EWINDOWSPATH';\n    return logAndFinish(err);\n  }\n  if (!npmConfig) {\n    npmConfig = require('./config/figgy-config.js');\n  }\n  pacote.manifest(dep, npmConfig({\n    annotate: true,\n    fullMetadata: opts.fullMetadata,\n    log: tracker || npmlog,\n    memoize: CACHE,\n    where: where\n  })).then(pkg => logAndFinish(null, deprCheck(pkg)), err => {\n    if (dep.type !== 'directory') return logAndFinish(err);\n    if (err.code === 'ENOTDIR') {\n      var enolocal = new Error(`Could not install \"${path.relative(process.cwd(), dep.fetchSpec)}\" as it is not a directory and is not a file with a name ending in .tgz, .tar.gz or .tar`);\n      enolocal.code = 'ENOLOCAL';\n      if (err.stack) enolocal.stack = err.stack;\n      return logAndFinish(enolocal);\n    } else if (err.code === 'ENOPACKAGEJSON') {\n      var enopackage = new Error(`Could not install from \"${path.relative(process.cwd(), dep.fetchSpec)}\" as it does not contain a package.json file.`);\n      enopackage.code = 'ENOLOCAL';\n      if (err.stack) enopackage.stack = err.stack;\n      return logAndFinish(enopackage);\n    } else {\n      return logAndFinish(err);\n    }\n  });\n}\nmodule.exports.addBundled = addBundled;\nfunction addBundled(pkg, next) {\n  validate('OF', arguments);\n  if (pkg._bundled !== undefined) return next(null, pkg);\n  if (!pkg.bundleDependencies && pkg._requested.type !== 'directory') return next(null, pkg);\n  const requested = pkg._requested || npa(pkg._from);\n  if (requested.type === 'directory') {\n    pkg._bundled = null;\n    return readPackageTree(pkg._requested.fetchSpec, function (er, tree) {\n      if (tree) pkg._bundled = tree.children;\n      return next(null, pkg);\n    });\n  }\n  pkg._bundled = null;\n  const target = tempFilename('unpack');\n  if (!npmConfig) {\n    npmConfig = require('./config/figgy-config.js');\n  }\n  const opts = npmConfig({\n    integrity: pkg._integrity\n  });\n  pacote.extract(pkg._resolved || pkg._requested || npa.resolve(pkg.name, pkg.version), target, opts).then(() => {\n    log.silly('addBundled', 'read tarball');\n    readPackageTree(target, (err, tree) => {\n      if (err) {\n        return next(err);\n      }\n      log.silly('cleanup', 'remove extracted module');\n      rimraf(target, function () {\n        if (tree) {\n          pkg._bundled = tree.children;\n        }\n        next(null, pkg);\n      });\n    });\n  }, next);\n}","map":{"version":3,"names":["deprCheck","require","path","log","pacote","readPackageTree","rimraf","validate","npa","npm","npmConfig","npmlog","limit","tempFilename","replaceInfo","isWindows","andLogAndFinish","spec","tracker","done","er","pkg","message","spc","String","silly","finish","LRUCache","CACHE","max","length","p","_contentLength","module","exports","fetchPackageMetadata","fetch","where","opts","logAndFinish","dep","type","test","fetchSpec","err","Error","replace","code","manifest","annotate","fullMetadata","memoize","then","enolocal","relative","process","cwd","stack","enopackage","addBundled","next","arguments","_bundled","undefined","bundleDependencies","_requested","requested","_from","tree","children","target","integrity","_integrity","extract","_resolved","resolve","name","version"],"sources":["/Users/hkateliev/node_modules/npm/lib/fetch-package-metadata.js"],"sourcesContent":["'use strict'\n\nconst deprCheck = require('./utils/depr-check')\nconst path = require('path')\nconst log = require('npmlog')\nconst pacote = require('pacote')\nconst readPackageTree = require('read-package-tree')\nconst rimraf = require('rimraf')\nconst validate = require('aproba')\nconst npa = require('npm-package-arg')\nconst npm = require('./npm')\nlet npmConfig\nconst npmlog = require('npmlog')\nconst limit = require('call-limit')\nconst tempFilename = require('./utils/temp-filename.js')\nconst replaceInfo = require('./utils/replace-info.js')\nconst isWindows = require('./utils/is-windows.js')\n\nfunction andLogAndFinish (spec, tracker, done) {\n  validate('SOF|SZF|OOF|OZF', [spec, tracker, done])\n  return (er, pkg) => {\n    if (er) {\n      er.message = replaceInfo(er.message)\n      var spc = replaceInfo(String(spec))\n      log.silly('fetchPackageMetaData', 'error for ' + spc, er.message)\n      if (tracker) tracker.finish()\n    }\n    return done(er, pkg)\n  }\n}\n\nconst LRUCache = require('lru-cache')\nconst CACHE = new LRUCache({\n  max: 300 * 1024 * 1024,\n  length: (p) => p._contentLength\n})\n\nmodule.exports = limit(fetchPackageMetadata, npm.limit.fetch)\nfunction fetchPackageMetadata (spec, where, opts, done) {\n  validate('SSOF|SSFZ|OSOF|OSFZ', [spec, where, opts, done])\n\n  if (!done) {\n    done = opts\n    opts = {}\n  }\n  var tracker = opts.tracker\n  const logAndFinish = andLogAndFinish(spec, tracker, done)\n\n  if (typeof spec === 'object') {\n    var dep = spec\n  } else {\n    dep = npa(spec)\n  }\n  if (!isWindows && dep.type === 'directory' && /^[a-zA-Z]:/.test(dep.fetchSpec)) {\n    var err = new Error(`Can't install from windows path on a non-windows system: ${dep.fetchSpec.replace(/[/]/g, '\\\\')}`)\n    err.code = 'EWINDOWSPATH'\n    return logAndFinish(err)\n  }\n  if (!npmConfig) {\n    npmConfig = require('./config/figgy-config.js')\n  }\n  pacote.manifest(dep, npmConfig({\n    annotate: true,\n    fullMetadata: opts.fullMetadata,\n    log: tracker || npmlog,\n    memoize: CACHE,\n    where: where\n  })).then(\n    (pkg) => logAndFinish(null, deprCheck(pkg)),\n    (err) => {\n      if (dep.type !== 'directory') return logAndFinish(err)\n      if (err.code === 'ENOTDIR') {\n        var enolocal = new Error(`Could not install \"${path.relative(process.cwd(), dep.fetchSpec)}\" as it is not a directory and is not a file with a name ending in .tgz, .tar.gz or .tar`)\n        enolocal.code = 'ENOLOCAL'\n        if (err.stack) enolocal.stack = err.stack\n        return logAndFinish(enolocal)\n      } else if (err.code === 'ENOPACKAGEJSON') {\n        var enopackage = new Error(`Could not install from \"${path.relative(process.cwd(), dep.fetchSpec)}\" as it does not contain a package.json file.`)\n        enopackage.code = 'ENOLOCAL'\n        if (err.stack) enopackage.stack = err.stack\n        return logAndFinish(enopackage)\n      } else {\n        return logAndFinish(err)\n      }\n    }\n  )\n}\n\nmodule.exports.addBundled = addBundled\nfunction addBundled (pkg, next) {\n  validate('OF', arguments)\n  if (pkg._bundled !== undefined) return next(null, pkg)\n\n  if (!pkg.bundleDependencies && pkg._requested.type !== 'directory') return next(null, pkg)\n  const requested = pkg._requested || npa(pkg._from)\n  if (requested.type === 'directory') {\n    pkg._bundled = null\n    return readPackageTree(pkg._requested.fetchSpec, function (er, tree) {\n      if (tree) pkg._bundled = tree.children\n      return next(null, pkg)\n    })\n  }\n  pkg._bundled = null\n  const target = tempFilename('unpack')\n  if (!npmConfig) {\n    npmConfig = require('./config/figgy-config.js')\n  }\n  const opts = npmConfig({integrity: pkg._integrity})\n  pacote.extract(pkg._resolved || pkg._requested || npa.resolve(pkg.name, pkg.version), target, opts).then(() => {\n    log.silly('addBundled', 'read tarball')\n    readPackageTree(target, (err, tree) => {\n      if (err) { return next(err) }\n      log.silly('cleanup', 'remove extracted module')\n      rimraf(target, function () {\n        if (tree) {\n          pkg._bundled = tree.children\n        }\n        next(null, pkg)\n      })\n    })\n  }, next)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}