{"ast":null,"code":"'use strict';\n\nexports.start = startMetrics;\nexports.stop = stopMetrics;\nexports.save = saveMetrics;\nexports.send = sendMetrics;\nconst fs = require('fs');\nconst path = require('path');\nconst npm = require('../npm.js');\nconst regFetch = require('libnpm/fetch');\nconst uuid = require('uuid');\nconst cacheFile = require('./cache-file.js');\nlet inMetrics = false;\nfunction startMetrics() {\n  if (inMetrics) return;\n  // loaded on demand to avoid any recursive deps when `./metrics-launch` requires us.\n  var metricsLaunch = require('./metrics-launch.js');\n  npm.metricsProcess = metricsLaunch();\n}\nfunction stopMetrics() {\n  if (inMetrics) return;\n  if (npm.metricsProcess) npm.metricsProcess.kill('SIGKILL');\n}\nfunction saveMetrics(itWorked) {\n  if (inMetrics) return;\n  // If the metrics reporter hasn't managed to PUT yet then kill it so that it doesn't\n  // step on our updating the anonymous-cli-metrics json\n  stopMetrics();\n  var metricsFile = path.join(npm.config.get('cache'), 'anonymous-cli-metrics.json');\n  var metrics;\n  try {\n    metrics = JSON.parse(fs.readFileSync(metricsFile));\n    metrics.metrics.to = new Date().toISOString();\n    if (itWorked) {\n      ++metrics.metrics.successfulInstalls;\n    } else {\n      ++metrics.metrics.failedInstalls;\n    }\n  } catch (ex) {\n    metrics = {\n      metricId: uuid.v4(),\n      metrics: {\n        from: new Date().toISOString(),\n        to: new Date().toISOString(),\n        successfulInstalls: itWorked ? 1 : 0,\n        failedInstalls: itWorked ? 0 : 1\n      }\n    };\n  }\n  try {\n    cacheFile.write(metricsFile, JSON.stringify(metrics));\n  } catch (ex) {\n    // we couldn't write and/or chown the error metrics file, oh well.\n  }\n}\nfunction sendMetrics(metricsFile, metricsRegistry) {\n  inMetrics = true;\n  var cliMetrics = JSON.parse(fs.readFileSync(metricsFile));\n  regFetch(`/-/npm/anon-metrics/v1/${encodeURIComponent(cliMetrics.metricId)}`,\n  // NOTE: skip npmConfig() to prevent auth\n  {\n    registry: metricsRegistry,\n    method: 'PUT',\n    body: cliMetrics.metrics,\n    retry: false\n  }).then(() => {\n    fs.unlinkSync(metricsFile);\n  }, err => {\n    cacheFile.write(path.join(path.dirname(metricsFile), 'last-send-metrics-error.txt'), err.stack);\n  });\n}","map":{"version":3,"names":["exports","start","startMetrics","stop","stopMetrics","save","saveMetrics","send","sendMetrics","fs","require","path","npm","regFetch","uuid","cacheFile","inMetrics","metricsLaunch","metricsProcess","kill","itWorked","metricsFile","join","config","get","metrics","JSON","parse","readFileSync","to","Date","toISOString","successfulInstalls","failedInstalls","ex","metricId","v4","from","write","stringify","metricsRegistry","cliMetrics","encodeURIComponent","registry","method","body","retry","then","unlinkSync","err","dirname","stack"],"sources":["/Users/hkateliev/node_modules/npm/lib/utils/metrics.js"],"sourcesContent":["'use strict'\nexports.start = startMetrics\nexports.stop = stopMetrics\nexports.save = saveMetrics\nexports.send = sendMetrics\n\nconst fs = require('fs')\nconst path = require('path')\nconst npm = require('../npm.js')\nconst regFetch = require('libnpm/fetch')\nconst uuid = require('uuid')\nconst cacheFile = require('./cache-file.js')\n\nlet inMetrics = false\n\nfunction startMetrics () {\n  if (inMetrics) return\n  // loaded on demand to avoid any recursive deps when `./metrics-launch` requires us.\n  var metricsLaunch = require('./metrics-launch.js')\n  npm.metricsProcess = metricsLaunch()\n}\n\nfunction stopMetrics () {\n  if (inMetrics) return\n  if (npm.metricsProcess) npm.metricsProcess.kill('SIGKILL')\n}\n\nfunction saveMetrics (itWorked) {\n  if (inMetrics) return\n  // If the metrics reporter hasn't managed to PUT yet then kill it so that it doesn't\n  // step on our updating the anonymous-cli-metrics json\n  stopMetrics()\n  var metricsFile = path.join(npm.config.get('cache'), 'anonymous-cli-metrics.json')\n  var metrics\n  try {\n    metrics = JSON.parse(fs.readFileSync(metricsFile))\n    metrics.metrics.to = new Date().toISOString()\n    if (itWorked) {\n      ++metrics.metrics.successfulInstalls\n    } else {\n      ++metrics.metrics.failedInstalls\n    }\n  } catch (ex) {\n    metrics = {\n      metricId: uuid.v4(),\n      metrics: {\n        from: new Date().toISOString(),\n        to: new Date().toISOString(),\n        successfulInstalls: itWorked ? 1 : 0,\n        failedInstalls: itWorked ? 0 : 1\n      }\n    }\n  }\n  try {\n    cacheFile.write(metricsFile, JSON.stringify(metrics))\n  } catch (ex) {\n    // we couldn't write and/or chown the error metrics file, oh well.\n  }\n}\n\nfunction sendMetrics (metricsFile, metricsRegistry) {\n  inMetrics = true\n  var cliMetrics = JSON.parse(fs.readFileSync(metricsFile))\n  regFetch(\n    `/-/npm/anon-metrics/v1/${encodeURIComponent(cliMetrics.metricId)}`,\n    // NOTE: skip npmConfig() to prevent auth\n    {\n      registry: metricsRegistry,\n      method: 'PUT',\n      body: cliMetrics.metrics,\n      retry: false\n    }\n  ).then(() => {\n    fs.unlinkSync(metricsFile)\n  }, err => {\n    cacheFile.write(path.join(path.dirname(metricsFile), 'last-send-metrics-error.txt'), err.stack)\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}