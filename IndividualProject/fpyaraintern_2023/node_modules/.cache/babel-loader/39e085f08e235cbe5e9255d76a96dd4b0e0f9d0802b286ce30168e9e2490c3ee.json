{"ast":null,"code":"\"use strict\";\n\nvar wcwidth = require('./width');\nvar _require = require('./utils');\nvar padRight = _require.padRight;\nvar padCenter = _require.padCenter;\nvar padLeft = _require.padLeft;\nvar splitIntoLines = _require.splitIntoLines;\nvar splitLongWords = _require.splitLongWords;\nvar truncateString = _require.truncateString;\nvar DEFAULT_HEADING_TRANSFORM = function DEFAULT_HEADING_TRANSFORM(key) {\n  return key.toUpperCase();\n};\nvar DEFAULT_DATA_TRANSFORM = function DEFAULT_DATA_TRANSFORM(cell, column, index) {\n  return cell;\n};\nvar DEFAULTS = Object.freeze({\n  maxWidth: Infinity,\n  minWidth: 0,\n  columnSplitter: ' ',\n  truncate: false,\n  truncateMarker: 'â€¦',\n  preserveNewLines: false,\n  paddingChr: ' ',\n  showHeaders: true,\n  headingTransform: DEFAULT_HEADING_TRANSFORM,\n  dataTransform: DEFAULT_DATA_TRANSFORM\n});\nmodule.exports = function (items) {\n  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n  var columnConfigs = options.config || {};\n  delete options.config; // remove config so doesn't appear on every column.\n\n  var maxLineWidth = options.maxLineWidth || Infinity;\n  if (maxLineWidth === 'auto') maxLineWidth = process.stdout.columns || Infinity;\n  delete options.maxLineWidth; // this is a line control option, don't pass it to column\n\n  // Option defaults inheritance:\n  // options.config[columnName] => options => DEFAULTS\n  options = mixin({}, DEFAULTS, options);\n  options.config = options.config || Object.create(null);\n  options.spacing = options.spacing || '\\n'; // probably useless\n  options.preserveNewLines = !!options.preserveNewLines;\n  options.showHeaders = !!options.showHeaders;\n  options.columns = options.columns || options.include; // alias include/columns, prefer columns if supplied\n  var columnNames = options.columns || []; // optional user-supplied columns to include\n\n  items = toArray(items, columnNames);\n\n  // if not suppled column names, automatically determine columns from data keys\n  if (!columnNames.length) {\n    items.forEach(function (item) {\n      for (var columnName in item) {\n        if (columnNames.indexOf(columnName) === -1) columnNames.push(columnName);\n      }\n    });\n  }\n\n  // initialize column defaults (each column inherits from options.config)\n  var columns = columnNames.reduce(function (columns, columnName) {\n    var column = Object.create(options);\n    columns[columnName] = mixin(column, columnConfigs[columnName]);\n    return columns;\n  }, Object.create(null));\n\n  // sanitize column settings\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    column.name = columnName;\n    column.maxWidth = Math.ceil(column.maxWidth);\n    column.minWidth = Math.ceil(column.minWidth);\n    column.truncate = !!column.truncate;\n    column.align = column.align || 'left';\n  });\n\n  // sanitize data\n  items = items.map(function (item) {\n    var result = Object.create(null);\n    columnNames.forEach(function (columnName) {\n      // null/undefined -> ''\n      result[columnName] = item[columnName] != null ? item[columnName] : '';\n      // toString everything\n      result[columnName] = '' + result[columnName];\n      if (columns[columnName].preserveNewLines) {\n        // merge non-newline whitespace chars\n        result[columnName] = result[columnName].replace(/[^\\S\\n]/gmi, ' ');\n      } else {\n        // merge all whitespace chars\n        result[columnName] = result[columnName].replace(/\\s/gmi, ' ');\n      }\n    });\n    return result;\n  });\n\n  // transform data cells\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    items = items.map(function (item, index) {\n      var col = Object.create(column);\n      item[columnName] = column.dataTransform(item[columnName], col, index);\n      var changedKeys = Object.keys(col);\n      // disable default heading transform if we wrote to column.name\n      if (changedKeys.indexOf('name') !== -1) {\n        if (column.headingTransform !== DEFAULT_HEADING_TRANSFORM) return;\n        column.headingTransform = function (heading) {\n          return heading;\n        };\n      }\n      changedKeys.forEach(function (key) {\n        return column[key] = col[key];\n      });\n      return item;\n    });\n  });\n\n  // add headers\n  var headers = {};\n  if (options.showHeaders) {\n    columnNames.forEach(function (columnName) {\n      var column = columns[columnName];\n      if (!column.showHeaders) {\n        headers[columnName] = '';\n        return;\n      }\n      headers[columnName] = column.headingTransform(column.name);\n    });\n    items.unshift(headers);\n  }\n  // get actual max-width between min & max\n  // based on length of data in columns\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    column.width = items.map(function (item) {\n      return item[columnName];\n    }).reduce(function (min, cur) {\n      // if already at maxWidth don't bother testing\n      if (min >= column.maxWidth) return min;\n      return Math.max(min, Math.min(column.maxWidth, Math.max(column.minWidth, wcwidth(cur))));\n    }, 0);\n  });\n\n  // split long words so they can break onto multiple lines\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    items = items.map(function (item) {\n      item[columnName] = splitLongWords(item[columnName], column.width, column.truncateMarker);\n      return item;\n    });\n  });\n\n  // wrap long lines. each item is now an array of lines.\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    items = items.map(function (item, index) {\n      var cell = item[columnName];\n      item[columnName] = splitIntoLines(cell, column.width);\n\n      // if truncating required, only include first line + add truncation char\n      if (column.truncate && item[columnName].length > 1) {\n        item[columnName] = splitIntoLines(cell, column.width - wcwidth(column.truncateMarker));\n        var firstLine = item[columnName][0];\n        if (!endsWith(firstLine, column.truncateMarker)) item[columnName][0] += column.truncateMarker;\n        item[columnName] = item[columnName].slice(0, 1);\n      }\n      return item;\n    });\n  });\n\n  // recalculate column widths from truncated output/lines\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    column.width = items.map(function (item) {\n      return item[columnName].reduce(function (min, cur) {\n        if (min >= column.maxWidth) return min;\n        return Math.max(min, Math.min(column.maxWidth, Math.max(column.minWidth, wcwidth(cur))));\n      }, 0);\n    }).reduce(function (min, cur) {\n      if (min >= column.maxWidth) return min;\n      return Math.max(min, Math.min(column.maxWidth, Math.max(column.minWidth, cur)));\n    }, 0);\n  });\n  var rows = createRows(items, columns, columnNames, options.paddingChr); // merge lines into rows\n  // conceive output\n  return rows.reduce(function (output, row) {\n    return output.concat(row.reduce(function (rowOut, line) {\n      return rowOut.concat(line.join(options.columnSplitter));\n    }, []));\n  }, []).map(function (line) {\n    return truncateString(line, maxLineWidth);\n  }).join(options.spacing);\n};\n\n/**\n * Convert wrapped lines into rows with padded values.\n *\n * @param Array items data to process\n * @param Array columns column width settings for wrapping\n * @param Array columnNames column ordering\n * @return Array items wrapped in arrays, corresponding to lines\n */\n\nfunction createRows(items, columns, columnNames, paddingChr) {\n  return items.map(function (item) {\n    var row = [];\n    var numLines = 0;\n    columnNames.forEach(function (columnName) {\n      numLines = Math.max(numLines, item[columnName].length);\n    });\n    // combine matching lines of each rows\n\n    var _loop = function _loop(i) {\n      row[i] = row[i] || [];\n      columnNames.forEach(function (columnName) {\n        var column = columns[columnName];\n        var val = item[columnName][i] || ''; // || '' ensures empty columns get padded\n        if (column.align === 'right') row[i].push(padLeft(val, column.width, paddingChr));else if (column.align === 'center' || column.align === 'centre') row[i].push(padCenter(val, column.width, paddingChr));else row[i].push(padRight(val, column.width, paddingChr));\n      });\n    };\n    for (var i = 0; i < numLines; i++) {\n      _loop(i);\n    }\n    return row;\n  });\n}\n\n/**\n * Object.assign\n *\n * @return Object Object with properties mixed in.\n */\n\nfunction mixin() {\n  var _Object;\n  if (Object.assign) return (_Object = Object).assign.apply(_Object, arguments);\n  return ObjectAssign.apply(undefined, arguments);\n}\nfunction ObjectAssign(target, firstSource) {\n  \"use strict\";\n\n  if (target === undefined || target === null) throw new TypeError(\"Cannot convert first argument to object\");\n  var to = Object(target);\n  var hasPendingException = false;\n  var pendingException;\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) continue;\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      try {\n        var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) to[nextKey] = nextSource[nextKey];\n      } catch (e) {\n        if (!hasPendingException) {\n          hasPendingException = true;\n          pendingException = e;\n        }\n      }\n    }\n    if (hasPendingException) throw pendingException;\n  }\n  return to;\n}\n\n/**\n * Adapted from String.prototype.endsWith polyfill.\n */\n\nfunction endsWith(target, searchString, position) {\n  position = position || target.length;\n  position = position - searchString.length;\n  var lastIndex = target.lastIndexOf(searchString);\n  return lastIndex !== -1 && lastIndex === position;\n}\nfunction toArray(items, columnNames) {\n  if (Array.isArray(items)) return items;\n  var rows = [];\n  for (var key in items) {\n    var item = {};\n    item[columnNames[0] || 'key'] = key;\n    item[columnNames[1] || 'value'] = items[key];\n    rows.push(item);\n  }\n  return rows;\n}","map":{"version":3,"names":["wcwidth","require","_require","padRight","padCenter","padLeft","splitIntoLines","splitLongWords","truncateString","DEFAULT_HEADING_TRANSFORM","key","toUpperCase","DEFAULT_DATA_TRANSFORM","cell","column","index","DEFAULTS","Object","freeze","maxWidth","Infinity","minWidth","columnSplitter","truncate","truncateMarker","preserveNewLines","paddingChr","showHeaders","headingTransform","dataTransform","module","exports","items","options","arguments","length","undefined","columnConfigs","config","maxLineWidth","process","stdout","columns","mixin","create","spacing","include","columnNames","toArray","forEach","item","columnName","indexOf","push","reduce","name","Math","ceil","align","map","result","replace","col","changedKeys","keys","heading","headers","unshift","width","min","cur","max","firstLine","endsWith","slice","rows","createRows","output","row","concat","rowOut","line","join","numLines","_loop","i","val","_Object","assign","apply","ObjectAssign","target","firstSource","TypeError","to","hasPendingException","pendingException","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","e","searchString","position","lastIndex","lastIndexOf","Array","isArray"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/columnify/columnify.js"],"sourcesContent":["\"use strict\";\n\nvar wcwidth = require('./width');\n\nvar _require = require('./utils');\n\nvar padRight = _require.padRight;\nvar padCenter = _require.padCenter;\nvar padLeft = _require.padLeft;\nvar splitIntoLines = _require.splitIntoLines;\nvar splitLongWords = _require.splitLongWords;\nvar truncateString = _require.truncateString;\n\nvar DEFAULT_HEADING_TRANSFORM = function DEFAULT_HEADING_TRANSFORM(key) {\n  return key.toUpperCase();\n};\n\nvar DEFAULT_DATA_TRANSFORM = function DEFAULT_DATA_TRANSFORM(cell, column, index) {\n  return cell;\n};\n\nvar DEFAULTS = Object.freeze({\n  maxWidth: Infinity,\n  minWidth: 0,\n  columnSplitter: ' ',\n  truncate: false,\n  truncateMarker: 'â€¦',\n  preserveNewLines: false,\n  paddingChr: ' ',\n  showHeaders: true,\n  headingTransform: DEFAULT_HEADING_TRANSFORM,\n  dataTransform: DEFAULT_DATA_TRANSFORM\n});\n\nmodule.exports = function (items) {\n  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  var columnConfigs = options.config || {};\n  delete options.config; // remove config so doesn't appear on every column.\n\n  var maxLineWidth = options.maxLineWidth || Infinity;\n  if (maxLineWidth === 'auto') maxLineWidth = process.stdout.columns || Infinity;\n  delete options.maxLineWidth; // this is a line control option, don't pass it to column\n\n  // Option defaults inheritance:\n  // options.config[columnName] => options => DEFAULTS\n  options = mixin({}, DEFAULTS, options);\n\n  options.config = options.config || Object.create(null);\n\n  options.spacing = options.spacing || '\\n'; // probably useless\n  options.preserveNewLines = !!options.preserveNewLines;\n  options.showHeaders = !!options.showHeaders;\n  options.columns = options.columns || options.include; // alias include/columns, prefer columns if supplied\n  var columnNames = options.columns || []; // optional user-supplied columns to include\n\n  items = toArray(items, columnNames);\n\n  // if not suppled column names, automatically determine columns from data keys\n  if (!columnNames.length) {\n    items.forEach(function (item) {\n      for (var columnName in item) {\n        if (columnNames.indexOf(columnName) === -1) columnNames.push(columnName);\n      }\n    });\n  }\n\n  // initialize column defaults (each column inherits from options.config)\n  var columns = columnNames.reduce(function (columns, columnName) {\n    var column = Object.create(options);\n    columns[columnName] = mixin(column, columnConfigs[columnName]);\n    return columns;\n  }, Object.create(null));\n\n  // sanitize column settings\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    column.name = columnName;\n    column.maxWidth = Math.ceil(column.maxWidth);\n    column.minWidth = Math.ceil(column.minWidth);\n    column.truncate = !!column.truncate;\n    column.align = column.align || 'left';\n  });\n\n  // sanitize data\n  items = items.map(function (item) {\n    var result = Object.create(null);\n    columnNames.forEach(function (columnName) {\n      // null/undefined -> ''\n      result[columnName] = item[columnName] != null ? item[columnName] : '';\n      // toString everything\n      result[columnName] = '' + result[columnName];\n      if (columns[columnName].preserveNewLines) {\n        // merge non-newline whitespace chars\n        result[columnName] = result[columnName].replace(/[^\\S\\n]/gmi, ' ');\n      } else {\n        // merge all whitespace chars\n        result[columnName] = result[columnName].replace(/\\s/gmi, ' ');\n      }\n    });\n    return result;\n  });\n\n  // transform data cells\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    items = items.map(function (item, index) {\n      var col = Object.create(column);\n      item[columnName] = column.dataTransform(item[columnName], col, index);\n\n      var changedKeys = Object.keys(col);\n      // disable default heading transform if we wrote to column.name\n      if (changedKeys.indexOf('name') !== -1) {\n        if (column.headingTransform !== DEFAULT_HEADING_TRANSFORM) return;\n        column.headingTransform = function (heading) {\n          return heading;\n        };\n      }\n      changedKeys.forEach(function (key) {\n        return column[key] = col[key];\n      });\n      return item;\n    });\n  });\n\n  // add headers\n  var headers = {};\n  if (options.showHeaders) {\n    columnNames.forEach(function (columnName) {\n      var column = columns[columnName];\n\n      if (!column.showHeaders) {\n        headers[columnName] = '';\n        return;\n      }\n\n      headers[columnName] = column.headingTransform(column.name);\n    });\n    items.unshift(headers);\n  }\n  // get actual max-width between min & max\n  // based on length of data in columns\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    column.width = items.map(function (item) {\n      return item[columnName];\n    }).reduce(function (min, cur) {\n      // if already at maxWidth don't bother testing\n      if (min >= column.maxWidth) return min;\n      return Math.max(min, Math.min(column.maxWidth, Math.max(column.minWidth, wcwidth(cur))));\n    }, 0);\n  });\n\n  // split long words so they can break onto multiple lines\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    items = items.map(function (item) {\n      item[columnName] = splitLongWords(item[columnName], column.width, column.truncateMarker);\n      return item;\n    });\n  });\n\n  // wrap long lines. each item is now an array of lines.\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    items = items.map(function (item, index) {\n      var cell = item[columnName];\n      item[columnName] = splitIntoLines(cell, column.width);\n\n      // if truncating required, only include first line + add truncation char\n      if (column.truncate && item[columnName].length > 1) {\n        item[columnName] = splitIntoLines(cell, column.width - wcwidth(column.truncateMarker));\n        var firstLine = item[columnName][0];\n        if (!endsWith(firstLine, column.truncateMarker)) item[columnName][0] += column.truncateMarker;\n        item[columnName] = item[columnName].slice(0, 1);\n      }\n      return item;\n    });\n  });\n\n  // recalculate column widths from truncated output/lines\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    column.width = items.map(function (item) {\n      return item[columnName].reduce(function (min, cur) {\n        if (min >= column.maxWidth) return min;\n        return Math.max(min, Math.min(column.maxWidth, Math.max(column.minWidth, wcwidth(cur))));\n      }, 0);\n    }).reduce(function (min, cur) {\n      if (min >= column.maxWidth) return min;\n      return Math.max(min, Math.min(column.maxWidth, Math.max(column.minWidth, cur)));\n    }, 0);\n  });\n\n  var rows = createRows(items, columns, columnNames, options.paddingChr); // merge lines into rows\n  // conceive output\n  return rows.reduce(function (output, row) {\n    return output.concat(row.reduce(function (rowOut, line) {\n      return rowOut.concat(line.join(options.columnSplitter));\n    }, []));\n  }, []).map(function (line) {\n    return truncateString(line, maxLineWidth);\n  }).join(options.spacing);\n};\n\n/**\n * Convert wrapped lines into rows with padded values.\n *\n * @param Array items data to process\n * @param Array columns column width settings for wrapping\n * @param Array columnNames column ordering\n * @return Array items wrapped in arrays, corresponding to lines\n */\n\nfunction createRows(items, columns, columnNames, paddingChr) {\n  return items.map(function (item) {\n    var row = [];\n    var numLines = 0;\n    columnNames.forEach(function (columnName) {\n      numLines = Math.max(numLines, item[columnName].length);\n    });\n    // combine matching lines of each rows\n\n    var _loop = function _loop(i) {\n      row[i] = row[i] || [];\n      columnNames.forEach(function (columnName) {\n        var column = columns[columnName];\n        var val = item[columnName][i] || ''; // || '' ensures empty columns get padded\n        if (column.align === 'right') row[i].push(padLeft(val, column.width, paddingChr));else if (column.align === 'center' || column.align === 'centre') row[i].push(padCenter(val, column.width, paddingChr));else row[i].push(padRight(val, column.width, paddingChr));\n      });\n    };\n\n    for (var i = 0; i < numLines; i++) {\n      _loop(i);\n    }\n    return row;\n  });\n}\n\n/**\n * Object.assign\n *\n * @return Object Object with properties mixed in.\n */\n\nfunction mixin() {\n  var _Object;\n\n  if (Object.assign) return (_Object = Object).assign.apply(_Object, arguments);\n  return ObjectAssign.apply(undefined, arguments);\n}\n\nfunction ObjectAssign(target, firstSource) {\n  \"use strict\";\n\n  if (target === undefined || target === null) throw new TypeError(\"Cannot convert first argument to object\");\n\n  var to = Object(target);\n\n  var hasPendingException = false;\n  var pendingException;\n\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) continue;\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      try {\n        var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) to[nextKey] = nextSource[nextKey];\n      } catch (e) {\n        if (!hasPendingException) {\n          hasPendingException = true;\n          pendingException = e;\n        }\n      }\n    }\n\n    if (hasPendingException) throw pendingException;\n  }\n  return to;\n}\n\n/**\n * Adapted from String.prototype.endsWith polyfill.\n */\n\nfunction endsWith(target, searchString, position) {\n  position = position || target.length;\n  position = position - searchString.length;\n  var lastIndex = target.lastIndexOf(searchString);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\nfunction toArray(items, columnNames) {\n  if (Array.isArray(items)) return items;\n  var rows = [];\n  for (var key in items) {\n    var item = {};\n    item[columnNames[0] || 'key'] = key;\n    item[columnNames[1] || 'value'] = items[key];\n    rows.push(item);\n  }\n  return rows;\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}