{"ast":null,"code":"'use strict';\n\nconst path = require('path');\nconst fs = require('graceful-fs');\nconst BB = require('bluebird');\nconst gentleFs = require('gentle-fs');\nconst linkIfExists = BB.promisify(gentleFs.linkIfExists);\nconst gentleFsBinLink = BB.promisify(gentleFs.binLink);\nconst open = BB.promisify(fs.open);\nconst close = BB.promisify(fs.close);\nconst read = BB.promisify(fs.read, {\n  multiArgs: true\n});\nconst chmod = BB.promisify(fs.chmod);\nconst readFile = BB.promisify(fs.readFile);\nconst writeFileAtomic = BB.promisify(require('write-file-atomic'));\nconst normalize = require('npm-normalize-package-bin');\nmodule.exports = BB.promisify(binLinks);\nfunction binLinks(pkg, folder, global, opts, cb) {\n  pkg = normalize(pkg);\n  folder = path.resolve(folder);\n\n  // if it's global, and folder is in {prefix}/node_modules,\n  // then bins are in {prefix}/bin\n  // otherwise, then bins are in folder/../.bin\n  var parent = pkg.name && pkg.name[0] === '@' ? path.dirname(path.dirname(folder)) : path.dirname(folder);\n  var gnm = global && opts.globalDir;\n  var gtop = parent === gnm;\n  opts.log.info('linkStuff', opts.pkgId);\n  opts.log.silly('linkStuff', opts.pkgId, 'has', parent, 'as its parent node_modules');\n  if (global) opts.log.silly('linkStuff', opts.pkgId, 'is part of a global install');\n  if (gnm) opts.log.silly('linkStuff', opts.pkgId, 'is installed into a global node_modules');\n  if (gtop) opts.log.silly('linkStuff', opts.pkgId, 'is installed into the top-level global node_modules');\n  return BB.join(linkBins(pkg, folder, parent, gtop, opts), linkMans(pkg, folder, parent, gtop, opts)).asCallback(cb);\n}\nfunction isHashbangFile(file) {\n  return open(file, 'r').then(fileHandle => {\n    return read(fileHandle, Buffer.alloc(2), 0, 2, 0).spread((_, buf) => {\n      if (!hasHashbang(buf)) return [];\n      return read(fileHandle, Buffer.alloc(2048), 0, 2048, 0);\n    }).spread((_, buf) => buf && hasCR(buf), /* istanbul ignore next */() => false).finally(() => close(fileHandle));\n  }).catch( /* istanbul ignore next */() => false);\n}\nfunction hasHashbang(buf) {\n  const str = buf.toString();\n  return str.slice(0, 2) === '#!';\n}\nfunction hasCR(buf) {\n  return /^#![^\\n]+\\r\\n/.test(buf);\n}\nfunction dos2Unix(file) {\n  return readFile(file, 'utf8').then(content => {\n    return writeFileAtomic(file, content.replace(/^(#![^\\n]+)\\r\\n/, '$1\\n'));\n  });\n}\nfunction getLinkOpts(opts, gently) {\n  return Object.assign({}, opts, {\n    gently: gently\n  });\n}\nfunction linkBins(pkg, folder, parent, gtop, opts) {\n  if (!pkg.bin || !gtop && path.basename(parent) !== 'node_modules') {\n    return;\n  }\n  var linkOpts = getLinkOpts(opts, gtop && folder);\n  var execMode = parseInt('0777', 8) & ~opts.umask;\n  var binRoot = gtop ? opts.globalBin : path.resolve(parent, '.bin');\n  opts.log.verbose('linkBins', [pkg.bin, binRoot, gtop]);\n  return BB.map(Object.keys(pkg.bin), bin => {\n    var dest = path.resolve(binRoot, bin);\n    var src = path.resolve(folder, pkg.bin[bin]);\n\n    /* istanbul ignore if - that unpossible */\n    if (src.indexOf(folder) !== 0) {\n      throw new Error('invalid bin entry for package ' + pkg._id + '. key=' + bin + ', value=' + pkg.bin[bin]);\n    }\n    return linkBin(src, dest, linkOpts).then(() => {\n      // bins should always be executable.\n      // XXX skip chmod on windows?\n      return chmod(src, execMode);\n    }).then(() => {\n      return isHashbangFile(src);\n    }).then(isHashbang => {\n      if (!isHashbang) return;\n      opts.log.silly('linkBins', 'Converting line endings of hashbang file:', src);\n      return dos2Unix(src);\n    }).then(() => {\n      if (!gtop) return;\n      var dest = path.resolve(binRoot, bin);\n      var out = opts.parseable ? dest + '::' + src + ':BINFILE' : dest + ' -> ' + src;\n      if (!opts.json && !opts.parseable) {\n        opts.log.clearProgress();\n        console.log(out);\n        opts.log.showProgress();\n      }\n    }).catch(err => {\n      /* istanbul ignore next */\n      if (err.code === 'ENOENT' && opts.ignoreScripts) return;\n      throw err;\n    });\n  });\n}\nfunction linkBin(from, to, opts) {\n  // do not clobber global bins\n  if (opts.globalBin && to.indexOf(opts.globalBin) === 0) {\n    opts.clobberLinkGently = true;\n  }\n  return gentleFsBinLink(from, to, opts);\n}\nfunction linkMans(pkg, folder, parent, gtop, opts) {\n  if (!pkg.man || !gtop || process.platform === 'win32') return;\n  var manRoot = path.resolve(opts.prefix, 'share', 'man');\n  opts.log.verbose('linkMans', 'man files are', pkg.man, 'in', manRoot);\n\n  // make sure that the mans are unique.\n  // otherwise, if there are dupes, it'll fail with EEXIST\n  var set = pkg.man.reduce(function (acc, man) {\n    if (typeof man !== 'string') {\n      return acc;\n    }\n    const cleanMan = path.join('/', man).replace(/\\\\|:/g, '/').substr(1);\n    acc[path.basename(man)] = cleanMan;\n    return acc;\n  }, {});\n  var manpages = pkg.man.filter(function (man) {\n    if (typeof man !== 'string') {\n      return false;\n    }\n    const cleanMan = path.join('/', man).replace(/\\\\|:/g, '/').substr(1);\n    return set[path.basename(man)] === cleanMan;\n  });\n  return BB.map(manpages, man => {\n    opts.log.silly('linkMans', 'preparing to link', man);\n    var parseMan = man.match(/(.*\\.([0-9]+)(\\.gz)?)$/);\n    if (!parseMan) {\n      throw new Error(man + ' is not a valid name for a man file.  ' + 'Man files must end with a number, ' + 'and optionally a .gz suffix if they are compressed.');\n    }\n    var stem = parseMan[1];\n    var sxn = parseMan[2];\n    var bn = path.basename(stem);\n    var manSrc = path.resolve(folder, man);\n    /* istanbul ignore if - that unpossible */\n    if (manSrc.indexOf(folder) !== 0) {\n      throw new Error('invalid man entry for package ' + pkg._id + '. man=' + manSrc);\n    }\n    var manDest = path.join(manRoot, 'man' + sxn, bn);\n\n    // man pages should always be clobbering gently, because they are\n    // only installed for top-level global packages, so never destroy\n    // a link if it doesn't point into the folder we're linking\n    opts.clobberLinkGently = true;\n    return linkIfExists(manSrc, manDest, getLinkOpts(opts, gtop && folder));\n  });\n}","map":{"version":3,"names":["path","require","fs","BB","gentleFs","linkIfExists","promisify","gentleFsBinLink","binLink","open","close","read","multiArgs","chmod","readFile","writeFileAtomic","normalize","module","exports","binLinks","pkg","folder","global","opts","cb","resolve","parent","name","dirname","gnm","globalDir","gtop","log","info","pkgId","silly","join","linkBins","linkMans","asCallback","isHashbangFile","file","then","fileHandle","Buffer","alloc","spread","_","buf","hasHashbang","hasCR","finally","catch","str","toString","slice","test","dos2Unix","content","replace","getLinkOpts","gently","Object","assign","bin","basename","linkOpts","execMode","parseInt","umask","binRoot","globalBin","verbose","map","keys","dest","src","indexOf","Error","_id","linkBin","isHashbang","out","parseable","json","clearProgress","console","showProgress","err","code","ignoreScripts","from","to","clobberLinkGently","man","process","platform","manRoot","prefix","set","reduce","acc","cleanMan","substr","manpages","filter","parseMan","match","stem","sxn","bn","manSrc","manDest"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/bin-links/index.js"],"sourcesContent":["'use strict'\n\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst BB = require('bluebird')\nconst gentleFs = require('gentle-fs')\nconst linkIfExists = BB.promisify(gentleFs.linkIfExists)\nconst gentleFsBinLink = BB.promisify(gentleFs.binLink)\nconst open = BB.promisify(fs.open)\nconst close = BB.promisify(fs.close)\nconst read = BB.promisify(fs.read, {multiArgs: true})\nconst chmod = BB.promisify(fs.chmod)\nconst readFile = BB.promisify(fs.readFile)\nconst writeFileAtomic = BB.promisify(require('write-file-atomic'))\nconst normalize = require('npm-normalize-package-bin')\n\nmodule.exports = BB.promisify(binLinks)\n\nfunction binLinks (pkg, folder, global, opts, cb) {\n  pkg = normalize(pkg)\n  folder = path.resolve(folder)\n\n  // if it's global, and folder is in {prefix}/node_modules,\n  // then bins are in {prefix}/bin\n  // otherwise, then bins are in folder/../.bin\n  var parent = pkg.name && pkg.name[0] === '@' ? path.dirname(path.dirname(folder)) : path.dirname(folder)\n  var gnm = global && opts.globalDir\n  var gtop = parent === gnm\n\n  opts.log.info('linkStuff', opts.pkgId)\n  opts.log.silly('linkStuff', opts.pkgId, 'has', parent, 'as its parent node_modules')\n  if (global) opts.log.silly('linkStuff', opts.pkgId, 'is part of a global install')\n  if (gnm) opts.log.silly('linkStuff', opts.pkgId, 'is installed into a global node_modules')\n  if (gtop) opts.log.silly('linkStuff', opts.pkgId, 'is installed into the top-level global node_modules')\n\n  return BB.join(\n    linkBins(pkg, folder, parent, gtop, opts),\n    linkMans(pkg, folder, parent, gtop, opts)\n  ).asCallback(cb)\n}\n\nfunction isHashbangFile (file) {\n  return open(file, 'r').then(fileHandle => {\n    return read(fileHandle, Buffer.alloc(2), 0, 2, 0).spread((_, buf) => {\n      if (!hasHashbang(buf)) return []\n      return read(fileHandle, Buffer.alloc(2048), 0, 2048, 0)\n    }).spread((_, buf) => buf && hasCR(buf), /* istanbul ignore next */ () => false)\n      .finally(() => close(fileHandle))\n  }).catch(/* istanbul ignore next */ () => false)\n}\n\nfunction hasHashbang (buf) {\n  const str = buf.toString()\n  return str.slice(0, 2) === '#!'\n}\n\nfunction hasCR (buf) {\n  return /^#![^\\n]+\\r\\n/.test(buf)\n}\n\nfunction dos2Unix (file) {\n  return readFile(file, 'utf8').then(content => {\n    return writeFileAtomic(file, content.replace(/^(#![^\\n]+)\\r\\n/, '$1\\n'))\n  })\n}\n\nfunction getLinkOpts (opts, gently) {\n  return Object.assign({}, opts, { gently: gently })\n}\n\nfunction linkBins (pkg, folder, parent, gtop, opts) {\n  if (!pkg.bin || (!gtop && path.basename(parent) !== 'node_modules')) {\n    return\n  }\n  var linkOpts = getLinkOpts(opts, gtop && folder)\n  var execMode = parseInt('0777', 8) & (~opts.umask)\n  var binRoot = gtop ? opts.globalBin\n                     : path.resolve(parent, '.bin')\n  opts.log.verbose('linkBins', [pkg.bin, binRoot, gtop])\n\n  return BB.map(Object.keys(pkg.bin), bin => {\n    var dest = path.resolve(binRoot, bin)\n    var src = path.resolve(folder, pkg.bin[bin])\n\n    /* istanbul ignore if - that unpossible */\n    if (src.indexOf(folder) !== 0) {\n      throw new Error('invalid bin entry for package ' +\n        pkg._id + '. key=' + bin + ', value=' + pkg.bin[bin])\n    }\n\n    return linkBin(src, dest, linkOpts).then(() => {\n      // bins should always be executable.\n      // XXX skip chmod on windows?\n      return chmod(src, execMode)\n    }).then(() => {\n      return isHashbangFile(src)\n    }).then(isHashbang => {\n      if (!isHashbang) return\n      opts.log.silly('linkBins', 'Converting line endings of hashbang file:', src)\n      return dos2Unix(src)\n    }).then(() => {\n      if (!gtop) return\n      var dest = path.resolve(binRoot, bin)\n      var out = opts.parseable\n              ? dest + '::' + src + ':BINFILE'\n              : dest + ' -> ' + src\n\n      if (!opts.json && !opts.parseable) {\n        opts.log.clearProgress()\n        console.log(out)\n        opts.log.showProgress()\n      }\n    }).catch(err => {\n      /* istanbul ignore next */\n      if (err.code === 'ENOENT' && opts.ignoreScripts) return\n      throw err\n    })\n  })\n}\n\nfunction linkBin (from, to, opts) {\n  // do not clobber global bins\n  if (opts.globalBin && to.indexOf(opts.globalBin) === 0) {\n    opts.clobberLinkGently = true\n  }\n  return gentleFsBinLink(from, to, opts)\n}\n\nfunction linkMans (pkg, folder, parent, gtop, opts) {\n  if (!pkg.man || !gtop || process.platform === 'win32') return\n\n  var manRoot = path.resolve(opts.prefix, 'share', 'man')\n  opts.log.verbose('linkMans', 'man files are', pkg.man, 'in', manRoot)\n\n  // make sure that the mans are unique.\n  // otherwise, if there are dupes, it'll fail with EEXIST\n  var set = pkg.man.reduce(function (acc, man) {\n    if (typeof man !== 'string') {\n      return acc\n    }\n    const cleanMan = path.join('/', man).replace(/\\\\|:/g, '/').substr(1)\n    acc[path.basename(man)] = cleanMan\n    return acc\n  }, {})\n  var manpages = pkg.man.filter(function (man) {\n    if (typeof man !== 'string') {\n      return false\n    }\n    const cleanMan = path.join('/', man).replace(/\\\\|:/g, '/').substr(1)\n    return set[path.basename(man)] === cleanMan\n  })\n\n  return BB.map(manpages, man => {\n    opts.log.silly('linkMans', 'preparing to link', man)\n    var parseMan = man.match(/(.*\\.([0-9]+)(\\.gz)?)$/)\n    if (!parseMan) {\n      throw new Error(\n        man + ' is not a valid name for a man file.  ' +\n        'Man files must end with a number, ' +\n        'and optionally a .gz suffix if they are compressed.'\n      )\n    }\n\n    var stem = parseMan[1]\n    var sxn = parseMan[2]\n    var bn = path.basename(stem)\n    var manSrc = path.resolve(folder, man)\n    /* istanbul ignore if - that unpossible */\n    if (manSrc.indexOf(folder) !== 0) {\n      throw new Error('invalid man entry for package ' +\n        pkg._id + '. man=' + manSrc)\n    }\n\n    var manDest = path.join(manRoot, 'man' + sxn, bn)\n\n    // man pages should always be clobbering gently, because they are\n    // only installed for top-level global packages, so never destroy\n    // a link if it doesn't point into the folder we're linking\n    opts.clobberLinkGently = true\n\n    return linkIfExists(manSrc, manDest, getLinkOpts(opts, gtop && folder))\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}