{"ast":null,"code":"'use strict';\n\nconst BB = require('bluebird');\nconst extractStream = require('./lib/extract-stream.js');\nconst fs = require('fs');\nconst mkdirp = BB.promisify(require('mkdirp'));\nconst npa = require('npm-package-arg');\nconst optCheck = require('./lib/util/opt-check.js');\nconst path = require('path');\nconst rimraf = BB.promisify(require('rimraf'));\nconst withTarballStream = require('./lib/with-tarball-stream.js');\nconst inferOwner = require('infer-owner');\nconst chown = BB.promisify(require('chownr'));\nconst truncateAsync = BB.promisify(fs.truncate);\nconst readFileAsync = BB.promisify(fs.readFile);\nconst appendFileAsync = BB.promisify(fs.appendFile);\n\n// you used to call me on my...\nconst selfOwner = process.getuid ? {\n  uid: process.getuid(),\n  gid: process.getgid()\n} : {\n  uid: undefined,\n  gid: undefined\n};\nmodule.exports = extract;\nfunction extract(spec, dest, opts) {\n  opts = optCheck(opts);\n  spec = npa(spec, opts.where);\n  if (spec.type === 'git' && !opts.cache) {\n    throw new TypeError('Extracting git packages requires a cache folder');\n  }\n  if (typeof dest !== 'string') {\n    throw new TypeError('Extract requires a destination');\n  }\n  const startTime = Date.now();\n  return inferOwner(dest).then(_ref => {\n    let {\n      uid,\n      gid\n    } = _ref;\n    opts = opts.concat({\n      uid,\n      gid\n    });\n    return withTarballStream(spec, opts, stream => {\n      return tryExtract(spec, stream, dest, opts);\n    }).then(() => {\n      if (!opts.resolved) {\n        const pjson = path.join(dest, 'package.json');\n        return readFileAsync(pjson, 'utf8').then(str => truncateAsync(pjson).then(() => appendFileAsync(pjson, str.replace(/}\\s*$/, `\\n,\"_resolved\": ${JSON.stringify(opts.resolved || '')}\\n,\"_integrity\": ${JSON.stringify(opts.integrity || '')}\\n,\"_from\": ${JSON.stringify(spec.toString())}\\n}`))));\n      }\n    }).then(() => opts.log.silly('extract', `${spec} extracted to ${dest} (${Date.now() - startTime}ms)`));\n  });\n}\nfunction tryExtract(spec, tarStream, dest, opts) {\n  return new BB((resolve, reject) => {\n    tarStream.on('error', reject);\n    rimraf(dest).then(() => mkdirp(dest)).then(made => {\n      // respect the current ownership of unpack targets\n      // but don't try to chown if we're not root.\n      if (selfOwner.uid === 0 && typeof selfOwner.gid === 'number' && selfOwner.uid !== opts.uid && selfOwner.gid !== opts.gid) {\n        return chown(made || dest, opts.uid, opts.gid);\n      }\n    }).then(() => {\n      const xtractor = extractStream(spec, dest, opts);\n      xtractor.on('error', reject);\n      xtractor.on('close', resolve);\n      tarStream.pipe(xtractor);\n    }).catch(reject);\n  }).catch(err => {\n    if (err.code === 'EINTEGRITY') {\n      err.message = `Verification failed while extracting ${spec}:\\n${err.message}`;\n    }\n    throw err;\n  });\n}","map":{"version":3,"names":["BB","require","extractStream","fs","mkdirp","promisify","npa","optCheck","path","rimraf","withTarballStream","inferOwner","chown","truncateAsync","truncate","readFileAsync","readFile","appendFileAsync","appendFile","selfOwner","process","getuid","uid","gid","getgid","undefined","module","exports","extract","spec","dest","opts","where","type","cache","TypeError","startTime","Date","now","then","_ref","concat","stream","tryExtract","resolved","pjson","join","str","replace","JSON","stringify","integrity","toString","log","silly","tarStream","resolve","reject","on","made","xtractor","pipe","catch","err","code","message"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/pacote/extract.js"],"sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst extractStream = require('./lib/extract-stream.js')\nconst fs = require('fs')\nconst mkdirp = BB.promisify(require('mkdirp'))\nconst npa = require('npm-package-arg')\nconst optCheck = require('./lib/util/opt-check.js')\nconst path = require('path')\nconst rimraf = BB.promisify(require('rimraf'))\nconst withTarballStream = require('./lib/with-tarball-stream.js')\nconst inferOwner = require('infer-owner')\nconst chown = BB.promisify(require('chownr'))\n\nconst truncateAsync = BB.promisify(fs.truncate)\nconst readFileAsync = BB.promisify(fs.readFile)\nconst appendFileAsync = BB.promisify(fs.appendFile)\n\n// you used to call me on my...\nconst selfOwner = process.getuid ? {\n  uid: process.getuid(),\n  gid: process.getgid()\n} : {\n  uid: undefined,\n  gid: undefined\n}\n\nmodule.exports = extract\nfunction extract (spec, dest, opts) {\n  opts = optCheck(opts)\n  spec = npa(spec, opts.where)\n  if (spec.type === 'git' && !opts.cache) {\n    throw new TypeError('Extracting git packages requires a cache folder')\n  }\n  if (typeof dest !== 'string') {\n    throw new TypeError('Extract requires a destination')\n  }\n  const startTime = Date.now()\n  return inferOwner(dest).then(({ uid, gid }) => {\n    opts = opts.concat({ uid, gid })\n    return withTarballStream(spec, opts, stream => {\n      return tryExtract(spec, stream, dest, opts)\n    })\n      .then(() => {\n        if (!opts.resolved) {\n          const pjson = path.join(dest, 'package.json')\n          return readFileAsync(pjson, 'utf8')\n            .then(str => truncateAsync(pjson)\n              .then(() => appendFileAsync(pjson, str.replace(\n                /}\\s*$/,\n                `\\n,\"_resolved\": ${\n                  JSON.stringify(opts.resolved || '')\n                }\\n,\"_integrity\": ${\n                  JSON.stringify(opts.integrity || '')\n                }\\n,\"_from\": ${\n                  JSON.stringify(spec.toString())\n                }\\n}`\n              ))))\n        }\n      })\n      .then(() => opts.log.silly(\n        'extract',\n        `${spec} extracted to ${dest} (${Date.now() - startTime}ms)`\n      ))\n  })\n}\n\nfunction tryExtract (spec, tarStream, dest, opts) {\n  return new BB((resolve, reject) => {\n    tarStream.on('error', reject)\n\n    rimraf(dest)\n      .then(() => mkdirp(dest))\n      .then((made) => {\n        // respect the current ownership of unpack targets\n        // but don't try to chown if we're not root.\n        if (selfOwner.uid === 0 &&\n            typeof selfOwner.gid === 'number' &&\n            selfOwner.uid !== opts.uid && selfOwner.gid !== opts.gid) {\n          return chown(made || dest, opts.uid, opts.gid)\n        }\n      })\n      .then(() => {\n        const xtractor = extractStream(spec, dest, opts)\n        xtractor.on('error', reject)\n        xtractor.on('close', resolve)\n        tarStream.pipe(xtractor)\n      })\n      .catch(reject)\n  })\n    .catch(err => {\n      if (err.code === 'EINTEGRITY') {\n        err.message = `Verification failed while extracting ${spec}:\\n${err.message}`\n      }\n\n      throw err\n    })\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,EAAE,GAAGC,OAAO,CAAC,UAAU,CAAC;AAE9B,MAAMC,aAAa,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AACxD,MAAME,EAAE,GAAGF,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMG,MAAM,GAAGJ,EAAE,CAACK,SAAS,CAACJ,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC9C,MAAMK,GAAG,GAAGL,OAAO,CAAC,iBAAiB,CAAC;AACtC,MAAMM,QAAQ,GAAGN,OAAO,CAAC,yBAAyB,CAAC;AACnD,MAAMO,IAAI,GAAGP,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMQ,MAAM,GAAGT,EAAE,CAACK,SAAS,CAACJ,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC9C,MAAMS,iBAAiB,GAAGT,OAAO,CAAC,8BAA8B,CAAC;AACjE,MAAMU,UAAU,GAAGV,OAAO,CAAC,aAAa,CAAC;AACzC,MAAMW,KAAK,GAAGZ,EAAE,CAACK,SAAS,CAACJ,OAAO,CAAC,QAAQ,CAAC,CAAC;AAE7C,MAAMY,aAAa,GAAGb,EAAE,CAACK,SAAS,CAACF,EAAE,CAACW,QAAQ,CAAC;AAC/C,MAAMC,aAAa,GAAGf,EAAE,CAACK,SAAS,CAACF,EAAE,CAACa,QAAQ,CAAC;AAC/C,MAAMC,eAAe,GAAGjB,EAAE,CAACK,SAAS,CAACF,EAAE,CAACe,UAAU,CAAC;;AAEnD;AACA,MAAMC,SAAS,GAAGC,OAAO,CAACC,MAAM,GAAG;EACjCC,GAAG,EAAEF,OAAO,CAACC,MAAM,EAAE;EACrBE,GAAG,EAAEH,OAAO,CAACI,MAAM;AACrB,CAAC,GAAG;EACFF,GAAG,EAAEG,SAAS;EACdF,GAAG,EAAEE;AACP,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGC,OAAO;AACxB,SAASA,OAAOA,CAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAClCA,IAAI,GAAGxB,QAAQ,CAACwB,IAAI,CAAC;EACrBF,IAAI,GAAGvB,GAAG,CAACuB,IAAI,EAAEE,IAAI,CAACC,KAAK,CAAC;EAC5B,IAAIH,IAAI,CAACI,IAAI,KAAK,KAAK,IAAI,CAACF,IAAI,CAACG,KAAK,EAAE;IACtC,MAAM,IAAIC,SAAS,CAAC,iDAAiD,CAAC;EACxE;EACA,IAAI,OAAOL,IAAI,KAAK,QAAQ,EAAE;IAC5B,MAAM,IAAIK,SAAS,CAAC,gCAAgC,CAAC;EACvD;EACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,EAAE;EAC5B,OAAO3B,UAAU,CAACmB,IAAI,CAAC,CAACS,IAAI,CAACC,IAAA,IAAkB;IAAA,IAAjB;MAAElB,GAAG;MAAEC;IAAI,CAAC,GAAAiB,IAAA;IACxCT,IAAI,GAAGA,IAAI,CAACU,MAAM,CAAC;MAAEnB,GAAG;MAAEC;IAAI,CAAC,CAAC;IAChC,OAAOb,iBAAiB,CAACmB,IAAI,EAAEE,IAAI,EAAEW,MAAM,IAAI;MAC7C,OAAOC,UAAU,CAACd,IAAI,EAAEa,MAAM,EAAEZ,IAAI,EAAEC,IAAI,CAAC;IAC7C,CAAC,CAAC,CACCQ,IAAI,CAAC,MAAM;MACV,IAAI,CAACR,IAAI,CAACa,QAAQ,EAAE;QAClB,MAAMC,KAAK,GAAGrC,IAAI,CAACsC,IAAI,CAAChB,IAAI,EAAE,cAAc,CAAC;QAC7C,OAAOf,aAAa,CAAC8B,KAAK,EAAE,MAAM,CAAC,CAChCN,IAAI,CAACQ,GAAG,IAAIlC,aAAa,CAACgC,KAAK,CAAC,CAC9BN,IAAI,CAAC,MAAMtB,eAAe,CAAC4B,KAAK,EAAEE,GAAG,CAACC,OAAO,CAC5C,OAAO,EACN,mBACCC,IAAI,CAACC,SAAS,CAACnB,IAAI,CAACa,QAAQ,IAAI,EAAE,CACnC,oBACCK,IAAI,CAACC,SAAS,CAACnB,IAAI,CAACoB,SAAS,IAAI,EAAE,CACpC,eACCF,IAAI,CAACC,SAAS,CAACrB,IAAI,CAACuB,QAAQ,EAAE,CAC/B,KAAI,CACN,CAAC,CAAC,CAAC;MACV;IACF,CAAC,CAAC,CACDb,IAAI,CAAC,MAAMR,IAAI,CAACsB,GAAG,CAACC,KAAK,CACxB,SAAS,EACR,GAAEzB,IAAK,iBAAgBC,IAAK,KAAIO,IAAI,CAACC,GAAG,EAAE,GAAGF,SAAU,KAAI,CAC7D,CAAC;EACN,CAAC,CAAC;AACJ;AAEA,SAASO,UAAUA,CAAEd,IAAI,EAAE0B,SAAS,EAAEzB,IAAI,EAAEC,IAAI,EAAE;EAChD,OAAO,IAAI/B,EAAE,CAAC,CAACwD,OAAO,EAAEC,MAAM,KAAK;IACjCF,SAAS,CAACG,EAAE,CAAC,OAAO,EAAED,MAAM,CAAC;IAE7BhD,MAAM,CAACqB,IAAI,CAAC,CACTS,IAAI,CAAC,MAAMnC,MAAM,CAAC0B,IAAI,CAAC,CAAC,CACxBS,IAAI,CAAEoB,IAAI,IAAK;MACd;MACA;MACA,IAAIxC,SAAS,CAACG,GAAG,KAAK,CAAC,IACnB,OAAOH,SAAS,CAACI,GAAG,KAAK,QAAQ,IACjCJ,SAAS,CAACG,GAAG,KAAKS,IAAI,CAACT,GAAG,IAAIH,SAAS,CAACI,GAAG,KAAKQ,IAAI,CAACR,GAAG,EAAE;QAC5D,OAAOX,KAAK,CAAC+C,IAAI,IAAI7B,IAAI,EAAEC,IAAI,CAACT,GAAG,EAAES,IAAI,CAACR,GAAG,CAAC;MAChD;IACF,CAAC,CAAC,CACDgB,IAAI,CAAC,MAAM;MACV,MAAMqB,QAAQ,GAAG1D,aAAa,CAAC2B,IAAI,EAAEC,IAAI,EAAEC,IAAI,CAAC;MAChD6B,QAAQ,CAACF,EAAE,CAAC,OAAO,EAAED,MAAM,CAAC;MAC5BG,QAAQ,CAACF,EAAE,CAAC,OAAO,EAAEF,OAAO,CAAC;MAC7BD,SAAS,CAACM,IAAI,CAACD,QAAQ,CAAC;IAC1B,CAAC,CAAC,CACDE,KAAK,CAACL,MAAM,CAAC;EAClB,CAAC,CAAC,CACCK,KAAK,CAACC,GAAG,IAAI;IACZ,IAAIA,GAAG,CAACC,IAAI,KAAK,YAAY,EAAE;MAC7BD,GAAG,CAACE,OAAO,GAAI,wCAAuCpC,IAAK,MAAKkC,GAAG,CAACE,OAAQ,EAAC;IAC/E;IAEA,MAAMF,GAAG;EACX,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"script","externalDependencies":[]}