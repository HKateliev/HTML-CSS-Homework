{"ast":null,"code":"'use strict';\n\nmodule.exports = spawn;\nconst _spawn = require('child_process').spawn;\nconst EventEmitter = require('events').EventEmitter;\nlet progressEnabled;\nlet running = 0;\nfunction startRunning(log) {\n  if (progressEnabled == null) progressEnabled = log.progressEnabled;\n  if (progressEnabled) log.disableProgress();\n  ++running;\n}\nfunction stopRunning(log) {\n  --running;\n  if (progressEnabled && running === 0) log.enableProgress();\n}\nfunction willCmdOutput(stdio) {\n  if (stdio === 'inherit') return true;\n  if (!Array.isArray(stdio)) return false;\n  for (let fh = 1; fh <= 2; ++fh) {\n    if (stdio[fh] === 'inherit') return true;\n    if (stdio[fh] === 1 || stdio[fh] === 2) return true;\n  }\n  return false;\n}\nfunction spawn(cmd, args, options, log) {\n  const cmdWillOutput = willCmdOutput(options && options.stdio);\n  if (cmdWillOutput) startRunning(log);\n  const raw = _spawn(cmd, args, options);\n  const cooked = new EventEmitter();\n  raw.on('error', function (er) {\n    if (cmdWillOutput) stopRunning(log);\n    er.file = cmd;\n    cooked.emit('error', er);\n  }).on('close', function (code, signal) {\n    if (cmdWillOutput) stopRunning(log);\n    // Create ENOENT error because Node.js v8.0 will not emit\n    // an `error` event if the command could not be found.\n    if (code === 127) {\n      const er = new Error('spawn ENOENT');\n      er.code = 'ENOENT';\n      er.errno = 'ENOENT';\n      er.syscall = 'spawn';\n      er.file = cmd;\n      cooked.emit('error', er);\n    } else {\n      cooked.emit('close', code, signal);\n    }\n  });\n  cooked.stdin = raw.stdin;\n  cooked.stdout = raw.stdout;\n  cooked.stderr = raw.stderr;\n  cooked.kill = function (sig) {\n    return raw.kill(sig);\n  };\n  return cooked;\n}","map":{"version":3,"names":["module","exports","spawn","_spawn","require","EventEmitter","progressEnabled","running","startRunning","log","disableProgress","stopRunning","enableProgress","willCmdOutput","stdio","Array","isArray","fh","cmd","args","options","cmdWillOutput","raw","cooked","on","er","file","emit","code","signal","Error","errno","syscall","stdin","stdout","stderr","kill","sig"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/npm-lifecycle/lib/spawn.js"],"sourcesContent":["'use strict'\n\nmodule.exports = spawn\n\nconst _spawn = require('child_process').spawn\nconst EventEmitter = require('events').EventEmitter\n\nlet progressEnabled\nlet running = 0\n\nfunction startRunning (log) {\n  if (progressEnabled == null) progressEnabled = log.progressEnabled\n  if (progressEnabled) log.disableProgress()\n  ++running\n}\n\nfunction stopRunning (log) {\n  --running\n  if (progressEnabled && running === 0) log.enableProgress()\n}\n\nfunction willCmdOutput (stdio) {\n  if (stdio === 'inherit') return true\n  if (!Array.isArray(stdio)) return false\n  for (let fh = 1; fh <= 2; ++fh) {\n    if (stdio[fh] === 'inherit') return true\n    if (stdio[fh] === 1 || stdio[fh] === 2) return true\n  }\n  return false\n}\n\nfunction spawn (cmd, args, options, log) {\n  const cmdWillOutput = willCmdOutput(options && options.stdio)\n\n  if (cmdWillOutput) startRunning(log)\n  const raw = _spawn(cmd, args, options)\n  const cooked = new EventEmitter()\n\n  raw.on('error', function (er) {\n    if (cmdWillOutput) stopRunning(log)\n    er.file = cmd\n    cooked.emit('error', er)\n  }).on('close', function (code, signal) {\n    if (cmdWillOutput) stopRunning(log)\n    // Create ENOENT error because Node.js v8.0 will not emit\n    // an `error` event if the command could not be found.\n    if (code === 127) {\n      const er = new Error('spawn ENOENT')\n      er.code = 'ENOENT'\n      er.errno = 'ENOENT'\n      er.syscall = 'spawn'\n      er.file = cmd\n      cooked.emit('error', er)\n    } else {\n      cooked.emit('close', code, signal)\n    }\n  })\n\n  cooked.stdin = raw.stdin\n  cooked.stdout = raw.stdout\n  cooked.stderr = raw.stderr\n  cooked.kill = function (sig) { return raw.kill(sig) }\n\n  return cooked\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}