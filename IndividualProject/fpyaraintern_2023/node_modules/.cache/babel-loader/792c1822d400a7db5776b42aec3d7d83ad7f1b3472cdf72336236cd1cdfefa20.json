{"ast":null,"code":"const {\n  Sequelize,\n  DataTypes\n} = require(\"sequelize\");\nconst sequelize = new Sequelize(\"postgres\", \"postgres\", \"hkateliev99\", {\n  host: \"localhost\",\n  dialect: \"postgres\",\n  port: 5434\n});\nsequelize.authenticate().then(() => {\n  console.log(\"Connection established\");\n}).catch(err => {\n  console.error(\"Unable to connect to DB\", err);\n});\nconst Client = sequelize.define(\"client\", {\n  clientID: {\n    type: DataTypes.INTEGER,\n    allowNull: false,\n    primaryKey: true,\n    autoIncrement: true\n  },\n  clientUsername: {\n    type: DataTypes.STRING,\n    allowNull: false\n  },\n  clientEmail: {\n    type: DataTypes.STRING,\n    allowNull: false\n  },\n  clientPassword: {\n    type: DataTypes.INTEGER,\n    allowNull: false\n  }\n});\nsequelize.sync().then(() => {\n  console.log(\"Client table created successfully!\");\n}).catch(error => {\n  console.error(\"Unable to create table : \", error);\n});\nmodule.exports = Client;","map":{"version":3,"names":["Sequelize","DataTypes","require","sequelize","host","dialect","port","authenticate","then","console","log","catch","err","error","Client","define","clientID","type","INTEGER","allowNull","primaryKey","autoIncrement","clientUsername","STRING","clientEmail","clientPassword","sync","module","exports"],"sources":["/Users/hkateliev/Desktop/Individual Project/fpyaraintern_2023/src/models/Client/client.model.js"],"sourcesContent":["const { Sequelize, DataTypes } = require(\"sequelize\");\nconst sequelize = new Sequelize(\"postgres\", \"postgres\", \"hkateliev99\", {\n  host: \"localhost\",\n  dialect: \"postgres\",\n  port: 5434,\n});\n\nsequelize\n  .authenticate()\n  .then(() => {\n    console.log(\"Connection established\");\n  })\n  .catch((err) => {\n    console.error(\"Unable to connect to DB\", err);\n  });\n\nconst Client = sequelize.define(\"client\", {\n  clientID: {\n    type: DataTypes.INTEGER,\n    allowNull: false,\n    primaryKey: true,\n    autoIncrement: true,\n  },\n  clientUsername: {\n    type: DataTypes.STRING,\n    allowNull: false,\n  },\n  clientEmail: {\n    type: DataTypes.STRING,\n    allowNull: false,\n  },\n  clientPassword: {\n    type: DataTypes.INTEGER,\n    allowNull: false,\n  },\n});\n\nsequelize\n  .sync()\n  .then(() => {\n    console.log(\"Client table created successfully!\");\n  })\n  .catch((error) => {\n    console.error(\"Unable to create table : \", error);\n  });\n\nmodule.exports = Client;\n"],"mappings":"AAAA,MAAM;EAAEA,SAAS;EAAEC;AAAU,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;AACrD,MAAMC,SAAS,GAAG,IAAIH,SAAS,CAAC,UAAU,EAAE,UAAU,EAAE,aAAa,EAAE;EACrEI,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE,UAAU;EACnBC,IAAI,EAAE;AACR,CAAC,CAAC;AAEFH,SAAS,CACNI,YAAY,EAAE,CACdC,IAAI,CAAC,MAAM;EACVC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;AACvC,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;EACdH,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAED,GAAG,CAAC;AAC/C,CAAC,CAAC;AAEJ,MAAME,MAAM,GAAGX,SAAS,CAACY,MAAM,CAAC,QAAQ,EAAE;EACxCC,QAAQ,EAAE;IACRC,IAAI,EAAEhB,SAAS,CAACiB,OAAO;IACvBC,SAAS,EAAE,KAAK;IAChBC,UAAU,EAAE,IAAI;IAChBC,aAAa,EAAE;EACjB,CAAC;EACDC,cAAc,EAAE;IACdL,IAAI,EAAEhB,SAAS,CAACsB,MAAM;IACtBJ,SAAS,EAAE;EACb,CAAC;EACDK,WAAW,EAAE;IACXP,IAAI,EAAEhB,SAAS,CAACsB,MAAM;IACtBJ,SAAS,EAAE;EACb,CAAC;EACDM,cAAc,EAAE;IACdR,IAAI,EAAEhB,SAAS,CAACiB,OAAO;IACvBC,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEFhB,SAAS,CACNuB,IAAI,EAAE,CACNlB,IAAI,CAAC,MAAM;EACVC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;AACnD,CAAC,CAAC,CACDC,KAAK,CAAEE,KAAK,IAAK;EAChBJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;AACnD,CAAC,CAAC;AAEJc,MAAM,CAACC,OAAO,GAAGd,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}