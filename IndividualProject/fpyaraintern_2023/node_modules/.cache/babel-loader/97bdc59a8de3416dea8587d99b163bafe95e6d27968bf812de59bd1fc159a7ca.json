{"ast":null,"code":"'use strict';\n\nconst mkdirp = require('mkdirp');\nconst inferOwner = require('infer-owner');\nconst chown = require('./chown.js');\nmodule.exports = (path, cb) => {\n  // don't bother chowning if we can't anyway\n  if (process.platform === 'win32' || chown.selfOwner.uid !== 0) {\n    return mkdirp(path, cb);\n  }\n  inferOwner(path).then(owner => {\n    mkdirp(path, (er, made) => {\n      if (er || !made) {\n        cb(er, made);\n      } else {\n        chown(made || path, owner.uid, owner.gid, cb);\n      }\n    });\n  }, cb);\n};","map":{"version":3,"names":["mkdirp","require","inferOwner","chown","module","exports","path","cb","process","platform","selfOwner","uid","then","owner","er","made","gid"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/gentle-fs/lib/mkdir.js"],"sourcesContent":["'use strict'\n\nconst mkdirp = require('mkdirp')\nconst inferOwner = require('infer-owner')\nconst chown = require('./chown.js')\n\nmodule.exports = (path, cb) => {\n  // don't bother chowning if we can't anyway\n  if (process.platform === 'win32' || chown.selfOwner.uid !== 0) {\n    return mkdirp(path, cb)\n  }\n\n  inferOwner(path).then(owner => {\n    mkdirp(path, (er, made) => {\n      if (er || !made) {\n        cb(er, made)\n      } else {\n        chown(made || path, owner.uid, owner.gid, cb)\n      }\n    })\n  }, cb)\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAa,CAAC;AACzC,MAAME,KAAK,GAAGF,OAAO,CAAC,YAAY,CAAC;AAEnCG,MAAM,CAACC,OAAO,GAAG,CAACC,IAAI,EAAEC,EAAE,KAAK;EAC7B;EACA,IAAIC,OAAO,CAACC,QAAQ,KAAK,OAAO,IAAIN,KAAK,CAACO,SAAS,CAACC,GAAG,KAAK,CAAC,EAAE;IAC7D,OAAOX,MAAM,CAACM,IAAI,EAAEC,EAAE,CAAC;EACzB;EAEAL,UAAU,CAACI,IAAI,CAAC,CAACM,IAAI,CAACC,KAAK,IAAI;IAC7Bb,MAAM,CAACM,IAAI,EAAE,CAACQ,EAAE,EAAEC,IAAI,KAAK;MACzB,IAAID,EAAE,IAAI,CAACC,IAAI,EAAE;QACfR,EAAE,CAACO,EAAE,EAAEC,IAAI,CAAC;MACd,CAAC,MAAM;QACLZ,KAAK,CAACY,IAAI,IAAIT,IAAI,EAAEO,KAAK,CAACF,GAAG,EAAEE,KAAK,CAACG,GAAG,EAAET,EAAE,CAAC;MAC/C;IACF,CAAC,CAAC;EACJ,CAAC,EAAEA,EAAE,CAAC;AACR,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}