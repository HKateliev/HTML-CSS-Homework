{"ast":null,"code":"'use strict';\n\nconst path = require('path');\nconst fs = require('graceful-fs');\nconst chain = require('slide').chain;\nconst mkdir = require('./mkdir.js');\nconst rm = require('./rm.js');\nconst inferOwner = require('infer-owner');\nconst chown = require('./chown.js');\nexports = module.exports = {\n  link: link,\n  linkIfExists: linkIfExists\n};\nfunction linkIfExists(from, to, opts, cb) {\n  opts.currentIsLink = false;\n  opts.currentExists = false;\n  fs.stat(from, function (er) {\n    if (er) return cb();\n    fs.readlink(to, function (er, fromOnDisk) {\n      if (!er || er.code !== 'ENOENT') {\n        opts.currentExists = true;\n      }\n      // if the link already exists and matches what we would do,\n      // we don't need to do anything\n      if (!er) {\n        opts.currentIsLink = true;\n        var toDir = path.dirname(to);\n        var absoluteFrom = path.resolve(toDir, from);\n        var absoluteFromOnDisk = path.resolve(toDir, fromOnDisk);\n        opts.currentTarget = absoluteFromOnDisk;\n        if (absoluteFrom === absoluteFromOnDisk) return cb();\n      }\n      link(from, to, opts, cb);\n    });\n  });\n}\nfunction resolveIfSymlink(maybeSymlinkPath, cb) {\n  fs.lstat(maybeSymlinkPath, function (err, stat) {\n    if (err) return cb.apply(this, arguments);\n    if (!stat.isSymbolicLink()) return cb(null, maybeSymlinkPath);\n    fs.readlink(maybeSymlinkPath, cb);\n  });\n}\nfunction ensureFromIsNotSource(from, to, cb) {\n  resolveIfSymlink(from, function (err, fromDestination) {\n    if (err) return cb.apply(this, arguments);\n    if (path.resolve(path.dirname(from), fromDestination) === path.resolve(to)) {\n      return cb(new Error('Link target resolves to the same directory as link source: ' + to));\n    }\n    cb.apply(this, arguments);\n  });\n}\nfunction link(from, to, opts, cb) {\n  to = path.resolve(to);\n  opts.base = path.dirname(to);\n  var absTarget = path.resolve(opts.base, from);\n  var relativeTarget = path.relative(opts.base, absTarget);\n  var target = opts.absolute ? absTarget : relativeTarget;\n  const tasks = [[ensureFromIsNotSource, absTarget, to], [fs, 'stat', absTarget], [clobberLinkGently, from, to, opts], [mkdir, path.dirname(to)], [fs, 'symlink', target, to, 'junction']];\n  if (chown.selfOwner.uid !== 0) {\n    chain(tasks, cb);\n  } else {\n    inferOwner(to).then(owner => {\n      tasks.push([chown, to, owner.uid, owner.gid]);\n      chain(tasks, cb);\n    });\n  }\n}\nexports._clobberLinkGently = clobberLinkGently;\nfunction clobberLinkGently(from, to, opts, cb) {\n  if (opts.currentExists === false) {\n    // nothing to clobber!\n    opts.log.silly('gently link', 'link does not already exist', {\n      link: to,\n      target: from\n    });\n    return cb();\n  }\n  if (!opts.clobberLinkGently || opts.force === true || !opts.gently || typeof opts.gently !== 'string') {\n    opts.log.silly('gently link', 'deleting existing link forcefully', {\n      link: to,\n      target: from,\n      force: opts.force,\n      gently: opts.gently,\n      clobberLinkGently: opts.clobberLinkGently\n    });\n    return rm(to, opts, cb);\n  }\n  if (!opts.currentIsLink) {\n    opts.log.verbose('gently link', 'cannot remove, not a link', to);\n    // don't delete.  it'll fail with EEXIST when it tries to symlink.\n    return cb();\n  }\n  if (opts.currentTarget.indexOf(opts.gently) === 0) {\n    opts.log.silly('gently link', 'delete existing link', to);\n    return rm(to, opts, cb);\n  } else {\n    opts.log.verbose('gently link', 'refusing to delete existing link', {\n      link: to,\n      currentTarget: opts.currentTarget,\n      newTarget: from,\n      gently: opts.gently\n    });\n    return cb();\n  }\n}","map":{"version":3,"names":["path","require","fs","chain","mkdir","rm","inferOwner","chown","exports","module","link","linkIfExists","from","to","opts","cb","currentIsLink","currentExists","stat","er","readlink","fromOnDisk","code","toDir","dirname","absoluteFrom","resolve","absoluteFromOnDisk","currentTarget","resolveIfSymlink","maybeSymlinkPath","lstat","err","apply","arguments","isSymbolicLink","ensureFromIsNotSource","fromDestination","Error","base","absTarget","relativeTarget","relative","target","absolute","tasks","clobberLinkGently","selfOwner","uid","then","owner","push","gid","_clobberLinkGently","log","silly","force","gently","verbose","indexOf","newTarget"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/gentle-fs/lib/link.js"],"sourcesContent":["'use strict'\n\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst chain = require('slide').chain\nconst mkdir = require('./mkdir.js')\nconst rm = require('./rm.js')\nconst inferOwner = require('infer-owner')\nconst chown = require('./chown.js')\n\nexports = module.exports = {\n  link: link,\n  linkIfExists: linkIfExists\n}\n\nfunction linkIfExists (from, to, opts, cb) {\n  opts.currentIsLink = false\n  opts.currentExists = false\n  fs.stat(from, function (er) {\n    if (er) return cb()\n    fs.readlink(to, function (er, fromOnDisk) {\n      if (!er || er.code !== 'ENOENT') {\n        opts.currentExists = true\n      }\n      // if the link already exists and matches what we would do,\n      // we don't need to do anything\n      if (!er) {\n        opts.currentIsLink = true\n        var toDir = path.dirname(to)\n        var absoluteFrom = path.resolve(toDir, from)\n        var absoluteFromOnDisk = path.resolve(toDir, fromOnDisk)\n        opts.currentTarget = absoluteFromOnDisk\n        if (absoluteFrom === absoluteFromOnDisk) return cb()\n      }\n      link(from, to, opts, cb)\n    })\n  })\n}\n\nfunction resolveIfSymlink (maybeSymlinkPath, cb) {\n  fs.lstat(maybeSymlinkPath, function (err, stat) {\n    if (err) return cb.apply(this, arguments)\n    if (!stat.isSymbolicLink()) return cb(null, maybeSymlinkPath)\n    fs.readlink(maybeSymlinkPath, cb)\n  })\n}\n\nfunction ensureFromIsNotSource (from, to, cb) {\n  resolveIfSymlink(from, function (err, fromDestination) {\n    if (err) return cb.apply(this, arguments)\n    if (path.resolve(path.dirname(from), fromDestination) === path.resolve(to)) {\n      return cb(new Error('Link target resolves to the same directory as link source: ' + to))\n    }\n    cb.apply(this, arguments)\n  })\n}\n\nfunction link (from, to, opts, cb) {\n  to = path.resolve(to)\n  opts.base = path.dirname(to)\n  var absTarget = path.resolve(opts.base, from)\n  var relativeTarget = path.relative(opts.base, absTarget)\n  var target = opts.absolute ? absTarget : relativeTarget\n\n  const tasks = [\n    [ensureFromIsNotSource, absTarget, to],\n    [fs, 'stat', absTarget],\n    [clobberLinkGently, from, to, opts],\n    [mkdir, path.dirname(to)],\n    [fs, 'symlink', target, to, 'junction']\n  ]\n\n  if (chown.selfOwner.uid !== 0) {\n    chain(tasks, cb)\n  } else {\n    inferOwner(to).then(owner => {\n      tasks.push([chown, to, owner.uid, owner.gid])\n      chain(tasks, cb)\n    })\n  }\n}\n\nexports._clobberLinkGently = clobberLinkGently\nfunction clobberLinkGently (from, to, opts, cb) {\n  if (opts.currentExists === false) {\n    // nothing to clobber!\n    opts.log.silly('gently link', 'link does not already exist', {\n      link: to,\n      target: from\n    })\n    return cb()\n  }\n\n  if (!opts.clobberLinkGently ||\n      opts.force === true ||\n      !opts.gently ||\n      typeof opts.gently !== 'string') {\n    opts.log.silly('gently link', 'deleting existing link forcefully', {\n      link: to,\n      target: from,\n      force: opts.force,\n      gently: opts.gently,\n      clobberLinkGently: opts.clobberLinkGently\n    })\n    return rm(to, opts, cb)\n  }\n\n  if (!opts.currentIsLink) {\n    opts.log.verbose('gently link', 'cannot remove, not a link', to)\n    // don't delete.  it'll fail with EEXIST when it tries to symlink.\n    return cb()\n  }\n\n  if (opts.currentTarget.indexOf(opts.gently) === 0) {\n    opts.log.silly('gently link', 'delete existing link', to)\n    return rm(to, opts, cb)\n  } else {\n    opts.log.verbose('gently link', 'refusing to delete existing link', {\n      link: to,\n      currentTarget: opts.currentTarget,\n      newTarget: from,\n      gently: opts.gently\n    })\n    return cb()\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}