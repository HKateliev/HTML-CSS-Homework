{"ast":null,"code":"'use strict';\n\nexports.generate = generate;\nexports.generateFromInstall = generateFromInstall;\nexports.submitForInstallReport = submitForInstallReport;\nexports.submitForFullReport = submitForFullReport;\nexports.printInstallReport = printInstallReport;\nexports.printParseableReport = printParseableReport;\nexports.printFullReport = printFullReport;\nconst auditReport = require('npm-audit-report');\nconst npmConfig = require('../config/figgy-config.js');\nconst figgyPudding = require('figgy-pudding');\nconst treeToShrinkwrap = require('../shrinkwrap.js').treeToShrinkwrap;\nconst packageId = require('../utils/package-id.js');\nconst output = require('../utils/output.js');\nconst npm = require('../npm.js');\nconst qw = require('qw');\nconst regFetch = require('npm-registry-fetch');\nconst perf = require('../utils/perf.js');\nconst npa = require('npm-package-arg');\nconst uuid = require('uuid');\nconst ssri = require('ssri');\nconst cloneDeep = require('lodash.clonedeep');\n\n// used when scrubbing module names/specifiers\nconst runId = uuid.v4();\nconst InstallAuditConfig = figgyPudding({\n  color: {},\n  json: {},\n  unicode: {}\n}, {\n  other(key) {\n    return /:registry$/.test(key);\n  }\n});\nfunction submitForInstallReport(auditData) {\n  const opts = InstallAuditConfig(npmConfig());\n  const scopedRegistries = [...opts.keys()].filter(k => /:registry$/.test(k)).map(k => opts[k]);\n  scopedRegistries.forEach(registry => {\n    // we don't care about the response so destroy the stream if we can, or leave it flowing\n    // so it can eventually finish and clean up after itself\n    regFetch('/-/npm/v1/security/audits/quick', opts.concat({\n      method: 'POST',\n      registry,\n      gzip: true,\n      body: auditData\n    })).then(_ => {\n      _.body.on('error', () => {});\n      if (_.body.destroy) {\n        _.body.destroy();\n      } else {\n        _.body.resume();\n      }\n    }, _ => {});\n  });\n  perf.emit('time', 'audit submit');\n  return regFetch('/-/npm/v1/security/audits/quick', opts.concat({\n    method: 'POST',\n    gzip: true,\n    body: auditData\n  })).then(response => {\n    perf.emit('timeEnd', 'audit submit');\n    perf.emit('time', 'audit body');\n    return response.json();\n  }).then(result => {\n    perf.emit('timeEnd', 'audit body');\n    return result;\n  });\n}\nfunction submitForFullReport(auditData) {\n  perf.emit('time', 'audit submit');\n  const opts = InstallAuditConfig(npmConfig());\n  return regFetch('/-/npm/v1/security/audits', opts.concat({\n    method: 'POST',\n    gzip: true,\n    body: auditData\n  })).then(response => {\n    perf.emit('timeEnd', 'audit submit');\n    perf.emit('time', 'audit body');\n    return response.json();\n  }).then(result => {\n    perf.emit('timeEnd', 'audit body');\n    result.runId = runId;\n    return result;\n  });\n}\nfunction printInstallReport(auditResult) {\n  const opts = InstallAuditConfig(npmConfig());\n  return auditReport(auditResult, {\n    reporter: 'install',\n    withColor: opts.color,\n    withUnicode: opts.unicode\n  }).then(result => output(result.report));\n}\nfunction printFullReport(auditResult) {\n  const opts = InstallAuditConfig(npmConfig());\n  return auditReport(auditResult, {\n    log: output,\n    reporter: opts.json ? 'json' : 'detail',\n    withColor: opts.color,\n    withUnicode: opts.unicode\n  }).then(result => output(result.report));\n}\nfunction printParseableReport(auditResult) {\n  const opts = InstallAuditConfig(npmConfig());\n  return auditReport(auditResult, {\n    log: output,\n    reporter: 'parseable',\n    withColor: opts.color,\n    withUnicode: opts.unicode\n  }).then(result => output(result.report));\n}\nfunction generate(shrinkwrap, requires, diffs, install, remove) {\n  const sw = cloneDeep(shrinkwrap);\n  delete sw.lockfileVersion;\n  sw.requires = scrubRequires(requires);\n  scrubDeps(sw.dependencies);\n\n  // sw.diffs = diffs || {}\n  sw.install = (install || []).map(scrubArg);\n  sw.remove = (remove || []).map(scrubArg);\n  return generateMetadata().then(md => {\n    sw.metadata = md;\n    return sw;\n  });\n}\nconst scrubKeys = qw`version`;\nconst deleteKeys = qw`from resolved`;\nfunction scrubDeps(deps) {\n  if (!deps) return;\n  Object.keys(deps).forEach(name => {\n    if (!shouldScrubName(name) && !shouldScrubSpec(name, deps[name].version)) return;\n    const value = deps[name];\n    delete deps[name];\n    deps[scrub(name)] = value;\n  });\n  Object.keys(deps).forEach(name => {\n    for (let toScrub of scrubKeys) {\n      if (!deps[name][toScrub]) continue;\n      deps[name][toScrub] = scrubSpec(name, deps[name][toScrub]);\n    }\n    for (let toDelete of deleteKeys) delete deps[name][toDelete];\n    scrubRequires(deps[name].requires);\n    scrubDeps(deps[name].dependencies);\n  });\n}\nfunction scrubRequires(reqs) {\n  if (!reqs) return reqs;\n  Object.keys(reqs).forEach(name => {\n    const spec = reqs[name];\n    if (shouldScrubName(name) || shouldScrubSpec(name, spec)) {\n      delete reqs[name];\n      reqs[scrub(name)] = scrubSpec(name, spec);\n    } else {\n      reqs[name] = scrubSpec(name, spec);\n    }\n  });\n  return reqs;\n}\nfunction getScope(name) {\n  if (name[0] === '@') return name.slice(0, name.indexOf('/'));\n}\nfunction shouldScrubName(name) {\n  const scope = getScope(name);\n  const cfg = npm.config; // avoid the no-dynamic-lookups test\n  return Boolean(scope && cfg.get(scope + ':registry'));\n}\nfunction shouldScrubSpec(name, spec) {\n  const req = npa.resolve(name, spec);\n  return !req.registry;\n}\nfunction scrubArg(arg) {\n  const req = npa(arg);\n  let name = req.name;\n  if (shouldScrubName(name) || shouldScrubSpec(name, req.rawSpec)) {\n    name = scrubName(name);\n  }\n  const spec = scrubSpec(req.name, req.rawSpec);\n  return name + '@' + spec;\n}\nfunction scrubName(name) {\n  return shouldScrubName(name) ? scrub(name) : name;\n}\nfunction scrubSpec(name, spec) {\n  const req = npa.resolve(name, spec);\n  if (req.registry) return spec;\n  if (req.type === 'git') {\n    return 'git+ssh://' + scrub(spec);\n  } else if (req.type === 'remote') {\n    return 'https://' + scrub(spec);\n  } else if (req.type === 'directory') {\n    return 'file:' + scrub(spec);\n  } else if (req.type === 'file') {\n    return 'file:' + scrub(spec) + '.tar';\n  } else {\n    return scrub(spec);\n  }\n}\nmodule.exports.scrub = scrub;\nfunction scrub(value, rid) {\n  return ssri.fromData((rid || runId) + ' ' + value, {\n    algorithms: ['sha256']\n  }).hexDigest();\n}\nfunction generateMetadata() {\n  const meta = {};\n  meta.npm_version = npm.version;\n  meta.node_version = process.version;\n  meta.platform = process.platform;\n  meta.node_env = process.env.NODE_ENV;\n  return Promise.resolve(meta);\n}\n/*\n  const head = path.resolve(npm.prefix, '.git/HEAD')\n  return readFile(head, 'utf8').then((head) => {\n    if (!head.match(/^ref: /)) {\n      meta.commit_hash = head.trim()\n      return\n    }\n    const headFile = head.replace(/^ref: /, '').trim()\n    meta.branch = headFile.replace(/^refs[/]heads[/]/, '')\n    return readFile(path.resolve(npm.prefix, '.git', headFile), 'utf8')\n  }).then((commitHash) => {\n    meta.commit_hash = commitHash.trim()\n    const proc = spawn('git', qw`diff --quiet --exit-code package.json package-lock.json`, {cwd: npm.prefix, stdio: 'ignore'})\n    return new Promise((resolve, reject) => {\n      proc.once('error', reject)\n      proc.on('exit', (code, signal) => {\n        if (signal == null) meta.state = code === 0 ? 'clean' : 'dirty'\n        resolve()\n      })\n    })\n  }).then(() => meta, () => meta)\n*/\n\nfunction generateFromInstall(tree, diffs, install, remove) {\n  const requires = {};\n  tree.requires.forEach(pkg => {\n    requires[pkg.package.name] = tree.package.dependencies[pkg.package.name] || tree.package.devDependencies[pkg.package.name] || pkg.package.version;\n  });\n  const auditInstall = (install || []).filter(a => a.name).map(packageId);\n  const auditRemove = (remove || []).filter(a => a.name).map(packageId);\n  const auditDiffs = {};\n  diffs.forEach(action => {\n    const mutation = action[0];\n    const child = action[1];\n    if (mutation !== 'add' && mutation !== 'update' && mutation !== 'remove') return;\n    if (!auditDiffs[mutation]) auditDiffs[mutation] = [];\n    if (mutation === 'add') {\n      auditDiffs[mutation].push({\n        location: child.location\n      });\n    } else if (mutation === 'update') {\n      auditDiffs[mutation].push({\n        location: child.location,\n        previous: packageId(child.oldPkg)\n      });\n    } else if (mutation === 'remove') {\n      auditDiffs[mutation].push({\n        previous: packageId(child)\n      });\n    }\n  });\n  return generate(treeToShrinkwrap(tree), requires, auditDiffs, auditInstall, auditRemove);\n}","map":{"version":3,"names":["exports","generate","generateFromInstall","submitForInstallReport","submitForFullReport","printInstallReport","printParseableReport","printFullReport","auditReport","require","npmConfig","figgyPudding","treeToShrinkwrap","packageId","output","npm","qw","regFetch","perf","npa","uuid","ssri","cloneDeep","runId","v4","InstallAuditConfig","color","json","unicode","other","key","test","auditData","opts","scopedRegistries","keys","filter","k","map","forEach","registry","concat","method","gzip","body","then","_","on","destroy","resume","emit","response","result","auditResult","reporter","withColor","withUnicode","report","log","shrinkwrap","requires","diffs","install","remove","sw","lockfileVersion","scrubRequires","scrubDeps","dependencies","scrubArg","generateMetadata","md","metadata","scrubKeys","deleteKeys","deps","Object","name","shouldScrubName","shouldScrubSpec","version","value","scrub","toScrub","scrubSpec","toDelete","reqs","spec","getScope","slice","indexOf","scope","cfg","config","Boolean","get","req","resolve","arg","rawSpec","scrubName","type","module","rid","fromData","algorithms","hexDigest","meta","npm_version","node_version","process","platform","node_env","env","NODE_ENV","Promise","tree","pkg","package","devDependencies","auditInstall","a","auditRemove","auditDiffs","action","mutation","child","push","location","previous","oldPkg"],"sources":["/Users/hkateliev/node_modules/npm/lib/install/audit.js"],"sourcesContent":["'use strict'\nexports.generate = generate\nexports.generateFromInstall = generateFromInstall\nexports.submitForInstallReport = submitForInstallReport\nexports.submitForFullReport = submitForFullReport\nexports.printInstallReport = printInstallReport\nexports.printParseableReport = printParseableReport\nexports.printFullReport = printFullReport\n\nconst auditReport = require('npm-audit-report')\nconst npmConfig = require('../config/figgy-config.js')\nconst figgyPudding = require('figgy-pudding')\nconst treeToShrinkwrap = require('../shrinkwrap.js').treeToShrinkwrap\nconst packageId = require('../utils/package-id.js')\nconst output = require('../utils/output.js')\nconst npm = require('../npm.js')\nconst qw = require('qw')\nconst regFetch = require('npm-registry-fetch')\nconst perf = require('../utils/perf.js')\nconst npa = require('npm-package-arg')\nconst uuid = require('uuid')\nconst ssri = require('ssri')\nconst cloneDeep = require('lodash.clonedeep')\n\n// used when scrubbing module names/specifiers\nconst runId = uuid.v4()\n\nconst InstallAuditConfig = figgyPudding({\n  color: {},\n  json: {},\n  unicode: {}\n}, {\n  other (key) {\n    return /:registry$/.test(key)\n  }\n})\n\nfunction submitForInstallReport (auditData) {\n  const opts = InstallAuditConfig(npmConfig())\n  const scopedRegistries = [...opts.keys()].filter(\n    k => /:registry$/.test(k)\n  ).map(k => opts[k])\n  scopedRegistries.forEach(registry => {\n    // we don't care about the response so destroy the stream if we can, or leave it flowing\n    // so it can eventually finish and clean up after itself\n    regFetch('/-/npm/v1/security/audits/quick', opts.concat({\n      method: 'POST',\n      registry,\n      gzip: true,\n      body: auditData\n    })).then(_ => {\n      _.body.on('error', () => {})\n      if (_.body.destroy) {\n        _.body.destroy()\n      } else {\n        _.body.resume()\n      }\n    }, _ => {})\n  })\n  perf.emit('time', 'audit submit')\n  return regFetch('/-/npm/v1/security/audits/quick', opts.concat({\n    method: 'POST',\n    gzip: true,\n    body: auditData\n  })).then(response => {\n    perf.emit('timeEnd', 'audit submit')\n    perf.emit('time', 'audit body')\n    return response.json()\n  }).then(result => {\n    perf.emit('timeEnd', 'audit body')\n    return result\n  })\n}\n\nfunction submitForFullReport (auditData) {\n  perf.emit('time', 'audit submit')\n  const opts = InstallAuditConfig(npmConfig())\n  return regFetch('/-/npm/v1/security/audits', opts.concat({\n    method: 'POST',\n    gzip: true,\n    body: auditData\n  })).then(response => {\n    perf.emit('timeEnd', 'audit submit')\n    perf.emit('time', 'audit body')\n    return response.json()\n  }).then(result => {\n    perf.emit('timeEnd', 'audit body')\n    result.runId = runId\n    return result\n  })\n}\n\nfunction printInstallReport (auditResult) {\n  const opts = InstallAuditConfig(npmConfig())\n  return auditReport(auditResult, {\n    reporter: 'install',\n    withColor: opts.color,\n    withUnicode: opts.unicode\n  }).then(result => output(result.report))\n}\n\nfunction printFullReport (auditResult) {\n  const opts = InstallAuditConfig(npmConfig())\n  return auditReport(auditResult, {\n    log: output,\n    reporter: opts.json ? 'json' : 'detail',\n    withColor: opts.color,\n    withUnicode: opts.unicode\n  }).then(result => output(result.report))\n}\n\nfunction printParseableReport (auditResult) {\n  const opts = InstallAuditConfig(npmConfig())\n  return auditReport(auditResult, {\n    log: output,\n    reporter: 'parseable',\n    withColor: opts.color,\n    withUnicode: opts.unicode\n  }).then(result => output(result.report))\n}\n\nfunction generate (shrinkwrap, requires, diffs, install, remove) {\n  const sw = cloneDeep(shrinkwrap)\n  delete sw.lockfileVersion\n  sw.requires = scrubRequires(requires)\n  scrubDeps(sw.dependencies)\n\n  // sw.diffs = diffs || {}\n  sw.install = (install || []).map(scrubArg)\n  sw.remove = (remove || []).map(scrubArg)\n  return generateMetadata().then((md) => {\n    sw.metadata = md\n    return sw\n  })\n}\n\nconst scrubKeys = qw`version`\nconst deleteKeys = qw`from resolved`\n\nfunction scrubDeps (deps) {\n  if (!deps) return\n  Object.keys(deps).forEach(name => {\n    if (!shouldScrubName(name) && !shouldScrubSpec(name, deps[name].version)) return\n    const value = deps[name]\n    delete deps[name]\n    deps[scrub(name)] = value\n  })\n  Object.keys(deps).forEach(name => {\n    for (let toScrub of scrubKeys) {\n      if (!deps[name][toScrub]) continue\n      deps[name][toScrub] = scrubSpec(name, deps[name][toScrub])\n    }\n    for (let toDelete of deleteKeys) delete deps[name][toDelete]\n\n    scrubRequires(deps[name].requires)\n    scrubDeps(deps[name].dependencies)\n  })\n}\n\nfunction scrubRequires (reqs) {\n  if (!reqs) return reqs\n  Object.keys(reqs).forEach(name => {\n    const spec = reqs[name]\n    if (shouldScrubName(name) || shouldScrubSpec(name, spec)) {\n      delete reqs[name]\n      reqs[scrub(name)] = scrubSpec(name, spec)\n    } else {\n      reqs[name] = scrubSpec(name, spec)\n    }\n  })\n  return reqs\n}\n\nfunction getScope (name) {\n  if (name[0] === '@') return name.slice(0, name.indexOf('/'))\n}\n\nfunction shouldScrubName (name) {\n  const scope = getScope(name)\n  const cfg = npm.config // avoid the no-dynamic-lookups test\n  return Boolean(scope && cfg.get(scope + ':registry'))\n}\nfunction shouldScrubSpec (name, spec) {\n  const req = npa.resolve(name, spec)\n  return !req.registry\n}\n\nfunction scrubArg (arg) {\n  const req = npa(arg)\n  let name = req.name\n  if (shouldScrubName(name) || shouldScrubSpec(name, req.rawSpec)) {\n    name = scrubName(name)\n  }\n  const spec = scrubSpec(req.name, req.rawSpec)\n  return name + '@' + spec\n}\n\nfunction scrubName (name) {\n  return shouldScrubName(name) ? scrub(name) : name\n}\n\nfunction scrubSpec (name, spec) {\n  const req = npa.resolve(name, spec)\n  if (req.registry) return spec\n  if (req.type === 'git') {\n    return 'git+ssh://' + scrub(spec)\n  } else if (req.type === 'remote') {\n    return 'https://' + scrub(spec)\n  } else if (req.type === 'directory') {\n    return 'file:' + scrub(spec)\n  } else if (req.type === 'file') {\n    return 'file:' + scrub(spec) + '.tar'\n  } else {\n    return scrub(spec)\n  }\n}\n\nmodule.exports.scrub = scrub\nfunction scrub (value, rid) {\n  return ssri.fromData((rid || runId) + ' ' + value, {algorithms: ['sha256']}).hexDigest()\n}\n\nfunction generateMetadata () {\n  const meta = {}\n  meta.npm_version = npm.version\n  meta.node_version = process.version\n  meta.platform = process.platform\n  meta.node_env = process.env.NODE_ENV\n\n  return Promise.resolve(meta)\n}\n/*\n  const head = path.resolve(npm.prefix, '.git/HEAD')\n  return readFile(head, 'utf8').then((head) => {\n    if (!head.match(/^ref: /)) {\n      meta.commit_hash = head.trim()\n      return\n    }\n    const headFile = head.replace(/^ref: /, '').trim()\n    meta.branch = headFile.replace(/^refs[/]heads[/]/, '')\n    return readFile(path.resolve(npm.prefix, '.git', headFile), 'utf8')\n  }).then((commitHash) => {\n    meta.commit_hash = commitHash.trim()\n    const proc = spawn('git', qw`diff --quiet --exit-code package.json package-lock.json`, {cwd: npm.prefix, stdio: 'ignore'})\n    return new Promise((resolve, reject) => {\n      proc.once('error', reject)\n      proc.on('exit', (code, signal) => {\n        if (signal == null) meta.state = code === 0 ? 'clean' : 'dirty'\n        resolve()\n      })\n    })\n  }).then(() => meta, () => meta)\n*/\n\nfunction generateFromInstall (tree, diffs, install, remove) {\n  const requires = {}\n  tree.requires.forEach((pkg) => {\n    requires[pkg.package.name] = tree.package.dependencies[pkg.package.name] || tree.package.devDependencies[pkg.package.name] || pkg.package.version\n  })\n\n  const auditInstall = (install || []).filter((a) => a.name).map(packageId)\n  const auditRemove = (remove || []).filter((a) => a.name).map(packageId)\n  const auditDiffs = {}\n  diffs.forEach((action) => {\n    const mutation = action[0]\n    const child = action[1]\n    if (mutation !== 'add' && mutation !== 'update' && mutation !== 'remove') return\n    if (!auditDiffs[mutation]) auditDiffs[mutation] = []\n    if (mutation === 'add') {\n      auditDiffs[mutation].push({location: child.location})\n    } else if (mutation === 'update') {\n      auditDiffs[mutation].push({location: child.location, previous: packageId(child.oldPkg)})\n    } else if (mutation === 'remove') {\n      auditDiffs[mutation].push({previous: packageId(child)})\n    }\n  })\n\n  return generate(treeToShrinkwrap(tree), requires, auditDiffs, auditInstall, auditRemove)\n}\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,QAAQ,GAAGA,QAAQ;AAC3BD,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB;AACjDF,OAAO,CAACG,sBAAsB,GAAGA,sBAAsB;AACvDH,OAAO,CAACI,mBAAmB,GAAGA,mBAAmB;AACjDJ,OAAO,CAACK,kBAAkB,GAAGA,kBAAkB;AAC/CL,OAAO,CAACM,oBAAoB,GAAGA,oBAAoB;AACnDN,OAAO,CAACO,eAAe,GAAGA,eAAe;AAEzC,MAAMC,WAAW,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC/C,MAAMC,SAAS,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AACtD,MAAME,YAAY,GAAGF,OAAO,CAAC,eAAe,CAAC;AAC7C,MAAMG,gBAAgB,GAAGH,OAAO,CAAC,kBAAkB,CAAC,CAACG,gBAAgB;AACrE,MAAMC,SAAS,GAAGJ,OAAO,CAAC,wBAAwB,CAAC;AACnD,MAAMK,MAAM,GAAGL,OAAO,CAAC,oBAAoB,CAAC;AAC5C,MAAMM,GAAG,GAAGN,OAAO,CAAC,WAAW,CAAC;AAChC,MAAMO,EAAE,GAAGP,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMQ,QAAQ,GAAGR,OAAO,CAAC,oBAAoB,CAAC;AAC9C,MAAMS,IAAI,GAAGT,OAAO,CAAC,kBAAkB,CAAC;AACxC,MAAMU,GAAG,GAAGV,OAAO,CAAC,iBAAiB,CAAC;AACtC,MAAMW,IAAI,GAAGX,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMY,IAAI,GAAGZ,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMa,SAAS,GAAGb,OAAO,CAAC,kBAAkB,CAAC;;AAE7C;AACA,MAAMc,KAAK,GAAGH,IAAI,CAACI,EAAE,EAAE;AAEvB,MAAMC,kBAAkB,GAAGd,YAAY,CAAC;EACtCe,KAAK,EAAE,CAAC,CAAC;EACTC,IAAI,EAAE,CAAC,CAAC;EACRC,OAAO,EAAE,CAAC;AACZ,CAAC,EAAE;EACDC,KAAKA,CAAEC,GAAG,EAAE;IACV,OAAO,YAAY,CAACC,IAAI,CAACD,GAAG,CAAC;EAC/B;AACF,CAAC,CAAC;AAEF,SAAS3B,sBAAsBA,CAAE6B,SAAS,EAAE;EAC1C,MAAMC,IAAI,GAAGR,kBAAkB,CAACf,SAAS,EAAE,CAAC;EAC5C,MAAMwB,gBAAgB,GAAG,CAAC,GAAGD,IAAI,CAACE,IAAI,EAAE,CAAC,CAACC,MAAM,CAC9CC,CAAC,IAAI,YAAY,CAACN,IAAI,CAACM,CAAC,CAAC,CAC1B,CAACC,GAAG,CAACD,CAAC,IAAIJ,IAAI,CAACI,CAAC,CAAC,CAAC;EACnBH,gBAAgB,CAACK,OAAO,CAACC,QAAQ,IAAI;IACnC;IACA;IACAvB,QAAQ,CAAC,iCAAiC,EAAEgB,IAAI,CAACQ,MAAM,CAAC;MACtDC,MAAM,EAAE,MAAM;MACdF,QAAQ;MACRG,IAAI,EAAE,IAAI;MACVC,IAAI,EAAEZ;IACR,CAAC,CAAC,CAAC,CAACa,IAAI,CAACC,CAAC,IAAI;MACZA,CAAC,CAACF,IAAI,CAACG,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;MAC5B,IAAID,CAAC,CAACF,IAAI,CAACI,OAAO,EAAE;QAClBF,CAAC,CAACF,IAAI,CAACI,OAAO,EAAE;MAClB,CAAC,MAAM;QACLF,CAAC,CAACF,IAAI,CAACK,MAAM,EAAE;MACjB;IACF,CAAC,EAAEH,CAAC,IAAI,CAAC,CAAC,CAAC;EACb,CAAC,CAAC;EACF5B,IAAI,CAACgC,IAAI,CAAC,MAAM,EAAE,cAAc,CAAC;EACjC,OAAOjC,QAAQ,CAAC,iCAAiC,EAAEgB,IAAI,CAACQ,MAAM,CAAC;IAC7DC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAEZ;EACR,CAAC,CAAC,CAAC,CAACa,IAAI,CAACM,QAAQ,IAAI;IACnBjC,IAAI,CAACgC,IAAI,CAAC,SAAS,EAAE,cAAc,CAAC;IACpChC,IAAI,CAACgC,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC;IAC/B,OAAOC,QAAQ,CAACxB,IAAI,EAAE;EACxB,CAAC,CAAC,CAACkB,IAAI,CAACO,MAAM,IAAI;IAChBlC,IAAI,CAACgC,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC;IAClC,OAAOE,MAAM;EACf,CAAC,CAAC;AACJ;AAEA,SAAShD,mBAAmBA,CAAE4B,SAAS,EAAE;EACvCd,IAAI,CAACgC,IAAI,CAAC,MAAM,EAAE,cAAc,CAAC;EACjC,MAAMjB,IAAI,GAAGR,kBAAkB,CAACf,SAAS,EAAE,CAAC;EAC5C,OAAOO,QAAQ,CAAC,2BAA2B,EAAEgB,IAAI,CAACQ,MAAM,CAAC;IACvDC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAEZ;EACR,CAAC,CAAC,CAAC,CAACa,IAAI,CAACM,QAAQ,IAAI;IACnBjC,IAAI,CAACgC,IAAI,CAAC,SAAS,EAAE,cAAc,CAAC;IACpChC,IAAI,CAACgC,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC;IAC/B,OAAOC,QAAQ,CAACxB,IAAI,EAAE;EACxB,CAAC,CAAC,CAACkB,IAAI,CAACO,MAAM,IAAI;IAChBlC,IAAI,CAACgC,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC;IAClCE,MAAM,CAAC7B,KAAK,GAAGA,KAAK;IACpB,OAAO6B,MAAM;EACf,CAAC,CAAC;AACJ;AAEA,SAAS/C,kBAAkBA,CAAEgD,WAAW,EAAE;EACxC,MAAMpB,IAAI,GAAGR,kBAAkB,CAACf,SAAS,EAAE,CAAC;EAC5C,OAAOF,WAAW,CAAC6C,WAAW,EAAE;IAC9BC,QAAQ,EAAE,SAAS;IACnBC,SAAS,EAAEtB,IAAI,CAACP,KAAK;IACrB8B,WAAW,EAAEvB,IAAI,CAACL;EACpB,CAAC,CAAC,CAACiB,IAAI,CAACO,MAAM,IAAItC,MAAM,CAACsC,MAAM,CAACK,MAAM,CAAC,CAAC;AAC1C;AAEA,SAASlD,eAAeA,CAAE8C,WAAW,EAAE;EACrC,MAAMpB,IAAI,GAAGR,kBAAkB,CAACf,SAAS,EAAE,CAAC;EAC5C,OAAOF,WAAW,CAAC6C,WAAW,EAAE;IAC9BK,GAAG,EAAE5C,MAAM;IACXwC,QAAQ,EAAErB,IAAI,CAACN,IAAI,GAAG,MAAM,GAAG,QAAQ;IACvC4B,SAAS,EAAEtB,IAAI,CAACP,KAAK;IACrB8B,WAAW,EAAEvB,IAAI,CAACL;EACpB,CAAC,CAAC,CAACiB,IAAI,CAACO,MAAM,IAAItC,MAAM,CAACsC,MAAM,CAACK,MAAM,CAAC,CAAC;AAC1C;AAEA,SAASnD,oBAAoBA,CAAE+C,WAAW,EAAE;EAC1C,MAAMpB,IAAI,GAAGR,kBAAkB,CAACf,SAAS,EAAE,CAAC;EAC5C,OAAOF,WAAW,CAAC6C,WAAW,EAAE;IAC9BK,GAAG,EAAE5C,MAAM;IACXwC,QAAQ,EAAE,WAAW;IACrBC,SAAS,EAAEtB,IAAI,CAACP,KAAK;IACrB8B,WAAW,EAAEvB,IAAI,CAACL;EACpB,CAAC,CAAC,CAACiB,IAAI,CAACO,MAAM,IAAItC,MAAM,CAACsC,MAAM,CAACK,MAAM,CAAC,CAAC;AAC1C;AAEA,SAASxD,QAAQA,CAAE0D,UAAU,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAE;EAC/D,MAAMC,EAAE,GAAG1C,SAAS,CAACqC,UAAU,CAAC;EAChC,OAAOK,EAAE,CAACC,eAAe;EACzBD,EAAE,CAACJ,QAAQ,GAAGM,aAAa,CAACN,QAAQ,CAAC;EACrCO,SAAS,CAACH,EAAE,CAACI,YAAY,CAAC;;EAE1B;EACAJ,EAAE,CAACF,OAAO,GAAG,CAACA,OAAO,IAAI,EAAE,EAAExB,GAAG,CAAC+B,QAAQ,CAAC;EAC1CL,EAAE,CAACD,MAAM,GAAG,CAACA,MAAM,IAAI,EAAE,EAAEzB,GAAG,CAAC+B,QAAQ,CAAC;EACxC,OAAOC,gBAAgB,EAAE,CAACzB,IAAI,CAAE0B,EAAE,IAAK;IACrCP,EAAE,CAACQ,QAAQ,GAAGD,EAAE;IAChB,OAAOP,EAAE;EACX,CAAC,CAAC;AACJ;AAEA,MAAMS,SAAS,GAAGzD,EAAG,SAAQ;AAC7B,MAAM0D,UAAU,GAAG1D,EAAG,eAAc;AAEpC,SAASmD,SAASA,CAAEQ,IAAI,EAAE;EACxB,IAAI,CAACA,IAAI,EAAE;EACXC,MAAM,CAACzC,IAAI,CAACwC,IAAI,CAAC,CAACpC,OAAO,CAACsC,IAAI,IAAI;IAChC,IAAI,CAACC,eAAe,CAACD,IAAI,CAAC,IAAI,CAACE,eAAe,CAACF,IAAI,EAAEF,IAAI,CAACE,IAAI,CAAC,CAACG,OAAO,CAAC,EAAE;IAC1E,MAAMC,KAAK,GAAGN,IAAI,CAACE,IAAI,CAAC;IACxB,OAAOF,IAAI,CAACE,IAAI,CAAC;IACjBF,IAAI,CAACO,KAAK,CAACL,IAAI,CAAC,CAAC,GAAGI,KAAK;EAC3B,CAAC,CAAC;EACFL,MAAM,CAACzC,IAAI,CAACwC,IAAI,CAAC,CAACpC,OAAO,CAACsC,IAAI,IAAI;IAChC,KAAK,IAAIM,OAAO,IAAIV,SAAS,EAAE;MAC7B,IAAI,CAACE,IAAI,CAACE,IAAI,CAAC,CAACM,OAAO,CAAC,EAAE;MAC1BR,IAAI,CAACE,IAAI,CAAC,CAACM,OAAO,CAAC,GAAGC,SAAS,CAACP,IAAI,EAAEF,IAAI,CAACE,IAAI,CAAC,CAACM,OAAO,CAAC,CAAC;IAC5D;IACA,KAAK,IAAIE,QAAQ,IAAIX,UAAU,EAAE,OAAOC,IAAI,CAACE,IAAI,CAAC,CAACQ,QAAQ,CAAC;IAE5DnB,aAAa,CAACS,IAAI,CAACE,IAAI,CAAC,CAACjB,QAAQ,CAAC;IAClCO,SAAS,CAACQ,IAAI,CAACE,IAAI,CAAC,CAACT,YAAY,CAAC;EACpC,CAAC,CAAC;AACJ;AAEA,SAASF,aAAaA,CAAEoB,IAAI,EAAE;EAC5B,IAAI,CAACA,IAAI,EAAE,OAAOA,IAAI;EACtBV,MAAM,CAACzC,IAAI,CAACmD,IAAI,CAAC,CAAC/C,OAAO,CAACsC,IAAI,IAAI;IAChC,MAAMU,IAAI,GAAGD,IAAI,CAACT,IAAI,CAAC;IACvB,IAAIC,eAAe,CAACD,IAAI,CAAC,IAAIE,eAAe,CAACF,IAAI,EAAEU,IAAI,CAAC,EAAE;MACxD,OAAOD,IAAI,CAACT,IAAI,CAAC;MACjBS,IAAI,CAACJ,KAAK,CAACL,IAAI,CAAC,CAAC,GAAGO,SAAS,CAACP,IAAI,EAAEU,IAAI,CAAC;IAC3C,CAAC,MAAM;MACLD,IAAI,CAACT,IAAI,CAAC,GAAGO,SAAS,CAACP,IAAI,EAAEU,IAAI,CAAC;IACpC;EACF,CAAC,CAAC;EACF,OAAOD,IAAI;AACb;AAEA,SAASE,QAAQA,CAAEX,IAAI,EAAE;EACvB,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,OAAOA,IAAI,CAACY,KAAK,CAAC,CAAC,EAAEZ,IAAI,CAACa,OAAO,CAAC,GAAG,CAAC,CAAC;AAC9D;AAEA,SAASZ,eAAeA,CAAED,IAAI,EAAE;EAC9B,MAAMc,KAAK,GAAGH,QAAQ,CAACX,IAAI,CAAC;EAC5B,MAAMe,GAAG,GAAG7E,GAAG,CAAC8E,MAAM,EAAC;EACvB,OAAOC,OAAO,CAACH,KAAK,IAAIC,GAAG,CAACG,GAAG,CAACJ,KAAK,GAAG,WAAW,CAAC,CAAC;AACvD;AACA,SAASZ,eAAeA,CAAEF,IAAI,EAAEU,IAAI,EAAE;EACpC,MAAMS,GAAG,GAAG7E,GAAG,CAAC8E,OAAO,CAACpB,IAAI,EAAEU,IAAI,CAAC;EACnC,OAAO,CAACS,GAAG,CAACxD,QAAQ;AACtB;AAEA,SAAS6B,QAAQA,CAAE6B,GAAG,EAAE;EACtB,MAAMF,GAAG,GAAG7E,GAAG,CAAC+E,GAAG,CAAC;EACpB,IAAIrB,IAAI,GAAGmB,GAAG,CAACnB,IAAI;EACnB,IAAIC,eAAe,CAACD,IAAI,CAAC,IAAIE,eAAe,CAACF,IAAI,EAAEmB,GAAG,CAACG,OAAO,CAAC,EAAE;IAC/DtB,IAAI,GAAGuB,SAAS,CAACvB,IAAI,CAAC;EACxB;EACA,MAAMU,IAAI,GAAGH,SAAS,CAACY,GAAG,CAACnB,IAAI,EAAEmB,GAAG,CAACG,OAAO,CAAC;EAC7C,OAAOtB,IAAI,GAAG,GAAG,GAAGU,IAAI;AAC1B;AAEA,SAASa,SAASA,CAAEvB,IAAI,EAAE;EACxB,OAAOC,eAAe,CAACD,IAAI,CAAC,GAAGK,KAAK,CAACL,IAAI,CAAC,GAAGA,IAAI;AACnD;AAEA,SAASO,SAASA,CAAEP,IAAI,EAAEU,IAAI,EAAE;EAC9B,MAAMS,GAAG,GAAG7E,GAAG,CAAC8E,OAAO,CAACpB,IAAI,EAAEU,IAAI,CAAC;EACnC,IAAIS,GAAG,CAACxD,QAAQ,EAAE,OAAO+C,IAAI;EAC7B,IAAIS,GAAG,CAACK,IAAI,KAAK,KAAK,EAAE;IACtB,OAAO,YAAY,GAAGnB,KAAK,CAACK,IAAI,CAAC;EACnC,CAAC,MAAM,IAAIS,GAAG,CAACK,IAAI,KAAK,QAAQ,EAAE;IAChC,OAAO,UAAU,GAAGnB,KAAK,CAACK,IAAI,CAAC;EACjC,CAAC,MAAM,IAAIS,GAAG,CAACK,IAAI,KAAK,WAAW,EAAE;IACnC,OAAO,OAAO,GAAGnB,KAAK,CAACK,IAAI,CAAC;EAC9B,CAAC,MAAM,IAAIS,GAAG,CAACK,IAAI,KAAK,MAAM,EAAE;IAC9B,OAAO,OAAO,GAAGnB,KAAK,CAACK,IAAI,CAAC,GAAG,MAAM;EACvC,CAAC,MAAM;IACL,OAAOL,KAAK,CAACK,IAAI,CAAC;EACpB;AACF;AAEAe,MAAM,CAACtG,OAAO,CAACkF,KAAK,GAAGA,KAAK;AAC5B,SAASA,KAAKA,CAAED,KAAK,EAAEsB,GAAG,EAAE;EAC1B,OAAOlF,IAAI,CAACmF,QAAQ,CAAC,CAACD,GAAG,IAAIhF,KAAK,IAAI,GAAG,GAAG0D,KAAK,EAAE;IAACwB,UAAU,EAAE,CAAC,QAAQ;EAAC,CAAC,CAAC,CAACC,SAAS,EAAE;AAC1F;AAEA,SAASpC,gBAAgBA,CAAA,EAAI;EAC3B,MAAMqC,IAAI,GAAG,CAAC,CAAC;EACfA,IAAI,CAACC,WAAW,GAAG7F,GAAG,CAACiE,OAAO;EAC9B2B,IAAI,CAACE,YAAY,GAAGC,OAAO,CAAC9B,OAAO;EACnC2B,IAAI,CAACI,QAAQ,GAAGD,OAAO,CAACC,QAAQ;EAChCJ,IAAI,CAACK,QAAQ,GAAGF,OAAO,CAACG,GAAG,CAACC,QAAQ;EAEpC,OAAOC,OAAO,CAAClB,OAAO,CAACU,IAAI,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASzG,mBAAmBA,CAAEkH,IAAI,EAAEvD,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAE;EAC1D,MAAMH,QAAQ,GAAG,CAAC,CAAC;EACnBwD,IAAI,CAACxD,QAAQ,CAACrB,OAAO,CAAE8E,GAAG,IAAK;IAC7BzD,QAAQ,CAACyD,GAAG,CAACC,OAAO,CAACzC,IAAI,CAAC,GAAGuC,IAAI,CAACE,OAAO,CAAClD,YAAY,CAACiD,GAAG,CAACC,OAAO,CAACzC,IAAI,CAAC,IAAIuC,IAAI,CAACE,OAAO,CAACC,eAAe,CAACF,GAAG,CAACC,OAAO,CAACzC,IAAI,CAAC,IAAIwC,GAAG,CAACC,OAAO,CAACtC,OAAO;EACnJ,CAAC,CAAC;EAEF,MAAMwC,YAAY,GAAG,CAAC1D,OAAO,IAAI,EAAE,EAAE1B,MAAM,CAAEqF,CAAC,IAAKA,CAAC,CAAC5C,IAAI,CAAC,CAACvC,GAAG,CAACzB,SAAS,CAAC;EACzE,MAAM6G,WAAW,GAAG,CAAC3D,MAAM,IAAI,EAAE,EAAE3B,MAAM,CAAEqF,CAAC,IAAKA,CAAC,CAAC5C,IAAI,CAAC,CAACvC,GAAG,CAACzB,SAAS,CAAC;EACvE,MAAM8G,UAAU,GAAG,CAAC,CAAC;EACrB9D,KAAK,CAACtB,OAAO,CAAEqF,MAAM,IAAK;IACxB,MAAMC,QAAQ,GAAGD,MAAM,CAAC,CAAC,CAAC;IAC1B,MAAME,KAAK,GAAGF,MAAM,CAAC,CAAC,CAAC;IACvB,IAAIC,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,KAAK,QAAQ,EAAE;IAC1E,IAAI,CAACF,UAAU,CAACE,QAAQ,CAAC,EAAEF,UAAU,CAACE,QAAQ,CAAC,GAAG,EAAE;IACpD,IAAIA,QAAQ,KAAK,KAAK,EAAE;MACtBF,UAAU,CAACE,QAAQ,CAAC,CAACE,IAAI,CAAC;QAACC,QAAQ,EAAEF,KAAK,CAACE;MAAQ,CAAC,CAAC;IACvD,CAAC,MAAM,IAAIH,QAAQ,KAAK,QAAQ,EAAE;MAChCF,UAAU,CAACE,QAAQ,CAAC,CAACE,IAAI,CAAC;QAACC,QAAQ,EAAEF,KAAK,CAACE,QAAQ;QAAEC,QAAQ,EAAEpH,SAAS,CAACiH,KAAK,CAACI,MAAM;MAAC,CAAC,CAAC;IAC1F,CAAC,MAAM,IAAIL,QAAQ,KAAK,QAAQ,EAAE;MAChCF,UAAU,CAACE,QAAQ,CAAC,CAACE,IAAI,CAAC;QAACE,QAAQ,EAAEpH,SAAS,CAACiH,KAAK;MAAC,CAAC,CAAC;IACzD;EACF,CAAC,CAAC;EAEF,OAAO7H,QAAQ,CAACW,gBAAgB,CAACwG,IAAI,CAAC,EAAExD,QAAQ,EAAE+D,UAAU,EAAEH,YAAY,EAAEE,WAAW,CAAC;AAC1F"},"metadata":{},"sourceType":"script","externalDependencies":[]}