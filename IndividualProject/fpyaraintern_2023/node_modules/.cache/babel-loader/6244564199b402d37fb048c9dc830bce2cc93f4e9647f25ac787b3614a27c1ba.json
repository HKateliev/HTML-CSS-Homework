{"ast":null,"code":"'use strict';\n\nconst duck = require('protoduck');\nconst Fetcher = duck.define(['spec', 'opts', 'manifest'], {\n  packument: ['spec', 'opts'],\n  manifest: ['spec', 'opts'],\n  tarball: ['spec', 'opts'],\n  fromManifest: ['manifest', 'spec', 'opts'],\n  clearMemoized() {}\n}, {\n  name: 'Fetcher'\n});\nmodule.exports = Fetcher;\nmodule.exports.packument = packument;\nfunction packument(spec, opts) {\n  const fetcher = getFetcher(spec.type);\n  return fetcher.packument(spec, opts);\n}\nmodule.exports.manifest = manifest;\nfunction manifest(spec, opts) {\n  const fetcher = getFetcher(spec.type);\n  return fetcher.manifest(spec, opts);\n}\nmodule.exports.tarball = tarball;\nfunction tarball(spec, opts) {\n  return getFetcher(spec.type).tarball(spec, opts);\n}\nmodule.exports.fromManifest = fromManifest;\nfunction fromManifest(manifest, spec, opts) {\n  return getFetcher(spec.type).fromManifest(manifest, spec, opts);\n}\nconst fetchers = {};\nmodule.exports.clearMemoized = clearMemoized;\nfunction clearMemoized() {\n  Object.keys(fetchers).forEach(k => {\n    fetchers[k].clearMemoized();\n  });\n}\nfunction getFetcher(type) {\n  if (!fetchers[type]) {\n    // This is spelled out both to prevent sketchy stuff and to make life\n    // easier for bundlers/preprocessors.\n    switch (type) {\n      case 'alias':\n        fetchers[type] = require('./fetchers/alias');\n        break;\n      case 'directory':\n        fetchers[type] = require('./fetchers/directory');\n        break;\n      case 'file':\n        fetchers[type] = require('./fetchers/file');\n        break;\n      case 'git':\n        fetchers[type] = require('./fetchers/git');\n        break;\n      case 'hosted':\n        fetchers[type] = require('./fetchers/hosted');\n        break;\n      case 'range':\n        fetchers[type] = require('./fetchers/range');\n        break;\n      case 'remote':\n        fetchers[type] = require('./fetchers/remote');\n        break;\n      case 'tag':\n        fetchers[type] = require('./fetchers/tag');\n        break;\n      case 'version':\n        fetchers[type] = require('./fetchers/version');\n        break;\n      default:\n        throw new Error(`Invalid dependency type requested: ${type}`);\n    }\n  }\n  return fetchers[type];\n}","map":{"version":3,"names":["duck","require","Fetcher","define","packument","manifest","tarball","fromManifest","clearMemoized","name","module","exports","spec","opts","fetcher","getFetcher","type","fetchers","Object","keys","forEach","k","Error"],"sources":["/Users/hkateliev/node_modules/npm/node_modules/pacote/lib/fetch.js"],"sourcesContent":["'use strict'\n\nconst duck = require('protoduck')\n\nconst Fetcher = duck.define(['spec', 'opts', 'manifest'], {\n  packument: ['spec', 'opts'],\n  manifest: ['spec', 'opts'],\n  tarball: ['spec', 'opts'],\n  fromManifest: ['manifest', 'spec', 'opts'],\n  clearMemoized () {}\n}, { name: 'Fetcher' })\nmodule.exports = Fetcher\n\nmodule.exports.packument = packument\nfunction packument (spec, opts) {\n  const fetcher = getFetcher(spec.type)\n  return fetcher.packument(spec, opts)\n}\n\nmodule.exports.manifest = manifest\nfunction manifest (spec, opts) {\n  const fetcher = getFetcher(spec.type)\n  return fetcher.manifest(spec, opts)\n}\n\nmodule.exports.tarball = tarball\nfunction tarball (spec, opts) {\n  return getFetcher(spec.type).tarball(spec, opts)\n}\n\nmodule.exports.fromManifest = fromManifest\nfunction fromManifest (manifest, spec, opts) {\n  return getFetcher(spec.type).fromManifest(manifest, spec, opts)\n}\n\nconst fetchers = {}\n\nmodule.exports.clearMemoized = clearMemoized\nfunction clearMemoized () {\n  Object.keys(fetchers).forEach(k => {\n    fetchers[k].clearMemoized()\n  })\n}\n\nfunction getFetcher (type) {\n  if (!fetchers[type]) {\n    // This is spelled out both to prevent sketchy stuff and to make life\n    // easier for bundlers/preprocessors.\n    switch (type) {\n      case 'alias':\n        fetchers[type] = require('./fetchers/alias')\n        break\n      case 'directory':\n        fetchers[type] = require('./fetchers/directory')\n        break\n      case 'file':\n        fetchers[type] = require('./fetchers/file')\n        break\n      case 'git':\n        fetchers[type] = require('./fetchers/git')\n        break\n      case 'hosted':\n        fetchers[type] = require('./fetchers/hosted')\n        break\n      case 'range':\n        fetchers[type] = require('./fetchers/range')\n        break\n      case 'remote':\n        fetchers[type] = require('./fetchers/remote')\n        break\n      case 'tag':\n        fetchers[type] = require('./fetchers/tag')\n        break\n      case 'version':\n        fetchers[type] = require('./fetchers/version')\n        break\n      default:\n        throw new Error(`Invalid dependency type requested: ${type}`)\n    }\n  }\n  return fetchers[type]\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}